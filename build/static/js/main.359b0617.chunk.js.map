{"version":3,"sources":["Tree.js","Application/Electron.js","Application/WireFrame.js","Application/FileEntries.js","Application/HomeEntries.js","Application/Accommodation.js","Application/SpinnerBar.js","Application/ImageResizer.js","Application/OgMatrix.js","Application/ocr.js","Application/Events.js","Application/Gallery.js","Application/AllMovies.js","Application/Articles.js","Application/Socialgrps.js","Application/AboutPlaces.js","Application/Coupons.js","Application/Comments.js","Application/Posts.js","AuthConfig.js","Layout.js","App.js","serviceWorker.js","index.js"],"names":["Tree","props","items","Fragment","className","style","marginTop","leaf","to","map","item","index1","key","ipcRenderer","window","require","promiseDict","storeEntry","entryname","args","invalidate","force","Promise","resolve","reject","once","event","data","ii","length","send","e","sendEvnt","namedEvent","eventData","rtndata","ex","electronStore","init","homeEntries","saveHomeEntry","newobj","isEmpty","homePageEntries","saveHomePageEntry","appFiles","saveAppFile","exportHomeEntry","propstate","sendSync","cacheEntry","accommodations","saveAccommodation","comments","saveComment","posts","savePosts","events","filename","saveEvent","savefilename","gallaries","saveGallary","articles","saveArticles","socialgroups","saveSocialgroups","listAllMovies","nativeImg","makeImg","url","type","adjustImg","path","options","quality","origpath","OgMarkers","eventlink","OCRText","imageUrl","UploadFile","filepath","newname","meta","ListUploadFiles","FilesGrid","filterPredicate","docs","loadForm","gridcolumns","customclass","highlighted","keymap","homeselected","setHomeSelected","homepageTitle","homepageMap","exportToHome","deleteEntries","useState","delselected","setDelselected","filter","setFilter","grpfilter","setGrpFilter","page_number","setpage_number","spinner","setSpinner","postid","setPostId","exp","del","exportdelete","setExportDelete","sortedSet","Object","keys","x","sort","y","Math","ceil","buttons","setButtons","useEffect","array","colSpan","textAlign","value","onChange","target","selected","Array","_","i","onClick","savePostId","name","id","checked","htmlFor","selSet","entry","saveToHome","delObj","isDelete","fn","then","rf","removeEntries","col","textTransform","slice","onDoubleClick","color","width","isNaN","d","Date","toLocaleDateString","toLocaleTimeString","dt","WireFrame","entries","setFormobj","mode","setMode","homePage","setHomePage","refreshExportEntries","callback","homepage","newObj","k","border","padding","marginBottom","headerControl","editcontrol","FileEntries","files","setFiles","allfiles","gn","thName","val","href","substring","lastIndexOf","indexOf","token","selection","link","size","createTime","HomeEntries","homepageentries","setHomepageentries","join","tabldef","heading","liner","thumb","theater","showtimes1","prop","pagekey","entryRow","defaultaccom","desc","trigger","user","postedon","Unit","form","setForm","saveAccom","rows","placeholder","Accommodation","setHighlighted","selections","setSelections","setAccommodations","clearSelectionHighlights","refreshList","accom","position","right","top","key1","SpinnerBar","height","role","ImageResizer","minmode","setMinMode","def","err","res","basename","normalize","ArticleImg","slide","galleryThumb","optmizer","setOptimizer","cloudLiners","setCloudLines","handle","setHandle","imginter","setImginter","adjimg","setAdjImg","uploadFile","push","finally","captureImg","skipvalidation","catch","defaultValue","readOnly","line","index","OgMatrix","title","oneliner","imagelink","postlink","eventinter","setEventinter","ogref","success","ogTitle","ogDescription","ogUrl","ogImage","OCRForm","ocrLines","trim","lines","defaultEvent","readmore","tags","eventid","HeaderControl","resizer","og","ocr","addons","setAddOns","EventInputForm","Number","helperText","Events","setEvents","obj","marginLeft","defaultform","images","GalleryInputForm","saveGallery","clearHighlighted","imageform","setImageForm","spinnerImage","setSpinnerImage","delImages","setdelImages","cleanup","savetype","SaveEntry","keyid","delIndexes","parseInt","a","b","newImages","img","splice","src","alt","opacity","Gallery","galleries","setGalleries","setSelectedGallery","selectedGallery","customclassName","gallery","AllMovies","defaultArticle","article","ActicleInputForm","saveArticle","readonly","setReadOnly","EditorState","createEmpty","createWithContent","convertFromRaw","JSON","parse","wygState","setwygState","articleText","stringify","convertToRaw","getCurrentContent","editorState","wrapperClassName","editorClassName","toolbarHidden","onEditorStateChange","newstate","toolbar","image","uploadCallback","file","reader","FileReader","readAsDataURL","onload","result","onerror","error","getFileBase64","previewImage","Articles","selectedArticle","setSelectedArticle","setArticles","articleform","SocialGrps","AboutPlaces","Coupons","defaultComment","text","by","when","saveComm","commentid","Comments","setComments","comment","cmt","split","axios","default","savePost","uspinner","setUspinner","UploadAllFiles","formData","FormData","noempty","aryKeys","active","status","append","blob","fetch","body","method","response","json","linklist","linkKeys","cloneObj","matchlink","find","cloneFilesList","uploadfiles","header","showinlist","showallfiles","premium","visits","ip","owner","stamp","list","SelecUploadFiles","multiple","fileobj","UplodFileChange","overrideid","formcreate","post","postjson","reason","console","log","savepost","Posts","setPosts","updtobj","firebase","firebaseui","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthUI","withRouter","history","setLeaf","listen","location","action","pathname","margin","exact","component","App","float","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2QAsCeA,MAlCf,SAAcC,GAAM,IAGTC,EAASD,EAATC,MACP,OACI,kBAAC,IAAMC,SAAP,KACI,wBAAIC,UAAU,OAAOC,MAAO,CAACC,UAAU,SACnC,wBAAIF,UAAU,YAAYC,MAAO,CAAC,WAAe,MAAQJ,EAAMM,KAAQ,OAAS,WAAW,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEzFN,EAAMO,IAAI,SAACC,EAAMC,GAAP,OAAgB,wBAAIP,UAAU,YAAYQ,IAAKD,EAAQN,MAAO,CAAC,WAAe,IAAMK,IAAST,EAAMM,KAAQ,OAAS,WAC1H,kBAAC,IAAD,CAAMC,GAAI,IAAME,GAAOA,S,OCdrCG,EAAeC,OAAOC,QAAQ,YAA9BF,YACFG,EAAc,GAEpB,SAASC,EAAWC,EAAWC,GAAkC,IAA5BC,EAA2B,uDAAhB,GAAIC,EAAY,wDAiB5D,OAfIL,EAAYE,IAAyC,OAA3BF,EAAYE,KAAuBG,IAC7DL,EAAYE,GAAa,IAAII,QAAQ,SAACC,EAASC,GAC3C,IACQX,EAAYY,KAAZ,UAAoBP,EAApB,aAA0C,SAACQ,EAAOC,GAC9C,IAAI,IAAIC,EAAK,EAAGA,EAAKR,EAAWS,OAAQD,IACpCZ,EAAYI,EAAWQ,IAAO,KAClCL,EAAQI,KAEZd,EAAYiB,KAAZ,UAAoBZ,GAAaC,GAEzC,MAAMY,GACFP,EAAOO,OAIZf,EAAYE,GASvB,SAASc,EAASC,EAAYC,GAC1B,OAAO,IAAIZ,QAAQ,SAACC,EAASC,GACzB,IAEIX,EAAYY,KAAZ,UAAoBQ,EAApB,aAA2C,SAACP,EAAOS,GAC/CZ,EAAQY,KAEZtB,EAAYiB,KAAKG,EAAYC,GAIjC,MAAME,GACFZ,EAAOY,MA0BZ,IAAMC,EAAgB,CACzBC,KAAO,SAAAnB,GAAI,OAAEF,EAAW,OAAQE,IAChCoB,YAAc,kBAAItB,EAAW,eAAgB,KAC7CuB,cAAgB,SAACC,EAAQC,GAAT,OAAmBzB,EAAW,kBAAmB,CAACwB,SAAQC,WAAU,CAAC,iBAAiB,IAEtGC,gBAAkB,kBAAI1B,EAAW,oBAAqB,KACtD2B,kBAAoB,SAACH,EAAQC,GAAT,OAAmBzB,EAAW,uBAAwB,CAACwB,SAAQC,WAAU,CAAC,sBAAsB,IAEpHG,SAAW,kBAAI5B,EAAW,YAAa,KACvC6B,YAAc,SAACL,EAAQC,GAAT,OAAmBzB,EAAW,gBAAiB,CAACwB,SAAQC,WAAU,CAAC,cAAc,IAE/FK,gBAAkB,SAAAC,GAAS,OArD/B,SAAoB9B,EAAW8B,GAC3B,OAAOnC,EAAYoC,SAAS/B,EAAW8B,GAoDRE,CAAW,sBAAuBF,IAEjEG,eAAe,kBAAIlC,EAAW,gBAAiB,KAC/CmC,kBAAoB,SAACX,EAAQC,GAAT,OAAmBzB,EAAW,mBAAoB,CAACwB,SAAQC,WAAU,CAAC,kBAAkB,IAE5GW,SAAS,kBAAIpC,EAAW,eAAgB,KACxCqC,YAAc,SAACb,EAAQC,GAAT,OAAmBzB,EAAW,oBAAqB,CAACwB,SAAQC,WAAU,CAAC,iBAAiB,IAEtGa,MAAM,kBAAKtC,EAAW,YAAa,KACnCuC,UAAY,SAACf,EAAQC,GAAT,OAAmBzB,EAAW,iBAAkB,CAACwB,SAAQC,WAAU,CAAC,cAAc,IAE9Fe,OAAO,SAACC,GAAD,OAAYzC,EAAYyC,EAA6BA,EAAW,GAA7B,gBAAiC,KAC3EC,UAAU,SAACD,EAAUE,EAAcnB,EAAQC,GAAjC,OAA2CzB,EAAY2C,EAAoCA,EAAe,GAApC,mBAAwC,CAACnB,SAAQC,WACjE,CAAEgB,EAA6BA,EAAW,GAA7B,kBAAkC,IAE/GG,UAAW,kBAAI5C,EAAW,kBAAmB,KAC7C6C,YAAY,SAACrB,EAAQC,GAAT,OAAmBzB,EAAW,qBAAsB,CAACwB,SAAQC,WAAU,CAAC,oBAAoB,IAExGqB,SAAU,kBAAI9C,EAAW,kBAAmB,KAC5C+C,aAAa,SAACvB,EAAQC,GAAT,OAAmBzB,EAAW,qBAAsB,CAACwB,SAAQC,WAAU,CAAC,oBAAoB,IAEzGuB,aAAc,kBAAIhD,EAAW,uBAAwB,KACrDiD,iBAAiB,SAACzB,EAAQC,GAAT,OAAmBzB,EAAW,4BAA6B,CAACwB,SAAQC,WAAU,CAAC,yBAAyB,IAEzHyB,cAAgB,kBAAIlD,EAAW,sBAAuB,MAG7CmD,EAAY,CACrBC,QAAU,SAACC,EAAKC,GAAN,OAxDd,SAAiBD,EAAKC,GAClB,OAAOvC,EAAS,mBAAoB,CAACsC,MAAKC,SAuDnBF,CAAQC,EAAKC,IACpCC,UAAY,SAACC,EAAMC,EAASC,GAAhB,OA7DhB,SAAmBC,EAAUF,EAASC,GAClC,OAAO3C,EAAS,sBAAuB,CAAC4C,WAAUF,UAASC,YA4DrBH,CAAUC,EAAMC,EAASC,IAC/DE,UAAY,SAAAC,GAAS,OAtDzB,SAAmBA,GACf,OAAO9C,EAAS,qBAAsB,CAACsC,IAAIQ,IAqDpBD,CAAUC,IACjCC,QAAY,SAAAC,GAAQ,OAjDxB,SAAiBA,GACb,OAAOhD,EAAS,kBAAmB,CAACgD,aAgDdD,CAAQC,IAC9BC,WAAa,SAACC,EAAUC,EAASC,GAApB,OArDjB,SAAoBF,EAAUC,EAASC,GACnC,OAAOpD,EAAS,sBAAuB,CAACkD,WAASC,UAAQC,SAoDjBH,CAAWC,EAAUC,EAASC,IACtEC,gBAAiB,kBA/CVrD,EAAS,oBAAqB,M,mkBC2BzC,SAASsD,EAAUrF,GAAO,IACfsF,EACuFtF,EADvFsF,gBAAiBC,EACsEvF,EADtEuF,KAAMC,EACgExF,EADhEwF,SAAUC,EACsDzF,EADtDyF,YAAaC,EACyC1F,EADzC0F,YAAaC,EAC4B3F,EAD5B2F,YAAaC,EACe5F,EADf4F,OAC3EC,EAA0F7F,EAA1F6F,aAAcC,EAA4E9F,EAA5E8F,gBAAiBC,EAA2D/F,EAA3D+F,cAAeC,EAA4ChG,EAA5CgG,YAAaC,EAA+BjG,EAA/BiG,aAAcC,EAAiBlG,EAAjBkG,cAFxD,EAIiBC,mBAAS,IAJ1B,mBAIdC,EAJc,KAIDC,EAJC,OAKOF,mBAAS,IALhB,mBAKdG,EALc,KAKNC,EALM,OAMaJ,mBAAS,IANtB,mBAMdK,EANc,KAMHC,EANG,OAOiBN,mBAAS,GAP1B,mBAOdO,EAPc,KAODC,EAPC,OAQSR,oBAAS,GARlB,mBAQdS,EARc,KAQLC,EARK,OASMV,mBAAS,IATf,mBASfW,EATe,KASPC,EATO,OAWmBZ,mBAAaJ,GAAmBG,EACpBH,EAAgB,CAACiB,KAAI,EAAMC,KAAI,GAAS,CAACD,KAAI,EAAOC,KAAI,GADnB,CAACD,KAAI,EAAOC,KAAI,IAXpF,mBAWdC,EAXc,KAWAC,EAXA,KAwBfC,EAAYC,OAAOC,KAAK/B,GAAMe,OAAO,SAAAiB,GAAC,OAT3B5G,EASsC4G,EAR5B,IAApBf,EAAU5E,OACF0D,EAAgB3E,EAAK2F,GAEX,SAAdE,GACQX,EAAalF,MAAU4E,EAAK5E,GAL9B,IAAAA,IAS0C6G,KAAK,SAACD,EAAEE,GAAH,OAAOF,EAAIE,IAxBtD,EAyBStB,mBAASuB,KAAKC,KAAKP,EAAUxF,OAX5C,KAdM,mBAyBdgG,EAzBc,KAyBLC,EAzBK,KAkDrBC,oBAAU,WAEND,EAAWH,KAAKC,KAAKP,EAAUxF,OAtCpB,MAuCZ,CAACwF,EAvCW,KAyCf,IA5BkBW,EAsClB,OACI,yBAAK5H,UAAU,QACX,2BAAOA,UAAW,gCAAkCuF,GAChD,+BACI,4BACI,wBAAIsC,QAASX,OAAOC,KAAK7B,GAAa7D,OAAS,EAAGxB,MAAO,CAAC6H,UAAU,SAChE,yBAAK9H,UAAU,wBACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,WACrC,2BAAOmE,KAAK,OAAOnE,UAAU,eAAe+H,MAAO5B,EAAQ6B,SAAU,SAAArG,GAAIyE,EAAUzE,EAAEsG,OAAOF,OAAQvB,EAAe,OAEvH,yBAAKxG,UAAU,yBACX,4BAAQA,UAAU,wBAAwBgI,SAAU,SAAArG,GAAC,OAAE2E,EAAa3E,EAAEsG,OAAOF,SACzE,4BAAQG,SAAS,IAAjB,gBACA,4BAAQH,MAAM,QAAd,aAGR,6BACI,wBAAI/H,UAAU,wBACT,YAAImI,MAAMV,IAAUpH,IAAK,SAAC+H,EAAGC,GAAJ,OACtB,wBAAIrI,UAAWuG,IAAgB8B,EAAI,EAAI,mBAAqB,YAAa7H,IAAK6H,EAAE,GAC5E,0BAAMrI,UAAU,YAAYsI,QAAS,SAAA3G,GAAC,OAAE6E,EAAe6B,EAAI,KAAKA,EAAI,QAKnFxI,EAAM0I,YAAc,yBAAKvI,UAAU,uBAAsB,0BAAMA,UAAU,oBAAoBoF,EAAK,YAAc,MAErH,yBAAKpF,UAAU,iBACR4F,GAAiB,yBAAK5F,UAAU,gCAC/B,2BAAOA,UAAU,mBAAmBmE,KAAK,QAAQqE,KAAK,YAAYC,GAAG,aAAaC,QAAS3B,EAAaF,IACvGmB,SAAU,SAAArG,GAAC,OAAEqF,EAAgB,EAAD,GAAKD,EAAL,CAAmBF,IAAIlF,EAAEsG,OAAOS,QAAS5B,KAAKnF,EAAEsG,OAAOS,cAEpF,2BAAO1I,UAAU,mBAAmB2I,QAAQ,cAA5C,uBAED5C,GAAiB,yBAAK/F,UAAU,gCAC/B,2BAAOA,UAAU,mBAAmBmE,KAAK,QAAQqE,KAAK,YAAYC,GAAG,aAAcC,QAAS3B,EAAaD,IACxGkB,SAAU,SAAArG,GAAC,OAAEqF,EAAgB,EAAD,GAAKD,EAAL,CAAmBD,IAAInF,EAAEsG,OAAOS,QAAS7B,KAAKlF,EAAEsG,OAAOS,cAEpF,2BAAO1I,UAAU,mBAAmB2I,QAAQ,cAA5C,oBAEF5B,EAAaF,KAAOE,EAAaD,MAAQ,yBAAK9G,UAAU,gCACtD,4BAAQA,UAAU,oBAAoBsI,QAAS,WACxCvB,EAAaF,IA/EjC,WACf,IAAM+B,EAAS1B,OAAOC,KAAKzB,GAAcS,OAAO,SAAAiB,GAAC,OAAE1B,EAAa0B,MAAQhC,EAAKgC,KAAI/G,IAAI,SAAAG,GAAG,MAAG,CAACA,MAAKqI,MAAQhD,EAAcA,EAAYT,EAAK5E,IAAQ4E,EAAK5E,MACrJkG,GAAW,GACXZ,EAAa8C,EAAQ,kBAAIlC,GAAW,KA6EAoC,GA3ElB,WAClB,IAAMF,EAAS1B,OAAOC,KAAKlB,GAAaE,OAAO,SAAAiB,GAAC,OAAEnB,EAAYmB,KAC9D,GAAGwB,EAAOnH,OAAS,EACnB,CACIiF,GAAW,GAEX,IADA,IAAMqC,EAAS,GACPV,EAAI,EAAGA,EAAIO,EAAOnH,OAAQ4G,IAClCU,EAAOH,EAAOP,IAAMO,EAAOP,GAC3BU,EAAOC,UAAW,EAClBjD,EAAckD,GAAGF,GAAQ,GAAOG,KAAK,WACjCxC,GAAW,GACXX,EAAcoD,QAkEcC,KAEH3C,GAAW,0BAAMzG,UAAU,qCANhC,eAYhB,4BACI,uCAAiBkH,OAAOC,KAAK7B,GAAajF,IAAI,SAAAgJ,GAAG,OAAG,wBAAIpJ,MAAO,CAACqJ,cAAc,cAAe9I,IAAK6I,GAAM/D,EAAY+D,GAAK,WAGjI,+BACwC,IAAnCnC,OAAOC,KAAKtH,EAAMuF,MAAM3D,QAAgB,4BAAI,wBAAIoG,QAAQ,KAAZ,8BAjG3CD,EAkGQX,EAlGEW,EAAM2B,MAbnB,IAa0BhD,EAAa,GAbvC,GAauDA,IAkGjClG,IAAI,SAAAG,GAAG,OACxB,wBAAIA,IAAKA,EAAKgJ,cAAe,kBAAInE,EAAS7E,IAAMR,UAAawF,EAAYhF,GAAOgF,EAAYhF,GAAO,UAC/FP,MAAO,CAACwJ,MAAQ/D,EAAalF,GAAK,QAAQ,YAC1C,wBAAIP,MAAO,CAACyJ,MAAM,UACb3C,EAAaF,KAAO,2BAAO1C,KAAK,WAAWsE,GAAIjI,EAAKgI,KAAMhI,EAAKkI,UAAWhD,EAAalF,GAAMR,UAAU,OACpGgI,SAAU,SAAArG,GAAC,OAAEgE,EAAgB,EAAD,GAAKD,EAAL,eAAoBlF,EAAKmB,EAAEsG,OAAOS,cAEjE3B,EAAaD,KAAO,2BAAO3C,KAAK,WAAWsE,GAAIjI,EAAKgI,KAAMhI,EAAKkI,UAAWzC,EAAYzF,GAAMR,UAAU,OACnGgI,SAAU,SAAArG,GAAC,OAAEuE,EAAe,EAAD,GAAKD,EAAL,eAAmBzF,GAAOkF,EAAalF,IAAemB,EAAEsG,OAAOS,cAE9F,2BAAOC,QAASnI,GAhFjC,SAACA,GACR,GAAGiF,EACC,OAAOA,EAAOjF,GAElB,GAAGmJ,MAAMnJ,GACL,OAAOA,EACX,IAAIoJ,EAAI,IAAIC,KAAS,EAAJrJ,GACjB,OAAOoJ,EAAEE,qBAAuB,IAAMF,EAAEG,qBAyEMC,CAAGxJ,KAE5B0G,OAAOC,KAAK7B,GAAajF,IAAI,SAAAgJ,GAAG,OAAG,wBAAI7I,IAAKA,EAAI6I,GAAM/D,EAAY+D,GAAKjE,EAAK5E,GAAK6I,YAKjGxJ,EAAM0I,YAAc,yBAAKvI,UAAU,+BAChC,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,YACrC,2BAAOmE,KAAK,OAAOnE,UAAU,eAAe+H,MAAOpB,EAAQqB,SAAU,SAAArG,GAAC,OAAEiF,EAAUjF,EAAEsG,OAAOF,UAC3F,4BAAQ/H,UAAU,sBAAsBsI,QAAS,SAAA3G,GAAC,OAAE9B,EAAM0I,WAAW5B,KAArE,oBAMAsD,MAhPhB,SAAmBpK,GAClB,IACUqK,EACmDrK,EADnDqK,QAAS/E,EAC0CtF,EAD1CsF,gBAAiBgF,EACyBtK,EADzBsK,WAAY7E,EACazF,EADbyF,YAAaC,EACA1F,EADA0F,YAAaC,EACb3F,EADa2F,YAAaI,EAC1B/F,EAD0B+F,cAC5EC,EAAkDhG,EAAlDgG,YAAaE,EAAqClG,EAArCkG,cAAewC,EAAsB1I,EAAtB0I,WAAY9C,EAAU5F,EAAV4F,OAFpD,EAI2BO,mBAAS,GAJpC,mBAIWoE,EAJX,KAIgBC,EAJhB,OAM4CrE,mBAAS,IANrD,mBAMWN,EANX,KAMyBC,EANzB,OAOmCK,mBAAS,IAP5C,mBAOUsE,EAPV,KAOoBC,EAPpB,KASI5C,oBAAU,WACD/B,GACD4E,EAAqB,eAC1B,IAEH,IAAMA,EAAuB,SAAAC,GACzBxI,EAAcM,kBAAkB2G,KAAK,SAAAwB,GACjCH,EAAYG,GACZ,IAAMC,EAAS,GACf,GAAKD,EAAS9E,GAGV,IADA,IAAIuB,EAAOuD,EAAS9E,GAAeO,OAAO,SAAAiB,GAAC,QAAIA,EAAEyB,QAAOxI,IAAI,SAAA+G,GAAC,OAAEA,EAAE5G,MACzDoK,EAAI,EAAGA,EAAIzD,EAAK1F,OAAOmJ,IAC3BD,EAAOxD,EAAKyD,KAAM,EAG1BjF,EAAgBgF,GAChBF,OAoBR,OACI,yBAAKzK,UAAU,iCACX,yBAAKA,UAAU,eACX,yBAAKC,MAAO,CAACyJ,MAAM,QACf,8BAAUzJ,MAAO,CAAC4K,OAAQ,iBAAiBC,QAAS,OAAQC,aAAa,QACrE,4BAAQ/K,UAAU,cAAcC,MAAO,CAAC8K,aAAa,WACrD,yBAAK/K,UAAU,OACX,yBAAKA,UAAU,aACVH,EAAMmL,cACP,6BACI,yBAAKhL,UAAU,aAEX,yBAAKA,UAAU,uBACX,4BAAQA,UAAW,QAAmB,IAAToK,EAAa,gBAAkB,eAAgB9B,QAAS,kBAAI+B,EAAQ,KAC7F,uBAAGrK,UAAU,yBADjB,gBAKDH,EAAMoL,aAAe,oCAAE,yBAAKjL,UAAU,eACzC,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,uBACX,4BAAQA,UAAW,QAAmB,IAAToK,EAAa,gBAAkB,eAAgB9B,QAAS,kBAAI+B,EAAQ,KAC7F,uBAAGrK,UAAU,yBADjB,qBAOJ,IAAPoK,GAAY,kBAAClF,EAAD,CAAWE,KAAM8E,EAAS7E,SAjClD,SAAAoD,GACb0B,EAAW,EAAD,GAAKD,EAAQzB,GAAb,CAAkBA,SAgCuDtD,gBAAiBA,EAAiBG,YAAaA,EAAaiD,WAAYA,EAC/HhD,YAAaA,EAAaC,YAAaA,EAAaO,cAAeA,EAAeF,YAAaA,EAC/FH,aAAcA,EAAcC,gBAAiBA,EAAiBC,cAAeA,EAAeE,aA9CvG,SAAC8C,EAAQ6B,GAO1BxI,EAAcO,kBAAd,KAAoC8H,EAApC,eAA+C1E,EAAegD,IAA0C,IAAjC1B,OAAOC,KAAKmD,GAAU7I,QAAcyH,KAAK,kBAAIsB,EAAqBC,MAwC7GhF,OAAQA,IACJ,IAAP2E,GAAYvK,EAAMoL,mBC5CpCC,MAlCf,SAAqBrL,GACpB,IAAD,EAE0CmG,mBAAS,IAFnD,mBAEWR,EAFX,aAG8BQ,mBAAS,KAHvC,mBAGWmF,EAHX,KAGkBC,EAHlB,KAeIzD,oBAAU,kBAJS8C,EAIO,aAHtBzG,EAAUiB,kBAAkBiE,KAAK,SAAAmC,GAAQ,OAAED,EAASC,UACpDZ,IAFe,IAAAA,GAIgB,IAEnC,IAAMa,EAAK,SAACC,EAAQC,GAChB,MAAW,OAARA,GAAyB,cAATD,EACR,uBAAGE,KAAMD,EAAKvD,OAAO,UAAUuD,EAAIE,UAAUF,EAAIG,YAAY,KAAO,IAClE,OAANH,EAAYD,EAAQC,GAE/B,OACI,kBAAC,EAAD,CAAWtB,QAASiB,EAAOhG,gBAlBP,SAAC3E,EAAK2F,GAC1B,GAAqB,IAAlBA,EAAO1E,OAAc,OAAO,EAC/B,IAAIoH,EAAQsC,EAAM3K,GAClB,OAAQqI,EAAML,KAAKoD,QAAQzF,IAAW,GAAK0C,EAAMgD,MAAMD,QAAQzF,IAAW,GAebgE,WAbhD,SAAC2B,KAcdtG,YAAaA,EAAaD,YAAY,aACtCD,YAAa,CAACyG,KAAK,SAAAP,GAAG,OAAEF,EAAG,YAAaE,IAAMQ,KAAK,SAAAR,GAAG,OAAEF,EAAG,YAAaE,IAAMS,WAAW,SAAAT,GAAG,OAAEF,EAAG,eAAgBE,IAAMK,MAAM,SAAAL,GAAG,OAAEF,EAAG,QAASE,QC8CvIU,MAxEf,SAAqBrM,GAAO,IAAD,EACuBmG,mBAAS,IADhC,mBAChBmG,EADgB,KACCC,EADD,KAGjBd,EAAK,SAACC,EAAQC,GAChB,MAAW,OAARA,GAAyB,eAATD,EACR,6BAAMC,EAAIjC,MAAM,EAAE,GAAG8C,KAAK,KAC1B,OAARb,GAAyB,UAATD,EACR,uBAAGE,KAAMD,EAAKvD,OAAO,UAArB,UACE,OAANuD,EAAYD,EAAQC,GAEzBc,EAAU,CACZ,qBAAqB,CAAC/G,YAAY,aAAcD,YAAY,CAACiH,QAAQ,SAAAf,GAAG,OAAEF,EAAG,cAAeE,IAAMgB,MAAM,SAAAhB,GAAG,OAAEF,EAAG,cAAeE,MAC/H,mBAAoB,CAACjG,YAAY,aAAcD,YAAY,CAACiH,QAAQ,SAAAf,GAAG,OAAEF,EAAG,UAAWE,IAAMgB,MAAM,SAAAhB,GAAG,OAAEF,EAAG,aAAcE,MACzH,mBAAoB,CAACjG,YAAY,aAAcD,YAAY,CAACiH,QAAQ,SAAAf,GAAG,OAAEF,EAAG,aAAcE,IAAMiB,MAAM,SAAAjB,GAAG,OAAEF,EAAG,QAASE,IAAMkB,QAAQ,SAAAlB,GAAG,OAAEF,EAAG,UAAWE,IAAMmB,WAAW,SAAAnB,GAAG,OAAEF,EAAG,aAAcE,MAC/L,qBAAsB,CAACjG,YAAY,GAAID,YAAY,CAACiH,QAAQ,SAAAf,GAAG,OAAEF,EAAG,UAAWE,MAC/E,mBAAqB,CAACjG,YAAY,GAAID,YAAY,CAACiH,QAAQ,SAAAf,GAAG,OAAEF,EAAG,aAAcE,IAAMgB,MAAM,SAAAhB,GAAG,OAAEF,EAAG,aAAcE,OAWvH,OALA7D,oBAAU,WACN1F,EAAcM,kBAAkB2G,KAAK,SAAAgB,GACjCkC,EAAmBlC,MAExB,IAEC,oCACS,yBAAKlK,UAAU,iCACpB,yBAAKA,UAAU,eACX,yBAAKC,MAAO,CAACyJ,MAAM,QACf,8BAAUzJ,MAAO,CAAC4K,OAAQ,iBAAiBC,QAAS,OAAQC,aAAa,QAErE,yBAAK/K,UAAU,OACX,yBAAKA,UAAU,aACVkH,OAAOC,KAAKgF,GAAiBhG,OAAO,SAAAyG,GAAI,QAAIT,EAAgBS,GAAMnL,QAAU0K,EAAgBS,GAAMnL,OAAS,IAAGpB,IAAI,SAAAwM,GAC/G,IAAIvH,EAAcgH,EAAQO,GAASvH,YAC/BC,EAAc+G,EAAQO,GAAStH,YACnC,OACI,yBAAKvF,UAAU,OAAOQ,IAAKqM,GACvB,wBAAI5M,MAAO,CAACqJ,cAAc,eAAgBuD,GAC1C,2BAAO7M,UAAW,gCAAkCuF,GAChD,+BACI,4BACI,uCAAiB2B,OAAOC,KAAK7B,GAAajF,IAAI,SAAAgJ,GAAG,OAAG,wBAAIpJ,MAAO,CAACqJ,cAAc,cAAe9I,IAAK6I,GAAM/D,EAAY+D,GAAK,WAGjI,+BACK8C,EAAgBU,GAASxM,IAAI,SAAAyM,GAAW,IAE9BtM,EAAcsM,EAAdtM,IAAKqI,EAASiE,EAATjE,MACZ,OACI,wBAAIrI,IAAKA,EAAKR,UAAU,WACpB,wBAAIC,MAAO,CAACyJ,MAAM,UApCnE,SAAClJ,GACR,IAAIoJ,EAAI,IAAIC,KAAS,EAAJrJ,GACjB,OAAOoJ,EAAEE,qBAAuB,IAAMF,EAAEG,qBAkC6CC,CAAGxJ,IAC/B0G,OAAOC,KAAK7B,GAAajF,IAAI,SAAAgJ,GAAG,OAAG,wBAAI7I,IAAKA,EAAI6I,GAAM/D,EAAY+D,GAAKR,EAAMQ,uB,mjBCrD9I,IAAM0D,EAAe,CAACC,KAAK,GAAIC,SAAQ,EAAOC,KAAK,GAAIzE,GAAG,MAAO0E,SAAS,IA4D1E,SAASC,EAAKvN,GAAO,IAAD,EACQmG,mBAAS,KAAInG,EAAMqI,SAAX,CAAqB+E,SAAQ,KAD7C,mBACTI,EADS,KACHC,EADG,KAETC,EAAa1N,EAAb0N,UAFS,EAWavH,oBAAS,GAXtB,mBAWVS,EAXU,KAWDC,EAXC,KAgBhB,OACI,yBAAK1G,UAAU,cACX,yBAAKA,UAAU,SACX,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,kBAAkBC,MAAO,CAAC,QAAU,QAC9C,8BAAUuN,KAAK,IAAIvN,MAAO,CAAC,MAAQ,QAAS8H,MAAOsF,EAAKL,KAAMhF,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWL,KAAKrL,EAAEsG,OAAOF,YAC3G,yBAAK/H,UAAU,oBACX,2BAAOmE,KAAK,OAAOnE,UAAU,eAAeyN,YAAY,YAAY1F,MAAOsF,EAAKH,KAAMlF,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWH,KAAKvL,EAAEsG,OAAOF,YACnI,2BAAO5D,KAAK,OAAOnE,UAAU,eAAeyN,YAAY,cAAc1F,MAAOsF,EAAKF,SAAUnF,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWF,SAASxL,EAAEsG,OAAOF,YAE7I,yBAAK/H,UAAU,sBACX,4BAAQA,UAAS,cAAqB,QAAZqN,EAAK5E,GAAe,cAAgB,WAA7C,WAAkEH,QAxB9F,WACb5B,GAAW,GACX6G,EAAsB,QAAZF,EAAK5E,IAAgB,IAAIoB,KAASwD,EAAK5E,GAAI4E,EAAM,WACvD3G,GAAW,GACE,QAAV2G,EAAK5E,IACJ6E,EAAQP,OAoBStG,GAAW,0BAAMzG,UAAU,qCAD5B,UAIR,uBAAGA,UAAU,kBAA8B,QAAZqN,EAAK5E,GAnB7C,WACP,IAAImB,EAAI,IAAIC,KAAa,EAARwD,EAAK5E,IACtB,OAAOmB,EAAEE,qBAAuB,IAAMF,EAAEG,qBAiB2BC,GAAM,qBAOjE0D,MAhGhB,SAAuB7N,GAAO,IAAD,EACamG,mBAAS,IADtB,mBAClBR,EADkB,KACLmI,EADK,OAEW3H,mBAAS,CAAC,IAAM+G,IAF3B,mBAElBa,EAFkB,KAENC,EAFM,OAGmB7H,mBAAS,IAH5B,mBAGlBjD,EAHkB,KAGF+K,EAHE,KAKnBC,EAA2B,WAC7BJ,EAAe,IACfE,EAAc,CAAC,IAAMd,KAYnBiB,EAAa,SAAAvD,GACfxI,EAAcc,iBAAiBmG,KAAK,SAAAgB,GAChC4D,EAAkB5D,KAEtBO,KAEJ9C,oBAAU,kBAAIqG,EAAY,eAAS,IAEnC,IAAMT,EAAW,SAAC/M,EAAKyN,EAAOxD,GAAY,IAC/BuC,EAAwBiB,EAAxBjB,KAAME,EAAkBe,EAAlBf,KAAMC,EAAYc,EAAZd,SACnB,GAAGD,EAAKzL,OAAS,EACjB,CACI,IAAMY,EAAM,eAAK7B,EAAK,CAACwM,OAAME,OAAMC,aACnClL,EAAce,kBAAd,KAAoCD,EAApC,GAAuDV,GAAgD,IAAvC6E,OAAOC,KAAKpE,GAAgBtB,QAAcyH,KAAK,SAAAd,GAAC,OAAE4F,EAAY,WAC1HH,EAAc,KAAID,EAAL,eAAkBpN,EAAlB,KAA2ByN,EAA3B,CAAkCxF,GAAGjI,OAClDmN,EAAe,KAAInI,EAAL,eAAmBhF,EAAK,gBACtCiK,UAINa,EAAK,SAACC,EAAQC,GAAT,MAAsB,OAANA,EAAYD,EAAQC,GAC/C,OACI,kBAAC,EAAD,CAAWtB,QAASnH,EAAgBoC,gBA5BhB,SAAC3E,EAAK2F,GAC1B,GAAqB,IAAlBA,EAAO1E,OAAc,OAAO,EAC/B,IAAIoH,EAAQ9F,EAAevC,GAC3B,OAAQqI,EAAMqE,KAAKtB,QAAQzF,IAAW,GAAO0C,EAAMmE,KAAKpB,QAAQzF,IAAW,GAyBLgE,WAhCzD,SAAC2B,GACV+B,EAAc,KAAID,EAAL,eAAkB9B,EAAUrD,GAAIqD,KAC7C6B,EAAe,KAAInI,EAAL,eAAmBsG,EAAUrD,GAAI,iBA8ByCjD,YAAaA,EACrGO,cAAe,CAACkD,GAAGhH,EAAce,kBAAmBmG,GAAG,kBAAI6E,EAAYD,KACvEzI,YAAa,CAAC4H,KAAK,SAAA1B,GAAG,OAAEF,EAAG,aAAcE,IAAKwB,KAAK,SAAAxB,GAAG,OAAEF,EAAG,qBAAsBE,KACjFP,YACI,yBAAKjL,UAAU,YACX,4BAAQA,UAAU,iBAAiBC,MAAO,CAACiO,SAAS,WAAYC,MAAM,OAAQC,IAAI,OAClF9F,QAASyF,GADT,aAGC7G,OAAOC,KAAKyG,GAAYvN,IAAI,SAAAG,GAAG,OAC5B,kBAAC4M,EAAD,CAAM5M,IAAKA,EAAK6N,KAAM7N,EAAK0H,SAAU0F,EAAWpN,GAAM+M,UAAWA,UCxC1Ee,MAff,WACI,OACI,oCACI,yBAAKrO,MAAO,CAACyJ,MAAM,OAAQ6E,OAAO,QAASvO,UAAU,4BAA4BwO,KAAK,WACtF,yBAAKvO,MAAO,CAACyJ,MAAM,OAAQ6E,OAAO,QAASvO,UAAU,8BAA8BwO,KAAK,WACxF,yBAAKvO,MAAO,CAACyJ,MAAM,OAAQ6E,OAAO,QAASvO,UAAU,4BAA4BwO,KAAK,WACtF,yBAAKvO,MAAO,CAACyJ,MAAM,OAAQ6E,OAAO,QAASvO,UAAU,2BAA2BwO,KAAK,WACrF,yBAAKvO,MAAO,CAACyJ,MAAM,OAAQ6E,OAAO,QAASvO,UAAU,4BAA4BwO,KAAK,WACtF,yBAAKvO,MAAO,CAACyJ,MAAM,OAAQ6E,OAAO,QAASvO,UAAU,yBAAyBwO,KAAK,WACnF,yBAAKvO,MAAO,CAACyJ,MAAM,OAAQ6E,OAAO,QAASvO,UAAU,0BAA0BwO,KAAK,WACpF,yBAAKvO,MAAO,CAACyJ,MAAM,OAAQ6E,OAAO,QAASvO,UAAU,yBAAyBwO,KAAK,a,mjBC2MhFC,MAlNf,SAAsB5O,GACrB,IAAD,EACkCmG,oBAAS,GAD3C,mBACW0I,EADX,KACoBC,EADpB,KAEUC,EAAM,CAAC1K,IAAI,GAAIC,KAAK,GAAI6H,KAAK,EAAG1I,SAAS,GAAI2J,SAAQ,EAAO4B,IAAI,KAAMC,IAAI,GAAIC,SAAS,IAFjG,EAKqC/I,mBAFpB,CAACgJ,WAAU,EAAOC,YAAW,EAAOC,OAAM,EAAOzC,OAAM,EAAOlI,QAAQ,IAAK4K,cAAa,IAHzG,mBAKWC,EALX,KAKqBC,EALrB,OAOyCrJ,mBAAS,IAPlD,mBAOWsJ,EAPX,KAOwBC,EAPxB,OAQgCvJ,mBAAS,IARzC,mBAQWwJ,EARX,KAQmBC,EARnB,OAUmCzJ,mBAAS4I,GAV5C,mBAUWc,EAVX,KAUoBC,EAVpB,OAWgC3J,mBAPb,CAACgG,KAAK,EAAG1I,SAAS,GAAIwL,IAAI,GAAKC,SAAS,KAJ3D,mBAWWa,EAXX,KAWmBC,EAXnB,OAakC7J,oBAAS,GAb3C,mBAaWS,EAbX,KAaoBC,EAbpB,KAuBUoJ,EAAa,SAAChL,GAChB4B,GAAW,GACX1C,EAAUa,WAAWC,EAAU0K,EAAQ,CAAC3D,MAAQhM,EAAMgM,MAAQhM,EAAMgM,MAAQ,YAAY3C,KAAK,SAAAhF,GACzFoL,EAAYS,KAAK,CAAC7L,MAAKY,aACvByK,EAAcD,KACfU,QAAQ,kBAAItJ,GAAW,MA0CxBuJ,EAAa,SAAC9L,GAA8B,IAAxB+L,EAAuB,wDAC7CP,EAAY,KAAID,EAAL,CAAezC,SAAQ,MAC/ByC,EAASxL,IAAIzC,OAAS,GAAKyO,KAC1BxJ,GAAW,GACX1C,EAAUC,QAAQyL,EAASxL,IAAKC,GAAM+E,KAAK,SAAA4F,GACvCa,EAAY,KAAID,EAAL,CAAepM,SAASwL,EAAIxL,SAAU0I,KAAK8C,EAAI9C,KAAM8C,IAAIA,EAAIA,IAAKC,SAASD,EAAIC,cAE7FoB,MAAM,SAAAtB,GACHc,EAAY,KAAID,EAAL,CAAeb,IAAIA,OAC/BmB,QAAQ,kBAAItJ,GAAW,OAGlC,OACI,yBAAK1G,UAAU,oCACX,4BAAQA,UAAU,cAAcC,MAAO,CAAC8K,aAAa,UACjD,2BAAO5G,KAAK,WAAWuE,QAASgG,EAASjG,GAAG,aAAaD,KAAK,aAAaR,SAAU,SAAArG,GAAC,OAAEgN,EAAWhN,EAAEsG,OAAOS,YAC5G,2BAAOC,QAAQ,aAAa3I,UAAU,QAAtC,oBAEH0O,GAAW,yBAAK1O,UAAU,OACvB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBACmB,IAA7B0P,EAASpM,SAAS7B,QAAgB,0BAAMzB,UAAU,oBAAhB,cAClC0P,EAASpM,SAAS7B,OAAS,GAAK,0BAAMzB,UAAU,oBAAmB,uBAAGiI,OAAO,SAASwD,KAAMiE,EAASpM,UAAlC,gBAE1C,IAA7BoM,EAASpM,SAAS7B,QAAgB,2BAAO0C,KAAK,OAAOnE,UAAW,iBA5E9E0P,EAASpM,SAAS7B,OAAS,EAAU,WACrCiO,EAASzC,SAAmC,IAAxByC,EAASxL,IAAIzC,OAAqB,aAClD,IA0EwGgM,YAAY,aAAa1F,MAAO2H,EAASxL,IACpI8D,SAAU,SAAArG,GAAC,OAAEgO,EAAY,KAAID,EAAL,CAAexL,IAAIvC,EAAEsG,OAAOF,YAEvD2H,EAASpM,SAAS7B,OAAS,GAAK,2BAAO0C,KAAK,OAAOnE,UAAU,wBAAwBoQ,aAAcV,EAASpM,SAAU+M,UAAU,IACjI,yBAAKrQ,UAAU,6BAAf,cAAuD0P,EAAS1D,KAAhE,UAA6E0D,EAASZ,KACtF,yBAAK9O,UAAU,+BAAf,wBAEJ,6BACkC,IAA7B0P,EAASpM,SAAS7B,SAAgB,EAOL,IAA7BiO,EAASpM,SAAS7B,QAAgB,yBAAKzB,UAAU,kBAC9C,4BAAQmE,KAAK,SAASnE,UAAU,2BAA2BsI,QAAS,kBAAI2H,EAAW,QAAQ,KAA3F,SAEJ,yBAAKjQ,UAAU,kBACX,4BAAQmE,KAAK,SAASnE,UAAU,2BAA2BsI,QAAS,kBAnGxFqH,EAAYf,QACZlI,GAAW,KAkGS,SACCD,GAAW,6BAAK,kBAAC,EAAD,UAM7B,yBAAKzG,UAAU,YACX,2BAAOA,UAAU,iCACZ0P,EAASpM,SAAS7B,OAAS,GAC5B,iCACI,8BACI,yBAAKzB,UAAU,kBACX,4BAAQmE,KAAK,SAASnE,UAAU,gCAAgCsI,QAAS,kBAhGvF,WACd,GAAgC,IAA7BoH,EAASpM,SAAS7B,OAArB,CAGA,IAAM6C,EAAU,GACZC,EAAU6K,EAAS7K,QACpB6K,EAASJ,YACR1K,EAAO,MAAY,IACnBA,EAAO,QAAY,SACnBC,EAAU,IAEX6K,EAASH,oBACD3K,EAAO,MACdA,EAAO,OAAa,KAErB8K,EAASF,QACR5K,EAAO,MAAY,IACnBA,EAAO,OAAa,KAErB8K,EAAS3C,QACRnI,EAAO,MAAY,IACnBA,EAAO,OAAa,KAErB8K,EAASD,sBACD7K,EAAO,aACPA,EAAO,OACdA,EAAO,MAAY,IACnBA,EAAO,OAAa,KAExBN,EAAUI,UAAUsL,EAASpM,SAAUgB,EAASC,GAAS2E,KAAK,SAAA4F,GACvDA,EAAID,IACHgB,EAAU,KAAID,EAAL,CAAatM,SAASwL,EAAID,IAAK7C,KAAK,EAAG8C,IAAI,KAAMC,SAAS,MAEnEc,EAAU,KAAID,EAAL,CAAatM,SAASwL,EAAIxL,SAAU0I,KAAK8C,EAAI9C,KAAM8C,IAAIA,EAAIA,IAAKC,SAASD,EAAIC,cAC3FoB,MAAM,SAAAtB,GACLgB,EAAU,KAAID,EAAL,CAAatM,SAASuL,OAC/BmB,QAAQ,kBAAItJ,GAAW,MA4D8EtC,KAA7E,UACA,yBAAKpE,UAAU,eACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,kBACrC,2BAAOmE,KAAK,OAAOnE,UAAU,eAAe+H,MAAOyH,EAAQxH,SAAU,SAAArG,GAAC,OAAE8N,EAAU9N,EAAEsG,OAAOF,WAG/F,4BAAQ5D,KAAK,SAASnE,UAAU,2BAA2BsI,QAAS,kBAAIwH,EAAWJ,EAASpM,YAA5F,OACA,4BAAQa,KAAK,SAASnE,UAAU,2BAA2BsI,QAAS,kBAAIwH,EAAWF,EAAOtM,YAA1F,WACA,4BAAQa,KAAK,SAASnE,UAAU,2BAA2BsI,QAAS,kBAAIwH,EAAWN,KAAnF,cAGR,2BACKI,EAAOtM,SAAS7B,OAAS,GAAK,8BAAM,uBAAGgK,KAAMmE,EAAOtM,SAAU2E,OAAO,UAAU2H,EAAOb,UAAxD,QAC9Ba,EAAOtM,SAAS7B,OAAS,GAAK,0BAAMzB,UAAU,cAAhB,cAAyC4P,EAAO5D,KAAhD,UAA6D4D,EAAOd,OAG3G,+BAAO,wBAAI9O,UAAU,iBAAgB,wBAAI6H,QAAQ,KAAZ,mBACrC,+BACI,4BACI,4BACI,yBAAK7H,UAAU,aAAaC,MAAO,CAACC,UAAU,SAC1C,2BAAOiE,KAAK,WAAWnE,UAAU,mBAAmByI,GAAG,YAAYC,QAAS0G,EAASJ,UACrFhH,SAAU,SAAArG,GAAC,OAAE0N,EAAa,KAAID,EAAL,CAAeJ,UAAUrN,EAAEsG,OAAOS,cAC3D,2BAAO1I,UAAU,mBAAmB2I,QAAQ,aAA5C,eAGR,4BACI,yBAAK3I,UAAU,aAAaC,MAAO,CAACC,UAAU,SAC1C,2BAAOiE,KAAK,WAAWnE,UAAU,mBAAmByI,GAAG,aAAaC,QAAS0G,EAASH,WACtFjH,SAAU,SAAArG,GAAC,OAAE0N,EAAa,KAAID,EAAL,CAAeH,WAAWtN,EAAEsG,OAAOS,cAC5D,2BAAO1I,UAAU,mBAAmB2I,QAAQ,cAA5C,mBAGR,4BACI,yBAAK3I,UAAU,aAAaC,MAAO,CAACC,UAAU,SAC1C,2BAAOiE,KAAK,WAAWnE,UAAU,mBAAmByI,GAAG,YAAYC,QAAS0G,EAASF,MACrFlH,SAAU,SAAArG,GAAC,OAAE0N,EAAa,KAAID,EAAL,CAAeF,MAAMvN,EAAEsG,OAAOS,cACvD,2BAAO1I,UAAU,mBAAmB2I,QAAQ,aAA5C,qBAIZ,4BACI,4BACI,yBAAK3I,UAAU,aAAaC,MAAO,CAACC,UAAU,SAC1C,2BAAOiE,KAAK,WAAWnE,UAAU,mBAAmByI,GAAG,QAAQC,QAAS0G,EAAS3C,MACjFzE,SAAU,SAAArG,GAAC,OAAE0N,EAAa,KAAID,EAAL,CAAe3C,MAAM9K,EAAEsG,OAAOS,cACvD,2BAAO1I,UAAU,mBAAmB2I,QAAQ,SAA5C,WAGR,4BACI,yBAAK3I,UAAU,aAAaC,MAAO,CAACC,UAAU,SAC1C,2BAAOiE,KAAK,WAAWnE,UAAU,mBAAmByI,GAAG,SAASC,QAAS0G,EAASD,aAClFnH,SAAU,SAAArG,GAAC,OAAE0N,EAAa,KAAID,EAAL,CAAeD,aAAaxN,EAAEsG,OAAOS,cAC9D,2BAAO1I,UAAU,mBAAmB2I,QAAQ,UAA5C,mBAGR,4BACI,4BAAQ3I,UAAU,eAAe+H,MAAOqH,EAAS7K,QAAStE,MAAO,CAACyJ,MAAM,SACpE1B,SAAU,SAAArG,GAAC,OAAE0N,EAAa,KAAID,EAAL,CAAe7K,QAAQ5C,EAAEsG,OAAOF,WACzD,4BAAQA,MAAM,OAAd,gBACA,4BAAQA,MAAM,MAAd,eACA,4BAAQA,MAAM,MAAd,eACA,4BAAQA,MAAM,MAAd,sBAQ3BuH,EAAYjP,IAAI,SAACiQ,EAAKC,GAAN,OACb,yBAAK/P,IAAK+P,GACN,yBAAKvQ,UAAU,aACX,yBAAKA,UAAU,cAAcsQ,EAAKpM,IAAlC,UACA,6BAAK,uBAAGuH,KAAM6E,EAAKpM,IAAK+D,OAAO,UAA1B,aAIA,MAAhByH,EAASb,KAAe,yBAAK7O,UAAU,sBAAsB0P,EAASb,O,mjBCzIpE2B,MAtEf,SAAkB3Q,GACd,IAAM+O,EAAM,CAAClK,UAAU,GAAI+L,MAAM,GAAIC,SAAS,GAAIzD,SAAQ,EAAO0D,UAAU,GAAIC,SAAS,IADpE,EAEU5K,oBAAS,GAFnB,mBAEb0I,EAFa,KAEJC,EAFI,OAGU3I,oBAAS,GAHnB,mBAGbS,EAHa,KAGJC,EAHI,OAIeV,mBAAS4I,GAJxB,mBAIbiC,EAJa,KAIFC,EAJE,KAqBpB,OACI,yBAAK9Q,UAAU,oCACX,4BAAQA,UAAU,cAAcC,MAAO,CAAC8K,aAAa,UACjD,2BAAO5G,KAAK,WAAWuE,QAASgG,EAASjG,GAAG,cAAcD,KAAK,cAAcR,SAAU,SAAArG,GAAC,OAAEgN,EAAWhN,EAAEsG,OAAOS,YAC9G,2BAAOC,QAAQ,cAAc3I,UAAU,QAAvC,YAEH0O,GAAW,yBAAK1O,UAAU,OACvB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,eACrC,2BAAOmE,KAAK,OAAOnE,UAAW,gBAAkB6Q,EAAW5D,SAA2C,IAAhC4D,EAAWnM,UAAUjD,OAAe,cAAe,IAAKgM,YAAY,aAAa1F,MAAO8I,EAAWnM,UACxKsD,SAAU,SAAArG,GAAC,OAAEmP,EAAc,KAAID,EAAL,CAAiBnM,UAAU/C,EAAEsG,OAAOF,YAC/D,yBAAK/H,UAAU,8BACf,yBAAKA,UAAU,+BAAf,uBAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,UACrC,2BAAOmE,KAAK,OAAOnE,UAAU,eAAe+H,MAAO8I,EAAWJ,MAC9DzI,SAAU,SAAArG,GAAC,OAAEmP,EAAc,KAAID,EAAL,CAAiBJ,MAAM9O,EAAEsG,OAAOF,aAE9D,yBAAK/H,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,cACrC,2BAAOmE,KAAK,OAAOnE,UAAU,eAAe+H,MAAO8I,EAAWH,SAC9D1I,SAAU,SAAArG,GAAC,OAAEmP,EAAc,KAAID,EAAL,CAAiBH,SAAS/O,EAAEsG,OAAOF,aAEjE,yBAAK/H,UAAU,oBACX,yBAAKA,UAAU,uBACsB,IAAhC6Q,EAAWF,UAAUlP,QAAgB,0BAAMzB,UAAU,oBAAhB,cACrC6Q,EAAWF,UAAUlP,OAAS,GAAK,0BAAMzB,UAAU,oBAAmB,uBAAGyL,KAAMoF,EAAWF,UAAW1I,OAAO,UAAtC,gBAE3E,2BAAO9D,KAAK,OAAOnE,UAAU,eAAe+H,MAAO8I,EAAWF,UAC9D3I,SAAU,SAAArG,GAAC,OAAEmP,EAAc,KAAID,EAAL,CAAiBF,UAAUhP,EAAEsG,OAAOF,aAElE,yBAAK/H,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,cACrC,2BAAOmE,KAAK,OAAOnE,UAAU,eAAe+H,MAAO8I,EAAWD,SAC9D5I,SAAU,SAAArG,GAAC,OAAEmP,EAAc,KAAID,EAAL,CAAiBD,SAASjP,EAAEsG,OAAOF,aAEjE,yBAAK/H,UAAU,aACX,4BAAQmE,KAAK,SAASnE,UAAU,gCAAgCsI,QAAS,kBArDzFwI,EAAc,KAAID,EAAL,CAAiB5D,SAAQ,UACnC4D,EAAWnM,UAAUjD,OAAS,IAE7BiF,GAAW,GACX1C,EAAUS,UAAUoM,EAAWnM,WAAWwE,KAAK,SAAA6H,GAExCA,EAAMC,SACLF,EAAc,KAAID,EAAL,CAAiBJ,MAAMM,EAAMxP,KAAK0P,QAASP,SAASK,EAAMxP,KAAK2P,cAAeN,SAASG,EAAMxP,KAAK4P,MAC/GR,UAAUI,EAAMxP,KAAK6P,QAAQlN,SAEpCiM,MAAM,SAAAtB,GAAG,OAAEiC,EAAc,KAAID,EAAL,CAAiBJ,MAAM5B,OAC/CmB,QAAQ,kBAAItJ,GAAW,SA0CZ,WACA,4BAAQvC,KAAK,SAASnE,UAAU,2BAA2BsI,QAAS,kBAxDtEwI,EAAclC,KAwDZ,UAEHnI,GAAW,6BAAK,kBAAC,EAAD,W,mjBChBtB4K,MA/Cf,SAAiBxR,GACb,IAAM+O,EAAM,CAAC3B,SAAQ,EAAO0D,UAAU,GAAIW,SAAS,IADhC,EAEWtL,oBAAS,GAFpB,mBAEZ0I,EAFY,KAEHC,EAFG,OAGW3I,oBAAS,GAHpB,mBAGZS,EAHY,KAGHC,EAHG,OAIgBV,mBAAS4I,GAJzB,mBAIZiC,EAJY,KAIDC,EAJC,KAiBnB,OACI,yBAAK9Q,UAAU,oCACX,4BAAQA,UAAU,cAAcC,MAAO,CAAC8K,aAAa,UACjD,2BAAO5G,KAAK,WAAWuE,QAASgG,EAASjG,GAAG,cAAcD,KAAK,cAAcR,SAAU,SAAArG,GAAC,OAAEgN,EAAWhN,EAAEsG,OAAOS,YAC9G,2BAAOC,QAAQ,cAAc3I,UAAU,QAAvC,aAEH0O,GAAW,yBAAK1O,UAAU,OACvB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,eACrC,2BAAOmE,KAAK,OAAOnE,UAAW,gBAAkB6Q,EAAW5D,SAA2C,IAAhC4D,EAAWF,UAAUlP,OAAe,cAAe,IAAKgM,YAAY,aACzI1F,MAAO8I,EAAWF,UAClB3I,SAAU,SAAArG,GAAC,OAAEmP,EAAc,KAAID,EAAL,CAAiBF,UAAUhP,EAAEsG,OAAOF,MAAMwJ,aACrE,yBAAKvR,UAAU,8BACf,yBAAKA,UAAU,+BAAf,uBAEJ,yBAAKA,UAAU,aACX,4BAAQmE,KAAK,SAASnE,UAAU,gCAAgCsI,QAAS,kBA1BzFwI,EAAc,KAAID,EAAL,CAAiB5D,SAAQ,UACnC4D,EAAWF,UAAUlP,OAAS,IAE7BiF,GAAW,GACX1C,EAAUW,QAAQkM,EAAWF,WAAWzH,KAAK,SAAAsI,GAAK,OAAEV,EAAc,KAAID,EAAL,CAAiBS,SAAUE,OAC3FrB,MAAM,SAAAtB,GAAG,OAAEiC,EAAc,KAAID,EAAL,CAAiBS,SAAU,CAACzC,QACpDmB,QAAQ,kBAAItJ,GAAW,SAoBZ,gBACA,4BAAQvC,KAAK,SAASnE,UAAU,2BAA2BsI,QAAS,kBA9BtEwI,EAAclC,KA8BZ,UAEHnI,GAAW,6BAAK,kBAAC,EAAD,QAErB,yBAAKzG,UAAU,YACV6Q,EAAWS,SAASjR,IAAI,SAACiQ,EAAKC,GAAN,OAAc,yBAAK/P,IAAK+P,EAAOvQ,UAAU,cAAcsQ,S,mjBCpCpG,IAAMmB,EAAe,CAAClF,QAAQ,GAAIC,MAAM,GAAIC,MAAM,GAAIiF,SAAS,GAAIC,KAAK,GAAI1E,SAAQ,EAAOxE,GAAG,MAAOmJ,QAAQ,IA2E7G,SAASC,EAAchS,GAAO,IAAD,EACEmG,mBAAS,CAAC8L,SAAQ,EAAOC,IAAG,EAAOC,KAAI,IADzC,mBACnBC,EADmB,KACXC,EADW,KAEzB,OACI,oCACI,yBAAKlS,UAAU,QACP,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,mBAAmBmE,KAAK,WAAWsE,GAAG,kBAAkBC,QAASuJ,EAAOH,QAAS9J,SAAU,SAAArG,GAAC,OAAEuQ,EAAU,KAAID,EAAL,CAAaH,QAAQnQ,EAAEsG,OAAOS,cACtJ,2BAAO1I,UAAU,mBAAmB2I,QAAQ,mBAA5C,kBAEJ,yBAAK3I,UAAU,gCACX,2BAAOA,UAAU,mBAAmBmE,KAAK,WAAWsE,GAAG,kBAAkBC,QAASuJ,EAAOF,GAAI/J,SAAU,SAAArG,GAAC,OAAEuQ,EAAU,KAAID,EAAL,CAAaF,GAAGpQ,EAAEsG,OAAOS,cAC5I,2BAAO1I,UAAU,mBAAmB2I,QAAQ,mBAA5C,cAEJ,yBAAK3I,UAAU,gCACX,2BAAOA,UAAU,mBAAmBmE,KAAK,WAAWsE,GAAG,kBAAkBC,QAASuJ,EAAOD,IAAKhK,SAAU,SAAArG,GAAC,OAAEuQ,EAAU,KAAID,EAAL,CAAaD,IAAIrQ,EAAEsG,OAAOS,cAC9I,2BAAO1I,UAAU,mBAAmB2I,QAAQ,mBAA5C,cAGPsJ,EAAOH,SAAW,kBAAC,EAAD,CAAcjG,MAAShM,EAAMgM,MAAQhM,EAAMgM,MAAQ,WACrEoG,EAAOF,IAAM,kBAAC,EAAD,MACbE,EAAOD,KAAO,kBAAC,EAAD,OAI/B,SAASG,EAAetS,GAAO,IAAD,EACFmG,mBAAS,KAAInG,EAAMqI,SAAX,CAAqB+E,SAAQ,KADnC,mBACnBI,EADmB,KACbC,EADa,OAcGtH,oBAAS,GAdZ,mBAcpBS,EAdoB,KAcXC,EAdW,KAe1B,OACI,yBAAK1G,UAAU,YACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,OACrC,2BAAOmE,KAAK,OAAO4D,MAAOsF,EAAKuE,QAAUvE,EAAKuE,QAAU,GAAI5J,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWuE,QAAQjQ,EAAEsG,OAAOF,YAC5G,yBAAK/H,UAAU,sBACX,4BAAQA,UAAU,yBAAyBsI,QAAS,SAAA3G,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWuE,QAAQQ,OAAO,IAAIvI,WAA5F,WAGR,yBAAK7J,UAAU,yBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,YACrC,2BAAOmE,KAAK,OAAOnE,UAAW,iBAA2C,IAAxBqN,EAAKd,QAAQ9K,QAAgB4L,EAAKJ,QAAU,cAAgB,IAC7GlF,MAAOsF,EAAKd,QAASvE,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWd,QAAQ5K,EAAEsG,OAAOF,YACpEsF,EAAKJ,SAAW,yBAAKjN,UAAU,oBAAf,4BAChBH,EAAMwS,WAAN,SAA+B,2BAAG,2BAAOrS,UAAU,wBAAwBH,EAAMwS,WAAN,WAGhF,yBAAKrS,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,UACrC,2BAAOmE,KAAK,OAAOnE,UAAU,eAAe+H,MAAOsF,EAAKb,MAAOxE,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWb,MAAM7K,EAAEsG,OAAOF,YAC5GlI,EAAMwS,WAAN,OAA6B,2BAAOrS,UAAU,wBAAwBH,EAAMwS,WAAN,QAE3E,yBAAKrS,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,UACrC,2BAAOmE,KAAK,OAAOnE,UAAU,eAAe+H,MAAOsF,EAAKZ,MAAOzE,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWZ,MAAM9K,EAAEsG,OAAOF,YAC5GlI,EAAMwS,WAAN,OAA6B,2BAAOrS,UAAU,wBAAwBH,EAAMwS,WAAN,QAG3E,yBAAKrS,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,cACrC,2BAAOmE,KAAK,OAAOnE,UAAW,iBAA4C,IAAzBqN,EAAKqE,SAASjQ,QAAgB4L,EAAKJ,QAAU,cAAgB,IAC9GlF,MAAOsF,EAAKqE,SAAU1J,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWqE,SAAS/P,EAAEsG,OAAOF,YACtEsF,EAAKJ,SAAW,yBAAKjN,UAAU,oBAAf,8BAChBH,EAAMwS,WAAN,UAAgC,2BAAOrS,UAAU,wBAAwBH,EAAMwS,WAAN,WAE9E,yBAAKrS,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,SACrC,2BAAOmE,KAAK,OAAOnE,UAAU,eAAe+H,MAAQsF,EAAKsE,KAAYtE,EAAKsE,KAAO,GAAjB,GAAqB3J,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWsE,KAAKhQ,EAAEsG,OAAOF,YACjIlI,EAAMwS,WAAN,MAA4B,2BAAOrS,UAAU,wBAAwBH,EAAMwS,WAAN,OAG1E,6BACI,4BAAQrS,UAAS,cAAqB,QAAZqN,EAAK5E,GAAe,cAAgB,WAA7C,WAAkEH,QAvDjF,WACdgF,EAAQ,KAAID,EAAL,CAAWJ,SAAQ,KACvBI,EAAKd,QAAQ9K,OAAS,GAAK4L,EAAKqE,SAASjQ,OAAS,IACjDiF,GAAW,GACX7G,EAAM0D,UAAsB,QAAZ8J,EAAK5E,IAAgB,IAAIoB,KAASwD,EAAK5E,GAAI4E,EAAM,WAC7D3G,GAAW,GACE,QAAV2G,EAAK5E,IACJ6E,EAAQmE,QAiDPhL,GAAW,0BAAMzG,UAAU,qCAD5B,WAYLsS,MAvKf,SAAgBzS,GAAO,IAAD,EAEoBmG,mBAAS,IAF7B,mBAEXR,EAFW,KAEEmI,EAFF,OAGkB3H,mBAAS,CAAC,IAAMyL,IAHlC,mBAGX7D,EAHW,KAGCC,EAHD,KAIZE,EAA2B,WAC7BJ,EAAe,IACfE,EAAc,CAAC,IAAM4D,KANP,EAQUzL,mBAAS,IARnB,mBAQX3C,EARW,KAQHkP,EARG,KAoBZvE,EAAa,SAAAvD,GACfxI,EAAcoB,OAAOxD,EAAMyD,UAAU4F,KAAK,SAAAgB,GACtCqI,EAAUrI,KAEdO,KAEJ9C,oBAAU,kBAAIqG,EAAY,eAAS,IACnC,IAGMzK,EAAW,SAAC/C,EAAKc,EAAOmJ,GAAY,IAC/B8B,EAAkDjL,EAAlDiL,QAASC,EAAyClL,EAAzCkL,MAAOC,EAAkCnL,EAAlCmL,MAAOiF,EAA2BpQ,EAA3BoQ,SAAUC,EAAiBrQ,EAAjBqQ,KAAMC,EAAWtQ,EAAXsQ,QAC9C,GAAGrF,EAAQ9K,OAAS,GAAKiQ,EAASjQ,OAAS,EAC3C,CACI,IAAMY,EAAM,eAAK7B,EAAK,CAAC+L,UAASC,QAAOC,QAAOiF,WAAUC,OAAMC,YAC9D3P,EAAcsB,UAAU1D,EAAMyD,SAAUzD,EAAM2D,aAA9C,KAAgEH,EAAhE,GAA2EhB,GACxC,IAA/B6E,OAAOC,KAAK9D,GAAQ5B,QAAcyH,KAAK,SAAAd,GAAC,OAAE4F,EAAY,WACtDH,EAAc,KAAID,EAAL,eAAkBpN,EAAlB,KAA2Bc,EAA3B,CAAkCmH,GAAGjI,OAClDmN,EAAe,KAAInI,EAAL,eAAmBhF,EAAK,gBACtCiK,UAINa,EAAK,SAACC,EAAQC,GAAT,MAAsB,OAANA,EAAYD,EAAQC,GACzClG,EAAgBzF,EAAMyF,YAAczF,EAAMyF,YAAc,CAACiH,QAAQ,SAAAf,GAAG,OAAEF,EAAG,UAAWE,IAAMgB,MAAM,SAAAhB,GAAG,OAAEF,EAAG,aAAcE,KAC5H,OACI,oCACI,kBAAC,EAAD,CAAWtB,QAAS7G,EAAQ8B,gBAtCZ,SAAC3E,EAAK2F,GAC1B,GAAS,YAAN3F,EAAiB,OAAO,EAC3B,GAAqB,IAAlB2F,EAAO1E,OAAc,OAAO,EAC/B,IAAIoH,EAAQxF,EAAO7C,GACnB,OAAQqI,EAAM0D,QAAQX,QAAQzF,IAAW,GAAK0C,EAAM2D,MAAMZ,QAAQzF,IAAW,GAkCXgE,WAhCrD,SAAC2B,GACd+B,EAAc,KAAID,EAAL,eAAkB9B,EAAUrD,GAAIqD,KAC7C6B,EAAe,KAAInI,EAAL,eAAmBsG,EAAUrD,GAAI,iBA8ByCuC,cAAe,kBAAC6G,EAAD,CAAehG,MAAOhM,EAAMgM,QAC/HrG,YAAaA,EAAaI,cAAiB/F,EAAM+F,cAAgB/F,EAAM+F,cAAgB,mBAAoBN,YAAaA,EAAaC,YAAY,aACjJQ,cAAe,CAACkD,GAAG,SAACuJ,EAAKlQ,GAAN,OAAgBL,EAAcsB,UAAU1D,EAAMyD,SAAUzD,EAAM2D,aAAagP,EAAIlQ,IAAU6G,GAAG,kBAAI6E,EAAYD,KAC/H9C,YACI,yBAAKjL,UAAU,YAEX,4BAAQA,UAAU,iBAAiBC,MAAO,CAACiO,SAAS,WAAYC,MAAM,OAAQC,IAAI,OAC9E9F,QAASyF,GADb,aAGC7G,OAAOC,KAAKyG,GAAYvN,IAAI,SAAAG,GAAG,OAC5B,kBAAC2R,EAAD,CAAgB3R,IAAKA,EAAK6N,KAAM7N,EAAK0H,SAAU0F,EAAWpN,GAC1D+C,UAAWA,EAAW8O,WAAYxS,EAAMwS,YAAc,UAKlE,yBAAKpS,MAAO,CAACwS,WAAW,SAAxB,gJ,mjBCnEZ,IAAMC,EAAc,CAACC,OAAO,GAAI1F,SAAQ,EAAOxE,GAAG,GAAID,KAAK,GAAIwE,KAAK,IAqDpE,SAAS6E,EAAchS,GAAO,IAAD,EACEmG,mBAAS,CAAC8L,SAAQ,EAAOC,IAAG,EAAOC,KAAI,IADzC,mBACnBC,EADmB,KACXC,EADW,KAEzB,OACI,oCACI,yBAAKlS,UAAU,QACP,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,mBAAmBmE,KAAK,WAAWsE,GAAG,kBAAkBC,QAASuJ,EAAOH,QACzF9J,SAAU,SAAArG,GAAC,OAAEuQ,EAAU,KAAID,EAAL,CAAaH,QAAQnQ,EAAEsG,OAAOS,cACpD,2BAAO1I,UAAU,mBAAmB2I,QAAQ,mBAA5C,mBAGXsJ,EAAOH,SAAW,kBAAC,EAAD,CAAcjG,MAAM,oBAInD,SAAS+G,EAAiB/S,GACzB,IACUqI,EAA2CrI,EAA3CqI,SAAU2K,EAAiChT,EAAjCgT,YAAaC,EAAoBjT,EAApBiT,iBADlC,EAE4B9M,mBAASkC,GAFrC,mBAEWmF,EAFX,KAEiBC,EAFjB,OAGsCtH,mBAAS,CAACyG,MAAM,GAAIV,KAAK,GAAIkB,SAAQ,IAH3E,mBAGW8F,EAHX,KAGsBC,EAHtB,OAIiChN,oBAAS,GAJ1C,mBAIUS,EAJV,KAImBC,EAJnB,OAK2CV,oBAAS,GALpD,mBAKUiN,EALV,KAKwBC,EALxB,OAMqClN,mBAAS,IAN9C,mBAMWmN,EANX,KAMqBC,EANrB,KAQUC,EAAU,SAACC,GACG,YAAbA,GAEC5M,GAAW,GACX4G,EAAQoF,GACRI,MAIAI,GAAgB,GAChBF,EAAa,CAACvG,MAAM,GAAIV,KAAK,GAAIkB,SAAQ,MAI3CsG,EAAW,SAACD,GACd,GAAgB,YAAbA,GAGC,GADAhG,EAAQ,KAAID,EAAL,CAAWJ,SAAQ,KACvBI,EAAK7E,KAAK/G,OAAS,GAAK4L,EAAKL,KAAKvL,OAAS,EAAE,CAC5CiF,GAAW,GACX,IAAI8M,GAAqB,KAAZnG,EAAK5E,IAAa,IAAIoB,KAASwD,EAAK5E,IAAM,GACvDoK,EAAYW,EAAOnG,EAAM,WACrB3G,GAAW,GACX4G,EAAQ,KAAID,EAAL,CAAW5E,GAAG+K,YAKjC,CACI,IAAIC,EAAavM,OAAOC,KAAKgM,GAAWhN,OAAO,SAAA3F,GAAG,OAAE2S,EAAU3S,KAAMH,IAAI,SAAA+G,GAAC,OAAEsM,SAAStM,EAAE,MAAKC,KAAK,SAACsM,EAAEC,GAAH,OAAQA,EAAED,IAE1G,GADAX,EAAa,KAAID,EAAL,CAAgB9F,SAAQ,KAChC8F,EAAUhH,KAAKtK,OAAS,GAAKsR,EAAUtG,MAAMhL,OAAS,GAAMgS,EAAWhS,OAAS,EACpF,CACIyR,GAAgB,GAChB,IAAIW,EAAYxG,EAAKsF,OAAOtS,IAAI,SAAAyT,GAAG,MAAG,CAAC/H,KAAK+H,EAAI/H,KAAMU,MAAMqH,EAAIrH,SAChE,GAAyB,IAAtBgH,EAAWhS,OACVoS,EAAU9D,KAAK,CAAChE,KAAKgH,EAAUhH,KAAMU,MAAMsG,EAAUtG,aAErD,IAAI,IAAIpE,EAAI,EAAGA,EAAIoL,EAAWhS,OAAQ4G,IAClCwL,EAAUE,OAAON,EAAWpL,GAAI,GAGxC,IAAMsC,EAAM,KAAO0C,EAAP,CAAasF,OAAOkB,IAChChB,EAAYxF,EAAK5E,GAAIkC,EAAQ,WACzBuI,GAAgB,GAChBF,EAAa,CAACvG,MAAM,GAAIV,KAAK,GAAIkB,SAAQ,IACzCmG,EAAa,IACb9F,EAAQ3C,QAMxB,OACI,oCACI,yBAAK3K,UAAU,YACX,yBAAKA,UAAU,YAEX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,iBACrC,2BAAOmE,KAAK,OAAOnE,UAAW,iBAAwC,IAArBqN,EAAK7E,KAAK/G,QAAgB4L,EAAKJ,QAAU,cAAgB,IAC1GlF,MAAOsF,EAAK7E,KAAMR,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAW7E,KAAK7G,EAAEsG,OAAOF,YAC9DsF,EAAKJ,SAAW,yBAAKjN,UAAU,oBAAf,6BAErB,yBAAKA,UAAU,cACX,2BAAO2I,QAAQ,YAAf,gBACA,8BAAU3I,UAAW,iBAAwC,IAArBqN,EAAK7E,KAAK/G,QAAgB4L,EAAKJ,QAAU,cAAgB,IACjGO,KAAK,IAAGzF,MAAOsF,EAAKL,KAAMhF,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,KAAID,EAAL,CAAWL,KAAKrL,EAAEsG,OAAOF,YACtEsF,EAAKJ,SAAW,yBAAKjN,UAAU,oBAAf,4BAErB,yBAAKA,UAAU,gBACX,4BAAQA,UAAU,6BAA6BsI,QAAS,kBAAIiL,EAAU,aAC7D9M,GAAW,0BAAMzG,UAAU,qCACR,IAAnBqN,EAAK5E,GAAGhH,OAAgB,oBAAsB,wBAEvD,4BAAQzB,UAAU,kCAAkCsI,QAAS,kBAAI+K,EAAQ,aAAzE,WAGPhG,EAAK5E,GAAGhH,OAAS,GAAK,yBAAKzB,UAAU,YAClC,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,eACrC,2BAAOmE,KAAK,OAAOnE,UAAW,iBAA6C,IAA1B+S,EAAUhH,KAAKtK,QAAgBsR,EAAU9F,QAAU,cAAgB,IAChHlF,MAAOgL,EAAUhH,KAAM/D,SAAU,SAAArG,GAAC,OAAEqR,EAAa,KAAID,EAAL,CAAgBhH,KAAKpK,EAAEsG,OAAOF,YAC7EgL,EAAU9F,SAAW,yBAAKjN,UAAU,oBAAf,2BAE9B,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,eACrC,2BAAOmE,KAAK,OAAOnE,UAAW,iBAA8C,IAA3B+S,EAAUtG,MAAMhL,QAAgBsR,EAAU9F,QAAU,cAAgB,IACrHlF,MAAOgL,EAAUtG,MAAOzE,SAAU,SAAArG,GAAC,OAAEqR,EAAa,KAAID,EAAL,CAAgBtG,MAAM9K,EAAEsG,OAAOF,YAC/EgL,EAAU9F,SAAW,yBAAKjN,UAAU,oBAAf,4BAE1B,4BAAQA,UAAU,6BAA6BsI,QAAS,kBAAIiL,EAAU,WAC7DN,GAAgB,0BAAMjT,UAAU,qCADzC,cAGA,4BAAQA,UAAU,kCAAkCsI,QAAS,kBAAI+K,EAAQ,WAAzE,WAGR,yBAAKrT,UAAU,YACX,yBAAKA,UAAU,qBACNqN,EAAKsF,OAAOtS,IAAI,SAACyT,EAAKvD,GAAN,OACb,yBAAKvQ,UAAU,YAAYgU,IAAKF,EAAIrH,MAAOwH,IAAKH,EAAIrH,MAAOjM,IAAKsT,EAAIrH,MAAOxM,MAAO,CAACiU,QAAUf,EAAU5C,EAAQ,IAAM,KAAM,KACvH/G,cAAe,kBAAI4J,EAAa,KAAID,EAAL,eAAiB5C,EAAQ,IAAQ4C,EAAU5C,EAAQ,MAAO4C,EAAU5C,EAAQ,eAS5H4D,MAzLf,SAAiBtU,GAAO,IAAD,EACmBmG,mBAAS,IAD5B,mBACZR,EADY,KACCmI,EADD,OAEe3H,mBAAS,IAFxB,mBAEZoO,EAFY,KAEDC,EAFC,KAIbtG,EAA2B,WAC7BJ,EAAe,IACf2G,EAAmB5B,IANJ,EAS2B1M,mBAAS0M,GATpC,mBASZ6B,EATY,KASKD,EATL,KAiCbtG,EAAa,SAAAvD,GACfxI,EAAcwB,YAAYyF,KAAK,SAAAzF,GAC3B4Q,EAAa5Q,KAEjBgH,KAEJ9C,oBAAU,kBAAIqG,EAAY,eAAS,IACnC,IAAM1C,EAAK,SAACC,EAAQC,GAAT,MAAsB,OAANA,EAAYD,EAAQC,GAC/C,OACI,kBAAC,EAAD,CAAWtB,QAASkK,EAAWjP,gBAxBX,SAAC3E,EAAK2F,GAC1B,GAAqB,IAAlBA,EAAO1E,OAAc,OAAO,EAC/B,IAAIoH,EAAQuL,EAAU5T,GACtB,OAAQqI,EAAML,KAAKoD,QAAQzF,IAAW,GAAO0C,EAAMmE,KAAKpB,QAAQzF,IAAW,GAqBVgE,WAhClD,SAAC2B,GAChBwI,EAAmBxI,GACnB6B,EAAe,eAAE7B,EAAUrD,GAAI,gBA+B/BjD,YAAaA,EAAawF,cAAe,kBAAC,EAAD,MACzC1F,YAAa,CAACkD,KAAK,SAAAgD,GAAG,OAAEF,EAAG,eAAgBE,IAAMwB,KAAK,SAAAxB,GAAG,OAAEF,EAAG,eAAgBE,IAAMmH,OAAO,SAAAnH,GAAG,MAAQ,OAANA,EAAa,cAAgBA,EAAI/J,SACjIsE,cAAe,CAACkD,GAAGhH,EAAcyB,YAAayF,GAAG,kBAAI6E,EAAYD,KACjEyG,gBAAgB,YAChBvJ,YAAa,kBAAC2H,EAAD,CAAkB1K,SAAUqM,EAAiB1B,YAxB3C,SAACrS,EAAKiU,EAAShK,GAAY,IACnCjC,EAAsBiM,EAAtBjM,KAAMwE,EAAgByH,EAAhBzH,KAAM2F,EAAU8B,EAAV9B,OACbtQ,EAAM,eAAK7B,EAAK,CAACgI,OAAMwE,OAAM2F,WAC/B1Q,EAAcyB,YAAd,KAA8B0Q,EAA9B,GAA4C/R,GACN,IAAlC6E,OAAOC,KAAKiN,GAAW3S,QAAcyH,KAAK,SAAAd,GAAC,OAAE4F,EAAY,WACzDL,EAAe,eAAEnN,EAAK,eACtB8T,EAAmB,KAAIG,EAAL,CAAchM,GAAGjI,KACnCiK,SAiB4EqI,iBAjC/D,WACrBnF,EAAe,IACf2G,EAAmB5B,SCZZgC,MARf,SAAmB7U,GACf,IAAMyL,EAAK,SAACC,EAAQC,GAAT,MAAsB,OAANA,EAAYD,EAAQC,GAC/C,OAAQ,kBAAC,EAAD,CAAQlI,SAAS,iBAAiBE,aAAa,sBAAsBoC,cAAc,mBAC3FyM,WAAY,CAAC,QAAU,mBAAoB,MAAQ,oBAAqB,MAAQ,gBAAiB,SAAW,qBAAsB,KAAO,gCACzI/M,YAAa,CAACiH,QAAQ,SAAAf,GAAG,OAAEF,EAAG,aAAcE,IAAMgB,MAAM,SAAAhB,GAAG,OAAEF,EAAG,eAAgBE,Q,glBCCpF,IAAMmJ,GAAiB,CAACpI,QAAQ,GAAIqI,QAAQ,GAAInM,GAAG,GAAI+D,MAAM,GAAI7F,OAAO,IAkDxE,SAASkL,GAAchS,GAAO,IAAD,EACEmG,mBAAS,CAAC8L,SAAQ,EAAOC,IAAG,EAAOC,KAAI,IADzC,mBACnBC,EADmB,KACXC,EADW,KAEzB,OACI,oCACI,yBAAKlS,UAAU,QACP,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,mBAAmBmE,KAAK,WAAWsE,GAAG,kBAAkBC,QAASuJ,EAAOH,QACzF9J,SAAU,SAAArG,GAAC,OAAEuQ,EAAU,MAAID,EAAL,CAAaH,QAAQnQ,EAAEsG,OAAOS,cACpD,2BAAO1I,UAAU,mBAAmB2I,QAAQ,mBAA5C,mBAGXsJ,EAAOH,SAAW,kBAAC,EAAD,OAI/B,SAAS+C,GAAiBhV,GAAO,IACtBqI,EAA2CrI,EAA3CqI,SAAU4M,EAAiCjV,EAAjCiV,YAAahC,EAAoBjT,EAApBiT,iBADF,EAEC9M,oBAAS,GAFV,mBAEtBS,EAFsB,KAEbC,EAFa,OAGGV,oBAAS,GAHZ,mBAGtB+O,EAHsB,KAGZC,EAHY,OAIJhP,mBAAS,MAAIkC,EAAL,CAAe+E,SAAQ,KAJ3B,mBAIrBI,EAJqB,KAIfC,EAJe,OAKItH,mBAAiC,IAAxBqH,EAAKuH,QAAQnT,OAAewT,eAAYC,cAAiBD,eAAYE,kBAAkBC,0BAAeC,KAAKC,MAAMjI,EAAKuH,YALnI,mBAKrBW,EALqB,KAKXC,EALW,KA2C5B,OACI,oCACA,yBAAKxV,UAAU,YACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,YACrC,2BAAOmE,KAAK,OAAOnE,UAAW,iBAA2C,IAAxBqN,EAAKd,QAAQ9K,QAAgB4L,EAAKJ,QAAU,cAAgB,IAC7GlF,MAAOsF,EAAKd,QAASvE,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAWd,QAAQ5K,EAAEsG,OAAOF,YACpEsF,EAAKJ,SAAW,yBAAKjN,UAAU,oBAAf,wBAErB,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,UACrC,2BAAOmE,KAAK,OAAOnE,UAAW,iBAAqBqN,EAAKb,OAA+B,IAAtBa,EAAKb,MAAM/K,SAAiB4L,EAAKJ,QAA0B,GAAhB,eAC5GlF,MAASsF,EAAKb,MAAQa,EAAKb,MAAQ,GAAIxE,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAWb,MAAM7K,EAAEsG,OAAOF,YACpFsF,EAAKJ,SAAW,yBAAKjN,UAAU,oBAAf,sBAErB,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,WACrC,2BAAOmE,KAAK,OAAOnE,UAAW,iBAAqBqN,EAAK1G,QAAiC,IAAvB0G,EAAK1G,OAAOlF,SAAiB4L,EAAKJ,QAA0B,GAAhB,eAC9GlF,MAASsF,EAAK1G,OAAS0G,EAAK1G,OAAS,GAAIqB,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAW1G,OAAOhF,EAAEsG,OAAOF,YACvFsF,EAAKJ,SAAW,yBAAKjN,UAAU,oBAAf,uBAErB,yBAAKA,UAAU,gBACX,4BAAQA,UAAU,6BAA6BsI,QArC3C,WACpB,IAAImN,EAAcJ,KAAKK,UAAUC,wBAAaJ,EAASK,sBAEvD,GADAtI,EAAQ,MAAID,EAAL,CAAWJ,SAAQ,EAAM2H,QAAQa,KACrCpI,EAAKd,QAAQ9K,OAAS,GAAK4L,EAAKb,OAASa,EAAKb,MAAM/K,OAAS,GAAK4L,EAAK1G,QAAU0G,EAAK1G,OAAOlF,OAAS,EACzG,CACIiF,GAAW,GACX,IAAI8M,EAAoB,KAAZnG,EAAK5E,IAAa,IAAIoB,KAASwD,EAAK5E,GAChDqM,EAAYtB,EAAD,MAAYnG,EAAZ,CAAkBuH,QAAQa,IAAc,WAC/C/O,GAAW,GACX4G,EAAQ,MAAID,EAAL,CAAW5E,GAAG+K,UA6BJ/M,GAAW,0BAAMzG,UAAU,qCACR,IAAnBqN,EAAK5E,GAAGhH,OAAgB,cAAgB,kBAEjD,4BAAQzB,UAAU,kCAAkCsI,QA/CzD,WACX5B,GAAW,GACX4G,EAAQqH,IACR7B,IACA0C,EAAYP,eAAYC,iBA2CR,aAKhB,yBAAKlV,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,YACA,yBAAKA,UAAU,oBAAmB,2BAAOmE,KAAK,WAAWuE,QAASqM,EAAU/M,SAAU,SAAArG,GAAC,OAAEqT,EAAYrT,EAAEsG,OAAOS,eAItH,kBAAC,SAAD,CAAQmN,YAAaN,EAAUO,iBAAiB,OAAOC,gBAAgB,kCAAkC1F,SAAU0E,EAAUiB,cAAejB,EAC5IkB,oBAlEW,SAAAC,GACnBV,EAAYU,IAiEiCC,QAAS,CAACC,MAAO,CAACC,eAtEvC,SAAAC,GAAI,OAAI,IAAIpV,QACpC,SAACC,EAASC,GAAV,OAXkB,SAACkV,EAAM7L,GACzB,IAAI8L,EAAS,IAAIC,WACjBD,EAAOE,cAAcH,GAGrBC,EAAOG,OAAS,kBAAMjM,EAAS8L,EAAOI,SAEtCJ,EAAOK,QAAU,SAAAC,KAIIC,CAAcR,EAAM,SAAA/U,GAAI,OAAIJ,EAAQ,CAAEI,KAAM,CAAEwK,KAAMxK,UAqE0BwV,cAAc,SAM1GC,OA3Jf,SAAkBnX,GAAO,IAAD,EACkBmG,mBAAS,IAD3B,mBACbR,EADa,KACAmI,EADA,OAE0B3H,mBAAS2O,IAFnC,mBAEbsC,EAFa,KAEIC,EAFJ,OAGYlR,mBAAS,IAHrB,mBAGbrC,EAHa,KAGHwT,EAHG,KAiBdnJ,EAAa,SAAAvD,GACfxI,EAAc0B,WAAWuF,KAAK,SAAAvF,GAE1BwT,EAAYxT,KAGhB8G,KAeJ,OAbA9C,oBAAU,kBAAIqG,EAAY,eAAS,IAc/B,kBAAC,EAAD,CAAW9D,QAASvG,EAAUwB,gBA3BV,SAAC3E,EAAK2F,GAC1B,OAAqB,IAAlBA,EAAO1E,QACEkC,EAASnD,GACP+L,QAAQX,QAAQzF,IAAW,GAwBuBgE,WAnCjD,SAAC2B,GAChBoL,EAAmBpL,GACnB6B,EAAe,eAAE7B,EAAUrD,GAAI,gBAkC/B7C,cAAc,qBAAqBC,YAAe,SAAAuB,GAAC,MAAG,CAACmF,QAAQnF,EAAEmF,QAASC,MAAMpF,EAAEoF,MAAO7F,OAAOS,EAAET,SAClGnB,YAAaA,EAAawF,cAAe,kBAAC,GAAD,MACzC1F,YAAa,CAACiH,QAAQ,SAAAf,GAAG,OAhBlB,SAACD,EAAQC,GAAT,MAAsB,OAANA,EAAYD,EAAQC,EAgBhBF,CAAG,UAAWE,KACzCP,YAAa,kBAAC4J,GAAD,CAAkB3M,SAAU+O,EAAiBnC,YAf3C,SAACtU,EAAK4W,EAAa3M,GAAY,IACvC8B,EAAmC6K,EAAnC7K,QAASqI,EAA0BwC,EAA1BxC,QAASpI,EAAiB4K,EAAjB5K,MAAO7F,EAAUyQ,EAAVzQ,OAC1BtE,EAAM,eAAK7B,EAAK,CAAC+L,UAASqI,UAASpI,QAAO7F,WAC5C1E,EAAc2B,aAAd,MAA+BD,EAA/B,GAA4CtB,GACP,IAAjC6E,OAAOC,KAAKxD,GAAUlC,QAAcyH,KAAK,SAAAd,GAAC,OAAE4F,EAAY,WACxDL,EAAe,eAAEnN,EAAK,eACtB0W,EAAmB,MAAIE,EAAL,CAAkB3O,GAAGjI,KACvCiK,SAQ4EqI,iBAnC/D,WACrBnF,EAAe,IACfuJ,EAAmBvC,UCRZ0C,OARf,WAEI,IAAM/L,EAAK,SAACC,EAAQC,GAAT,MAAsB,OAANA,EAAYD,EAAQC,GAC/C,OAAQ,kBAAC,EAAD,CAAQlI,SAAS,uBAAuBE,aAAa,4BAA4BoC,cAAc,mBAEvGN,YAAa,CAACiH,QAAQ,SAAAf,GAAG,OAAEF,EAAG,aAAcE,IAAMgB,MAAM,SAAAhB,GAAG,OAAEF,EAAG,aAAcE,QCCnE8L,OAPf,WAEI,IAAMhM,EAAK,SAACC,EAAQC,GAAT,MAAsB,OAANA,EAAYD,EAAQC,GAC/C,OAAQ,kBAAC,EAAD,CAAQlI,SAAS,sBAAsBE,aAAa,2BAA2BqI,MAAM,eAC7FvG,YAAa,CAACiH,QAAQ,SAAAf,GAAG,OAAEF,EAAG,YAAaE,IAAMgB,MAAM,SAAAhB,GAAG,OAAEF,EAAG,YAAaE,QCEjE+L,OAPf,WAEI,IAAMjM,EAAK,SAACC,EAAQC,GAAT,MAAsB,OAANA,EAAYD,EAAQC,GAC/C,OAAQ,kBAAC,EAAD,CAAQlI,SAAS,kBAAkBE,aAAa,uBAAuBoC,cAAc,qBAC7FN,YAAa,CAACiH,QAAQ,SAAAf,GAAG,OAAEF,EAAG,cAAeE,IAAMgB,MAAM,SAAAhB,GAAG,OAAEF,EAAG,cAAeE,Q,ujBCFpF,IAAMgM,GAAiB,CAACC,KAAK,GAAIxK,SAAQ,EAAOyK,GAAG,GAAIjP,GAAG,MAAOkP,KAAK,GAAIhR,OAAO,IA0DjF,SAASyG,GAAKvN,GAAO,IAAD,EACQmG,mBAAS,MAAInG,EAAMqI,SAAX,CAAqBvB,OAAsB,QAAf9G,EAAMwO,KAAiB,GAAKxO,EAAMwO,KAAMpB,SAAQ,KAD5F,mBACTI,EADS,KACHC,EADG,KAETsK,EAAY/X,EAAZ+X,SAFS,EAgBa5R,oBAAS,GAhBtB,mBAgBVS,EAhBU,KAgBDC,EAhBC,KAiBhB,OACI,yBAAK1G,UAAU,cACX,yBAAKA,UAAU,SACX,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,kBAAkBC,MAAO,CAAC,QAAU,QAC9C,yBAAKD,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,OACrC,2BAAOmE,KAAK,OAAOnE,UAAW,iBAA0C,IAAvBqN,EAAK1G,OAAOlF,QAAgB4L,EAAKJ,QAAU,cAAgB,IAC5GlF,MAAOsF,EAAK1G,OAAQqB,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAW1G,OAAOhF,EAAEsG,OAAOF,YAClEsF,EAAKJ,SAAW,yBAAKjN,UAAU,oBAAf,sBAErB,8BAAUwN,KAAK,IAAIvN,MAAO,CAAC,MAAQ,QAAS8H,MAAOsF,EAAKoK,KAAMzP,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAWoK,KAAK9V,EAAEsG,OAAOF,YAC3G,yBAAK/H,UAAU,oBACX,2BAAOmE,KAAK,OAAOnE,UAAU,eAAeyN,YAAY,YAAY1F,MAAOsF,EAAKqK,GAAI1P,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAWqK,GAAG/V,EAAEsG,OAAOF,YAC/H,2BAAO5D,KAAK,OAAOnE,UAAU,eAAeyN,YAAY,cAAc1F,MAAOsF,EAAKsK,KAAM3P,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAWsK,KAAKhW,EAAEsG,OAAOF,YAErI,yBAAK/H,UAAU,sBACX,4BAAQA,UAAS,cAAqB,QAAZqN,EAAK5E,GAAe,cAAgB,WAA7C,WAAkEH,QA/B9F,WAGb,GAFA5B,GAAW,GACX4G,EAAQ,MAAID,EAAL,CAAWJ,SAAQ,KACvBI,EAAK1G,OAAOlF,OAAS,EACxB,CACI,IAAIoW,EAAS,kBAAczF,OAAO,IAAIvI,MAAzB,YAAoCwD,EAAK1G,QACtDiR,EAAqB,QAAZvK,EAAK5E,GAAeoP,EAAYxK,EAAK5E,GAAI4E,EAAM,WACpD3G,GAAW,GACE,QAAV2G,EAAK5E,IACJ6E,EAAQkK,SAuBK/Q,GAAW,0BAAMzG,UAAU,qCAD5B,UAIR,uBAAGA,UAAU,kBAA8B,QAAZqN,EAAK5E,GAAe4E,EAAK5E,GAAI,qBAOrEqP,OAtGf,SAAkBjY,GAAO,IAAD,EACkBmG,mBAAS,IAD3B,mBACbR,EADa,KACAmI,EADA,OAEgB3H,mBAAS,IAFzB,mBAEb4H,EAFa,KAEDC,EAFC,OAGY7H,mBAAS,IAHrB,mBAGb/C,EAHa,KAGH8U,EAHG,KAKdhK,EAA2B,WAC7BJ,EAAe,IACfE,EAAc,KAWZG,EAAa,SAAAvD,GACfxI,EAAcgB,WAAWiG,KAAK,SAAAgB,GAC1B6N,EAAY7N,KAEhBO,KAEJ9C,oBAAU,kBAAIqG,EAAY,eAAS,IACnC,IAAM4J,EAAU,SAACpX,EAAKwX,EAASvN,GAAY,IAChCgN,EAAkBO,EAAlBP,KAAMC,EAAYM,EAAZN,GAAIC,EAAQK,EAARL,KACjB,GAAGD,EAAGjW,OAAS,EACf,CACI,IAAMY,EAAM,eAAK7B,EAAK,CAACiX,OAAMC,KAAIC,SACjC1V,EAAciB,YAAd,MAA8BD,EAA9B,GAA2CZ,GAA0C,IAAjC6E,OAAOC,KAAKlE,GAAUxB,QAAcyH,KAAK,SAAAd,GAAC,OAAE4F,EAAY,WACxGH,EAAc,MAAID,EAAL,eAAkBpN,EAAlB,MAA2BwX,EAA3B,CAAoCvP,GAAGjI,OACpDmN,EAAe,MAAInI,EAAL,eAAmBhF,EAAK,gBACtCiK,UAINa,EAAK,SAACC,EAAQC,GAAT,MAAsB,OAANA,EAAYD,EAAQC,GAE/C,OACI,kBAAC,EAAD,CAAWtB,QAASjH,EAAUkC,gBA3BV,SAAC3E,EAAK2F,GAC1B,GAAqB,IAAlBA,EAAO1E,OAAc,OAAO,EAC/B,IAAIoH,EAAQ5F,EAASzC,GACrB,OAAQqI,EAAM4O,KAAK7L,QAAQzF,IAAW,GAAO0C,EAAM6O,GAAG9L,QAAQzF,IAAW,GAAK3F,EAAIoL,QAAQzF,IAAW,GAwBrCgE,WA/BjD,SAAC2B,GAChB+B,EAAc,MAAID,EAAL,eAAkB9B,EAAUrD,GAAIqD,KAC7C6B,EAAe,MAAInI,EAAL,eAAmBsG,EAAUrD,GAAI,iBA6ByCjD,YAAaA,EAAaC,OAFvG,SAAAwS,GAAG,OAAIA,EAAIC,MAAM,KAAK3O,MAAM,GAAG8C,KAAK,MAG3CtG,cAAe,CAACkD,GAAGhH,EAAciB,YAAaiG,GAAG,kBAAI6E,EAAYD,KAA4BxI,YAAY,eACzGD,YAAa,CAACoS,GAAG,SAAAlM,GAAG,OAAEF,EAAG,YAAaE,IAAKiM,KAAK,SAAAjM,GAAG,OAAEF,EAAG,eAAgBE,KACxEP,YACI,yBAAKjL,UAAU,YACX,4BAAQA,UAAU,iBAAiBC,MAAO,CAACiO,SAAS,WAAYC,MAAM,OAAQC,IAAI,OAClF9F,QAASyF,GADT,aAGC7G,OAAOC,KAAKyG,GAAYvN,IAAI,SAAAG,GAAG,OAC5B,kBAAC,GAAD,CAAMA,IAAKA,EAAK6N,KAAM7N,EAAK0H,SAAU0F,EAAWpN,GAAMoX,SAAUA,U,ujBCnDxF,IACMO,GAAQxX,EAAQ,KAASyX,QA4D/B,SAAShL,GAAKvN,GAAO,IAAD,EACQmG,mBAAS,MAAInG,EAAMqI,SAAX,CAAqB+E,SAAQ,KAD7C,mBACTI,EADS,KACHC,EADG,KAET+K,EAAYxY,EAAZwY,SAFS,EAGarS,oBAAS,GAHtB,mBAGVS,EAHU,KAGDC,EAHC,OAIeV,oBAAS,GAJxB,mBAIVsS,EAJU,KAIAC,EAJA,KAwBVC,EAAiB,WAInB,IAHA,IAAMC,EAAW,IAAIC,SACjBC,GAAU,EACVC,EAAU1R,OAAOC,KAAKkG,EAAKlC,OACvB9C,EAAI,EAAGA,EAAIuQ,EAAQnX,OAAQ4G,IAC5BgF,EAAKlC,MAAMyN,EAAQvQ,IAAIwQ,QAA4C,QAAlCxL,EAAKlC,MAAMyN,EAAQvQ,IAAIyQ,SACvDL,EAASM,OAAO1L,EAAKlC,MAAMyN,EAAQvQ,IAAIG,KAAM6E,EAAKlC,MAAMyN,EAAQvQ,IAAI2Q,MACpEL,GAAU,GAGfA,IAECJ,GAAY,GACZU,MAAM,iEAAkE,CAACC,KAAKT,EAAUU,OAAO,SAC9FjQ,KAAK,SAAAkQ,GAAQ,OAAEA,EAASC,SACxBnQ,KAAK,SAAA3H,GAEF,IAAIoJ,EAnCO,SAAC2O,GAIpB,IAHA,IAAInS,EAAOD,OAAOC,KAAKkG,EAAKlC,OACxBoO,EAAWrS,OAAOC,KAAKmS,GACvBE,EAAW,GAHgB,WAIvBnR,GACJ,GAAkC,QAA/BgF,EAAKlC,MAAMhE,EAAKkB,IAAIyQ,SAAqBzL,EAAKlC,MAAMhE,EAAKkB,IAAIwQ,OAC5D,iBACJ,GAAkC,QAA/BxL,EAAKlC,MAAMhE,EAAKkB,IAAIyQ,QAAoBzL,EAAKlC,MAAMhE,EAAKkB,IAAIwQ,OAAO,CAClE,IAAIY,EAAYF,EAASG,KAAK,SAAAtS,GAAC,OAAEA,EAAEwE,QAAQzE,EAAKkB,KAAO,IAEvDmR,EAASrS,EAAKkB,IAAd,MAAwBgF,EAAKlC,MAAMhE,EAAKkB,IAAxC,CAA6CyQ,OAAO,SAAU/M,KAAKuN,EAASG,YACrED,EAASrS,EAAKkB,IAAI2Q,UAGzBQ,EAASrS,EAAKkB,IAAd,MAAwBgF,EAAKlC,MAAMhE,EAAKkB,MAVxCA,EAAI,EAAGA,EAAIlB,EAAK1F,OAAQ4G,IAAI,EAA5BA,GAYR,OAAOmR,EAmBcG,CAAepY,EAAKqY,aACjCtM,EAAQ,MAAID,EAAL,CAAWlC,MAAOR,OAE1BwF,MAAM,SAAAtB,MAENmB,QAAQ,SAAA5H,GACPmQ,GAAY,OA2BxB,OACI,oCACI,yBAAKvY,UAAU,cACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,mBACV,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,WACrC,8BAAUA,UAAU,eAAe+H,MAAOsF,EAAKwM,OAAQxJ,UAAQ,MAGvE,wBAAIrQ,UAAU,mBACV,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,gBACA,yBAAKA,UAAU,oBAAmB,2BAAOmE,KAAK,WAAWuE,UAAW2E,EAAKyM,WAAY9R,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAWyM,WAAWnY,EAAEsG,OAAOS,kBAIpJ,wBAAI1I,UAAU,mBACV,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,kBACA,yBAAKA,UAAU,oBAAmB,2BAAOmE,KAAK,WAAWuE,UAAW2E,EAAK0M,aAAc/R,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAW0M,aAAapY,EAAEsG,OAAOS,kBAIxJ,wBAAI1I,UAAU,mBACV,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,WACA,yBAAKA,UAAU,oBAAmB,2BAAOmE,KAAK,WAAWuE,UAAW2E,EAAK2M,QAAShS,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAW2M,QAAQrY,EAAEsG,OAAOS,kBAI9I,wBAAI1I,UAAU,mBACV,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,WACrC,2BAAOmE,KAAK,OAAO4D,MAAOsF,EAAK4M,OAAQjS,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAW4M,OAAOtY,EAAEsG,OAAOF,UAAS9H,MAAO,CAAC,UAAY,SAAU,MAAQ,YAG7I,wBAAID,UAAU,mBACV,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,OACrC,2BAAOmE,KAAK,OAAO4D,MAAQsF,EAAK6M,GAAU7M,EAAK6M,GAAV,GAAclS,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAW6M,GAAGvY,EAAEsG,OAAOF,UAAS9H,MAAO,CAAC,UAAY,SAAU,MAAQ,aAGrJ,wBAAID,UAAU,mBACV,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,WACrC,2BAAOmE,KAAK,OAAO4D,MAAQsF,EAAK8M,MAAa9M,EAAK8M,MAAV,GAAiBnS,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAW8M,MAAMxY,EAAEsG,OAAOF,UAAS9H,MAAO,CAAC,UAAY,SAAU,MAAQ,aAG9J,wBAAID,UAAU,mBAAkB,2BAzDzC,SAACQ,GACR,IAAIoJ,EAAI,IAAIC,KAAS,EAAJrJ,GACjB,OAAOoJ,EAAEE,qBAAuB,IAAMF,EAAEG,qBAuDYC,CAAGqD,EAAK+M,SAC5C,wBAAIpa,UAAU,mBACV,4BAAQA,UAAU,kBAAkBsI,QApE3C,WACTqB,MAAM0D,EAAK4M,UAEXvT,GAAW,GACX2R,EAAShL,EAAK5E,GAAI4E,EAAM,WACpB3G,GAAW,QA+DyDD,GAAW,0BAAMzG,UAAU,qCAAnF,YAMhB,yBAAKA,UAAU,cACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,+BACV,wBAAKA,UAAU,mBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,iBACrC,2BAAOmE,KAAK,OAAOsE,GAAG,aAAaT,SAAU,SAAArG,GAAC,OAtFjD,SAAA0Y,GAErB,IADA,IAAI7H,EAAM,GACFnK,EAAI,EAAGA,EAAIgS,EAAK5Y,OAAQ4G,IAC5BmK,EAAI6H,EAAKhS,GAAGG,MAAQ,CAACA,KAAK6R,EAAKhS,GAAGG,KAAMuD,KAAK,GAAIiN,KAAKqB,EAAKhS,GAAI2D,KAAKqO,EAAKhS,GAAG2D,KAAM6M,QAAO,EAAMC,OAAO,MAAOsB,MAAMhI,OAAO,IAAIvI,OAClIyD,EAAQ,MAAID,EAAL,CAAWlC,MAAM,MAAKkC,EAAKlC,MAAX,GAAqBqH,MAkF4B8H,CAAiB3Y,EAAEsG,OAAOkD,QAAQoP,SAAS,eAGnG,wBAAIva,UAAU,mBACV,2BAAOA,UAAU,gCACb,+BACI,4BAAI,6BAAS,sCAAe,sCAEhC,+BACKqN,EAAKlC,OAASjE,OAAOC,KAAKkG,EAAKlC,OAAO9K,IAAI,SAAAG,GAAG,OAAE,wBAAIA,IAAKA,EAAKP,MAAO,CAAC,QAAWoN,EAAKlC,MAAM3K,GAAKqY,OAAS,IAAK,OAC3G,4BAAI,2BAAO1U,KAAK,WAAWuE,QAAS2E,EAAKlC,MAAM3K,GAAKqY,OAAQ7Q,SAAU,SAAArG,GAAC,OApGnF,SAACnB,EAAKX,GAC1B,IAAI2a,EAAUnN,EAAKlC,MAAM3K,GACzB8M,EAAQ,MAAID,EAAL,CAAWlC,MAAM,MAAKkC,EAAKlC,MAAX,eAAmB3K,EAAnB,MAA4Bga,EAA5B,GAAwC3a,QAkG0C4a,CAAgBja,EAAK,CAACqY,OAAOlX,EAAEsG,OAAOS,cAC/G,4BAAK2E,EAAKlC,MAAM3K,GAAKsY,QACrB,4BACKzL,EAAKlC,MAAM3K,GAAKuL,MAAQ,uBAAGN,KAAM4B,EAAKlC,MAAM3K,GAAKuL,KAAM9D,OAAO,UAAUoF,EAAKlC,MAAM3K,GAAKgI,OACvF6E,EAAKlC,MAAM3K,GAAKuL,MAAQ,8BAAOsB,EAAKlC,MAAM3K,GAAKgI,UAGzD,4BACI,wBAAIX,QAAQ,KACR,4BAAQ7H,UAAU,sBAAsBsI,QAAS,SAAA3G,GAAC,OAAE6W,MAC/CF,GAAY,0BAAMtY,UAAU,qCADjC,0BAe5C,SAAS6R,GAAchS,GACnB,IAAI+O,EAAI,CAACiL,OAAO,GAAI5M,SAAQ,EAAOtG,OAAO,GAAI+T,WAAW,IADhC,EAEI1U,oBAAS,GAFb,mBAEnBS,EAFmB,KAEVC,EAFU,OAGHV,mBAAS4I,GAHN,mBAGnBvB,EAHmB,KAGdC,EAHc,OAwBEtH,mBAAS,CAAC2U,YAAW,IAxBvB,mBAwBnB1I,EAxBmB,KAwBXC,EAxBW,KAyBzB,OACI,yBAAKlS,UAAU,SAEX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,mBAAmBmE,KAAK,WAAWsE,GAAG,kBAAkBC,QAASuJ,EAAOH,QACzF9J,SAAU,SAAArG,GAAC,OAAEuQ,EAAU,MAAID,EAAL,CAAa0I,WAAWhZ,EAAEsG,OAAOS,cACvD,2BAAO1I,UAAU,mBAAmB2I,QAAQ,mBAA5C,iBAGPsJ,EAAO0I,YAAc,yBAAK3a,UAAU,QACjC,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,mBACV,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,YACrC,2BAAOmE,KAAK,OAAOnE,UAAU,eAAe+H,MAAOsF,EAAKqN,WACvD1S,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAWqN,WAAW/Y,EAAEsG,OAAOF,cAG5D,wBAAI/H,UAAU,mBACV,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,oBAAhB,WACrC,2BAAOmE,KAAK,OAAQnE,UAAW,iBAA0C,IAAvBqN,EAAKwM,OAAOpY,QAAgB4L,EAAKJ,QAAU,cAAgB,IAC7GlF,MAAOsF,EAAKwM,OAAQ7R,SAAU,SAAArG,GAAC,OAAE2L,EAAQ,MAAID,EAAL,CAAWwM,OAAOlY,EAAEsG,OAAOF,cAG3E,wBAAI/H,UAAU,mBACV,4BAASsI,QAAS,SAAA3G,GAAC,OA7CxB,WAEX,GADA2L,EAAQ,MAAID,EAAL,CAAWJ,SAAQ,KACvBI,EAAKwM,OAAOpY,OAAS,EAAE,CACtBiF,GAAW,GACX,IAAInF,EAAO,CAACsY,OAAOxM,EAAKwM,OAAOM,MAAM,YAAaO,WAAWrN,EAAKqN,WAAYE,KAAK,cACnFzC,GAAMyC,KAAK,gEAAiErZ,GAC3E2H,KAAK,SAAA2R,GAEFvN,EAAQ,MAAID,EAAL,CAAWJ,SAAQ,EAAOtG,OAAOkU,EAAStZ,KAAKoF,UACtDD,GAAW,KACZyJ,MAAM,SAAA2K,GACLC,QAAQC,IAAIF,GACZpU,GAAW,MAiCkBuU,IAAYjb,UAAU,mBAAmByG,GAAW,0BAAMzG,UAAU,qCAAzF,UACA,4BAASsI,QAAS,SAAA3G,GAhDlC2L,EAAQsB,IAgD0C5O,UAAU,0BAA5C,UAGHqN,EAAK1G,OAAOlF,OAAS,GAAK,wBAAIzB,UAAU,mBACrC,yBAAKA,UAAU,yBAAyBqN,EAAK1G,YAOtDuU,OAzSf,SAAerb,GAAO,IAAD,EACqBmG,mBAAS,IAD9B,mBACVR,EADU,KACGmI,EADH,OAEmB3H,mBAAS,IAF5B,mBAEV4H,EAFU,KAEEC,EAFF,OAGS7H,mBAAS,IAHlB,mBAGV7C,EAHU,KAGHgY,EAHG,KAIXpN,EAA2B,WAC7BJ,EAAe,IACfE,EAAc,KAaZG,EAAa,SAAAvD,GACfxI,EAAckB,QAAQ+F,KAAK,SAAAgB,GACvBiR,EAASjR,KAEbO,KAEJ9C,oBAAU,kBAAIqG,EAAY,eAAS,IACnC,IAAMqK,EAAU,SAAC7X,EAAKoa,EAAMnQ,GAAY,IAC7BqP,EAA+Dc,EAA/Dd,WAAYG,EAAmDW,EAAnDX,OAAQF,EAA2Ca,EAA3Cb,aAAcC,EAA6BY,EAA7BZ,QAAS7O,EAAoByP,EAApBzP,MAAO+O,EAAaU,EAAbV,GAAIC,EAASS,EAATT,MAE7D,IAAIxQ,MAAMsQ,GACV,CAAC,IAAD,EACUmB,GAAO,6BAAQ5a,EAAR,UAAqB2K,GAArB,wBAAgC3K,EAAhC,OAA0C0Z,GAA1C,wBAAkD1Z,EAAlD,UAA+D2Z,GAA/D,wBAA0E3Z,EAA1E,eAA4FsZ,GAA5F,wBAA2GtZ,EAA3G,WAAyHyZ,GAAzH,wBAAoIzZ,EAApI,iBAAwJuZ,GAAxJ,wBAA0KvZ,EAA1K,YAAyLwZ,GAAzL,GACb/X,EAAcmB,UAAUgY,EAAuC,IAA9BlU,OAAOC,KAAKhE,GAAO1B,QAAcyH,KAAK,SAAAd,GAAC,OAAE4F,EAAY,WAClFH,EAAc,MAAID,EAAL,eAAkBpN,EAAlB,MAA2Boa,EAA3B,CAAiCnS,GAAGjI,OACjDmN,EAAe,MAAInI,EAAL,eAAmBhF,EAAK,gBACtCiK,UAINa,EAAK,SAACC,EAAQC,GAAT,MAAsB,OAANA,EAAYD,EAAQC,GAC/C,OACI,kBAAC,EAAD,CAAWtB,QAAS/G,EAAOgC,gBA3BP,SAAC3E,EAAK2F,GAC1B,GAAqB,IAAlBA,EAAO1E,OAAc,OAAO,EAC/B,IAAIoH,EAAQ1F,EAAM3C,GAClB,OAAQqI,EAAMgR,OAAOjO,QAAQzF,IAAW,GAAK0C,EAAMsR,MAAMvO,QAAQzF,IAAW,GAwBfgE,WAjCjD,SAAC2B,GAEb+B,EAAc,eAAE/B,EAAUrD,GAAIqD,IAC9B6B,EAAe,eAAE7B,EAAUrD,GAAI,gBA8BmDjD,YAAaA,EAC3FO,cAAe,CAACkD,GAAGhH,EAAcmB,UAAW+F,GAAG,kBAAI6E,EAAYD,KAA4BxI,YAAY,eACvGD,YAAa,CAACuU,OAAO,SAAArO,GAAG,OAAEF,EAAG,cAAeE,IAAKyO,OAAO,SAAAzO,GAAG,OAAEF,EAAG,SAAUE,IAAM2O,MAAM,SAAA3O,GAAG,OAAEF,EAAG,SAAUE,KACxGR,cAAe,kBAAC,GAAD,MACfC,YACI,yBAAKjL,UAAU,YACX,4BAAQA,UAAU,iBAAiBC,MAAO,CAACiO,SAAS,WAAYC,MAAM,OAAQC,IAAI,OAClF9F,QAASyF,GADT,aAGC7G,OAAOC,KAAKyG,GAAYvN,IAAI,SAAAG,GAAG,OAC5B,kBAAC,GAAD,CAAMA,IAAKA,EAAK6N,KAAM7N,EAAK0H,SAAU0F,EAAWpN,GAAM6X,SAAUA,UCxDjF,IAAMgD,GAAW1a,EAAQ,KAC1B2a,GAAY3a,EAAQ,KAWI,IAAzB0a,GAASE,KAAK9Z,QACjB4Z,GAASG,cAXY,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,gBACnBC,MAAO,+CAMO,IAAIT,GAAWU,KAAKC,OAAOZ,GAASW,QCwCvCE,mBAlCf,SAAgBrc,GAAO,IAAD,EACMmG,mBAASnG,EAAMsc,QAAUtc,EAAMsc,QAAQ9X,KAAO,KADpD,mBACXlE,EADW,KACLic,EADK,KAMlB,OAJAvc,EAAMsc,QAAQE,OAAO,SAACC,EAAUC,GAC5BH,EAAQE,EAASE,YAIjB,yBAAKxc,UAAU,MAAMC,MAAO,CAACiO,SAAS,WAAYpD,QAAQ,MAAO2R,OAAO,MAAOlO,OAAO,QAClF,yBAAKvO,UAAU,+BAA+ByI,GAAG,WAAWxI,MAAO,CAACwS,WAAW,UAC3E,6BACI,kBAAC,EAAD,CAAM3S,MAAO,CAAC,eAAgB,gBAAiB,WAAa,aAAc,WAAY,UAAW,SAAU,eAAgB,UAAW,QAAS,iBAAkBK,KAAMA,KACvK,IAIR,yBAAKH,UAAU,sBAAsBC,MAAO,CAAC6K,QAAQ,OAAQrC,GAAG,QAC5D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiU,OAAK,EAACrY,KAAK,IAAIsY,UAAWzQ,IACjC,kBAAC,IAAD,CAAOwQ,OAAK,EAACrY,KAAK,gBAAgBsY,UAAWzR,IAC7C,kBAAC,IAAD,CAAOwR,OAAK,EAACrY,KAAK,iBAAiBsY,UAAWjP,IAC9C,kBAAC,IAAD,CAAOgP,OAAK,EAACrY,KAAK,YAAYsY,UAAW7E,KACzC,kBAAC,IAAD,CAAO4E,OAAK,EAACrY,KAAK,UAAUsY,UAAWrK,IACvC,kBAAC,IAAD,CAAOoK,OAAK,EAACrY,KAAK,WAAWsY,UAAWpF,KACxC,kBAAC,IAAD,CAAOmF,OAAK,EAACrY,KAAK,WAAWsY,UAAWxI,IACxC,kBAAC,IAAD,CAAOuI,OAAK,EAACrY,KAAK,cAAcsY,UAAWjI,IAC3C,kBAAC,IAAD,CAAOgI,OAAK,EAACrY,KAAK,YAAYsY,UAAW3F,KACzC,kBAAC,IAAD,CAAO0F,OAAK,EAACrY,KAAK,gBAAgBsY,UAAWrF,KAC7C,kBAAC,IAAD,CAAOoF,OAAK,EAACrY,KAAK,iBAAiBsY,UAAWtF,KAC9C,kBAAC,IAAD,CAAOqF,OAAK,EAACrY,KAAK,SAASsY,UAAWzB,UCd3C0B,OA9Bf,SAAa/c,GAGT,OACA,kBAAC,IAAD,KACI,yBAAKG,UAAU,SAASC,MAAO,CAAC8K,aAAa,MAAOD,QAAQ,QACxD,yBAAK9K,UAAU,eAAeC,MAAO,CAACyJ,MAAM,OAAQoB,QAAQ,SACxD,yBAAK7K,MAAO,CAAC4c,MAAM,SACf,kBAAC,IAAD,CAAMzc,GAAG,KAAI,yBAAK6T,IAAI,qBAAqBD,IAAI,sCAI3D,kBAAC,GAAD,MACA,yBAAKhU,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,iBAAiBC,MAAO,CAAC6H,UAAU,WAC9C,6GCbZgV,QACW,cAA7Bpc,OAAO4b,SAASS,UAEe,UAA7Brc,OAAO4b,SAASS,UAEhBrc,OAAO4b,SAASS,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrU,KAAK,SAAAsU,GACjCA,EAAaC,iB","file":"static/js/main.359b0617.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n//import MenuData from './Application/Menu';\r\n\r\nfunction Tree(props){    \r\n    //const menu={...MenuData};\r\n    //const [tree, changeTree] = useState(menu);\r\n    const {items} = props;\r\n    return (\r\n        <React.Fragment>\r\n            <ul className=\"tree\" style={{marginTop:\"10px\"}}>\r\n                <li className=\"leaf-node\" style={{\"fontWeight\": (\"/\" === props.leaf) ? \"bold\" : \"normal\"}}><Link to=\"/\">Home</Link></li>\r\n                {\r\n                  items.map((item, index1)=><li className=\"leaf-node\" key={index1} style={{\"fontWeight\": (\"/\" + item === props.leaf) ? \"bold\" : \"normal\"}} >\r\n                      <Link to={\"/\" + item}>{item}</Link></li>)  \r\n                }\r\n                \r\n                {/*\r\n                    Object.keys(tree).map((option,index)=>(\r\n                        <li className=\"sub-root\" key={index}>\r\n                            <div onClick={()=>changeTree({...menu, [option]:{...tree[option], minus:!tree[option].minus}})}>\r\n                                <img src={tree[option].minus ? \"assets/img/minus-icon.png\" : \"assets/img/plus-icon.png\"} className=\"subtree\" style={{cursor:\"pointer\"}} alt={option} />\r\n                                <span className=\"node-text\">{option}</span>\r\n                            </div>\r\n                            <ul style={{display:tree[option].minus ? \"block\": \"none\"}}>\r\n                                {tree[option].items.map((item, index1)=>(\r\n                                    <li className=\"leaf-node\" key={index1}><Link to={\"/\" + item}>{item}</Link></li>\r\n                                ))}\r\n                            </ul>\r\n                        </li>\r\n                    ))\r\n\r\n                */}\r\n            </ul>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\nexport default Tree;","const { ipcRenderer} = window.require('electron');\r\nconst promiseDict = {};\r\n\r\nfunction storeEntry(entryname, args, invalidate=[], force=false){\r\n    \r\n    if(!promiseDict[entryname] || promiseDict[entryname] === null || force){\r\n        promiseDict[entryname] = new Promise((resolve, reject)=>{\r\n            try{\r\n                    ipcRenderer.once(`${entryname}-response`, (event, data)=>{\r\n                        for(let ii = 0; ii < invalidate.length; ii++)\r\n                            promiseDict[invalidate[ii]] = null;\r\n                        resolve(data);\r\n                    })\r\n                    ipcRenderer.send(`${entryname}`, args);\r\n            }\r\n            catch(e){\r\n                reject(e);\r\n            }\r\n        }); \r\n    };\r\n    return promiseDict[entryname];\r\n}\r\n\r\n\r\n\r\nfunction cacheEntry(entryname, propstate){\r\n    return ipcRenderer.sendSync(entryname, propstate)\r\n}\r\n\r\nfunction sendEvnt(namedEvent, eventData){    \r\n    return new Promise((resolve, reject)=>{\r\n        try\r\n        {\r\n            ipcRenderer.once(`${namedEvent}-response`, (event, rtndata)=>{\r\n                resolve(rtndata)    \r\n            })\r\n            ipcRenderer.send(namedEvent, eventData);\r\n            //let filedata = ipcRenderer.sendSync(namedEvent, eventData);\r\n            //resolve(filedata);\r\n        }\r\n        catch(ex){\r\n            reject(ex);\r\n        }\r\n    });\r\n}\r\n\r\nfunction adjustImg(origpath, options, quality){\r\n    return sendEvnt('adjust-native-image', {origpath, options, quality});\r\n}\r\n\r\nfunction makeImg(url, type){\r\n    return sendEvnt('get-native-image', {url, type});\r\n}\r\n\r\nfunction OgMarkers(eventlink){\r\n    return sendEvnt('get-events-og-tags', {url:eventlink})\r\n}\r\nfunction UploadFile(filepath, newname, meta){\r\n    return sendEvnt('upload-file-as-blob', {filepath,newname,meta});\r\n}\r\nfunction OCRText(imageUrl){\r\n    return sendEvnt('ocr-image-entry', {imageUrl})\r\n}\r\nfunction ListUploadFiles(){\r\n    return sendEvnt('list-upload-files', {})\r\n}\r\n\r\nexport const electronStore = {\r\n    init : args=>storeEntry('init', args),\r\n    homeEntries : ()=>storeEntry('home-entries', {}),\r\n    saveHomeEntry : (newobj, isEmpty)=>storeEntry('save-home-entry', {newobj, isEmpty}, ['home-entries'], true),\r\n\r\n    homePageEntries : ()=>storeEntry('home-page-entries', {}),\r\n    saveHomePageEntry : (newobj, isEmpty)=>storeEntry('save-home-page-entry', {newobj, isEmpty}, ['home-page-entries'], true),\r\n\r\n    appFiles : ()=>storeEntry('all-files', {}),\r\n    saveAppFile : (newobj, isEmpty)=>storeEntry('save-all-file', {newobj, isEmpty}, ['all-files'], true),\r\n    \r\n    exportHomeEntry : propstate => cacheEntry('all-files-key-cache', propstate),\r\n\r\n    accommodations:()=>storeEntry('house-entries', {}),\r\n    saveAccommodation : (newobj, isEmpty)=>storeEntry('save-house-entry', {newobj, isEmpty}, ['house-entries'], true),\r\n\r\n    comments:()=>storeEntry('comment-list', {}),\r\n    saveComment : (newobj, isEmpty)=>storeEntry('save-comment-list', {newobj, isEmpty}, ['comment-list'], true),\r\n\r\n    posts:()=> storeEntry('post-list', {}),\r\n    savePosts : (newobj, isEmpty)=>storeEntry('save-post-list', {newobj, isEmpty}, ['post-list'], true),\r\n\r\n    events:(filename)=>storeEntry(!filename ? 'event-entries' : filename + '', {}),\r\n    saveEvent:(filename, savefilename, newobj, isEmpty)=>storeEntry(!savefilename ? 'save-event-entry' : savefilename + '', {newobj, isEmpty}, \r\n                                                                    [!filename ? 'event-entries' : filename + ''], true),\r\n\r\n    gallaries: ()=>storeEntry('gallery-entries', {}),\r\n    saveGallary:(newobj, isEmpty)=>storeEntry('save-gallery-entry', {newobj, isEmpty}, ['gallery-entries'], true),\r\n\r\n    articles: ()=>storeEntry('article-entries', {}),\r\n    saveArticles:(newobj, isEmpty)=>storeEntry('save-article-entry', {newobj, isEmpty}, ['article-entries'], true),\r\n\r\n    socialgroups: ()=>storeEntry('social-group-entries', {}),\r\n    saveSocialgroups:(newobj, isEmpty)=>storeEntry('save-social-group-entries', {newobj, isEmpty}, ['social-group-entries'], true),\r\n\r\n    listAllMovies : ()=>storeEntry('list-running-movies', {})\r\n}\r\n\r\nexport const nativeImg = {\r\n    makeImg : (url, type)=>makeImg(url, type),\r\n    adjustImg : (path, options, quality)=>adjustImg(path, options, quality),\r\n    OgMarkers : eventlink=>OgMarkers(eventlink),\r\n    OCRText   : imageUrl=>OCRText(imageUrl),  \r\n    UploadFile : (filepath, newname, meta)=>UploadFile(filepath, newname, meta),\r\n    ListUploadFiles: ()=>ListUploadFiles()\r\n    \r\n}\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {electronStore} from './Electron';\r\nfunction WireFrame(props)\r\n{\r\n    const {entries, filterPredicate, setFormobj, gridcolumns, customclass, highlighted, homepageTitle, \r\n            homepageMap, deleteEntries, savePostId, keymap} = props;\r\n    \r\n    const [mode,setMode] = useState(1);\r\n\r\n    const [homeselected, setHomeSelected] = useState([]);\r\n    const[homePage, setHomePage] = useState({})\r\n    \r\n    useEffect(()=>{\r\n        if(!!homepageTitle)\r\n            refreshExportEntries(()=>{});\r\n    }, [])\r\n\r\n    const refreshExportEntries = callback=>{\r\n        electronStore.homePageEntries().then(homepage=>{\r\n            setHomePage(homepage);\r\n            const newObj = {};\r\n            if(!!homepage[homepageTitle])\r\n            {\r\n                let keys = homepage[homepageTitle].filter(x=>!!x.entry).map(x=>x.key);\r\n                for(let k = 0; k < keys.length;k++)\r\n                    newObj[keys[k]] = true;\r\n            }\r\n            \r\n            setHomeSelected(newObj);\r\n            callback();\r\n        });\r\n    }\r\n\r\n    const exportToHome = (selSet, callback)=>{\r\n        /*const delObj = {}\r\n        delObj.isDelete = true;\r\n        delObj[homepageTitle] = homepageTitle;\r\n        electronStore.saveHomePageEntry(delObj, false).then(()=>{\r\n            \r\n        })*/\r\n        electronStore.saveHomePageEntry({...homePage, [homepageTitle]:selSet}, Object.keys(homePage).length === 0).then(()=>refreshExportEntries(callback));\r\n    }\r\n    \r\n\r\n    const loadForm = id=> {\r\n        setFormobj({...entries[id], id});\r\n        //setMode(2);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n            <div className=\"box-content\">\r\n                <div style={{width:\"99%\"}}>\r\n                    <fieldset style={{border: \"1px solid #ccc\",padding: \"10px\", marginBottom:\"0px\"}}>\r\n                        <legend className=\"legend mb-2\" style={{marginBottom:\"-10px\"}}></legend>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                {props.headerControl}\r\n                                <div>\r\n                                    <div className=\"btn-group\">\r\n                                        \r\n                                        <div className=\"input-group-prepend\">\r\n                                            <button className={\"btn \" + (mode === 2 ? \"btn-secondary\" : \"btn-primary\")} onClick={()=>setMode(1)}> \r\n                                                <i className=\"fa-icon fa-icon-home\"></i> &nbsp;grid\r\n                                            </button>\r\n                                        </div>\r\n                                        \r\n                                        {!!props.editcontrol && <><div className=\"arrow-line\"></div>\r\n                                        <div className=\"arrow-right\"></div>\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <button className={\"btn \" + (mode === 1 ? \"btn-secondary\" : \"btn-primary\")} onClick={()=>setMode(2)}> \r\n                                                <i className=\"fa-icon fa-icon-edit\"></i>&nbsp; add/edit\r\n                                            </button>\r\n                                        </div></>}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {mode===1 && <FilesGrid docs={entries} loadForm={loadForm} filterPredicate={filterPredicate} gridcolumns={gridcolumns} savePostId={savePostId}\r\n                                    customclass={customclass} highlighted={highlighted} deleteEntries={deleteEntries} homepageMap={homepageMap}\r\n                                    homeselected={homeselected} setHomeSelected={setHomeSelected} homepageTitle={homepageTitle} exportToHome={exportToHome} \r\n                                    keymap={keymap}></FilesGrid>}\r\n                                {mode===2 && props.editcontrol}\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction FilesGrid(props){\r\n    const {filterPredicate, docs, loadForm, gridcolumns, customclass, highlighted, keymap,\r\n        homeselected, setHomeSelected, homepageTitle, homepageMap, exportToHome, deleteEntries} = props;\r\n    \r\n    const [delselected, setDelselected] = useState({});\r\n    const [filter, setFilter] = useState('');\r\n    const [grpfilter, setGrpFilter] = useState('');\r\n    const [page_number, setpage_number] = useState(1);\r\n    const [spinner, setSpinner] = useState(false);\r\n    const[postid, setPostId] = useState('');\r\n\r\n    const [exportdelete, setExportDelete] = useState(!(!!homepageTitle || !!deleteEntries) ? {exp:false, del:false} : \r\n                                                     (!!homepageTitle ? {exp:true, del:false} : {exp:false, del:true})); \r\n\r\n    let page_size= 15;\r\n    const filterFn = key =>{\r\n        if(grpfilter.length ===0)\r\n            return filterPredicate(key, filter);\r\n        else{\r\n            if(grpfilter === 'home')\r\n                return homeselected[key] && !!docs[key]\r\n        }\r\n        return true;\r\n    }\r\n    const sortedSet = Object.keys(docs).filter(x=>filterFn(x)).sort((x,y)=>x > y);\r\n    const [buttons, setButtons] = useState(Math.ceil(sortedSet.length/page_size))\r\n\r\n    const paginate = (array) => array.slice((page_number -1) * page_size, page_number * page_size)\r\n    \r\n    const saveToHome = ()=>{\r\n        const selSet = Object.keys(homeselected).filter(x=>homeselected[x] && !!docs[x]).map(key=>({key, entry:!!homepageMap ? homepageMap(docs[key]) : docs[key]}));\r\n        setSpinner(true);\r\n        exportToHome(selSet, ()=>setSpinner(false));\r\n    }\r\n    const removeEntries = ()=>{\r\n        const selSet = Object.keys(delselected).filter(x=>delselected[x])\r\n        if(selSet.length > 0)\r\n        {\r\n            setSpinner(true);\r\n            const delObj = {}\r\n            for(let i = 0; i < selSet.length; i++)\r\n            delObj[selSet[i]] = selSet[i];\r\n            delObj.isDelete = true;\r\n            deleteEntries.fn(delObj, false).then(()=>{\r\n                setSpinner(false);\r\n                deleteEntries.rf();\r\n            });\r\n        }\r\n            \r\n    }\r\n    useEffect(()=>{\r\n        //console.log(sortedSet.length);\r\n        setButtons(Math.ceil(sortedSet.length/page_size))\r\n    }, [sortedSet, page_size])\r\n\r\n    const dt = (key)=>{\r\n        if(keymap)\r\n            return keymap(key);\r\n\r\n        if(isNaN(key))\r\n            return key;\r\n        let d = new Date(key*1);\r\n        return d.toLocaleDateString() + \" \" + d.toLocaleTimeString();\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <table className={'table table-sm table-striped ' + customclass}>\r\n                <thead>\r\n                    <tr>\r\n                        <th colSpan={Object.keys(gridcolumns).length + 1} style={{textAlign:\"left\"}}>\r\n                            <div className=\"btn-group float-left\">\r\n                                <div className=\"input-group mr-3 mb-0\">\r\n                                    <div className=\"input-group-prepend\"><span className=\"input-group-text\">Filter</span></div>\r\n                                    <input type=\"text\" className=\"form-control\" value={filter} onChange={e=>{setFilter(e.target.value); setpage_number(1);}}   />\r\n                                </div>\r\n                                <div className=\"input-group mr-3 mb-0\">\r\n                                    <select className=\"custom-select mr-sm-2\" onChange={e=>setGrpFilter(e.target.value)}>\r\n                                        <option selected=\"\">Group Filter</option>\r\n                                        <option value=\"home\">In Home</option>\r\n                                    </select>\r\n                                </div>\r\n                                <nav>\r\n                                    <ul className=\"pagination mb-0 mr-3\">\r\n                                        {[...Array(buttons)].map( (_, i)=>\r\n                                            <li className={page_number === i + 1 ? \"page-item active\" : \"page-item\"} key={i+1}>\r\n                                                <span className=\"page-link\" onClick={e=>setpage_number(i + 1)}>{i + 1}</span>\r\n                                            </li>\r\n                                        )}\r\n                                    </ul>\r\n                                </nav>\r\n                                {props.savePostId && <div className=\"input-group-prepend\"><span className=\"input-group-text\">{docs['post-id'] || ''}</span></div>}\r\n                            </div>\r\n                            <div className=\"float-right\">\r\n                                {!!homepageTitle && <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"rdoinline\" id=\"rdoinline1\" checked={exportdelete.exp} \r\n                                     onChange={e=>setExportDelete({...exportdelete, exp:e.target.checked, del:!e.target.checked}) }\r\n                                    />\r\n                                    <label className=\"form-check-label\" htmlFor=\"rdoinline1\">Add to Home Page</label>\r\n                                </div>}\r\n                                {!!deleteEntries && <div className=\"form-check form-check-inline\">\r\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"rdoinline\" id=\"rdoinline2\"  checked={exportdelete.del} \r\n                                     onChange={e=>setExportDelete({...exportdelete, del:e.target.checked, exp:!e.target.checked}) }\r\n                                    />\r\n                                    <label className=\"form-check-label\" htmlFor=\"rdoinline2\">Remove Entries</label>\r\n                                </div>}\r\n                                {(exportdelete.exp || exportdelete.del) && <div className=\"form-check form-check-inline\">\r\n                                    <button className=\"btn btn-secondary\" onClick={()=>{\r\n                                        if(exportdelete.exp)\r\n                                            saveToHome();\r\n                                        else\r\n                                            removeEntries();\r\n                                    }}>\r\n                                        {spinner && <span className=\"spinner-border spinner-border-sm\"></span>} Update\r\n                                    </button>\r\n                                </div>}\r\n                            </div>\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Created</th>{Object.keys(gridcolumns).map(col=> <th style={{textTransform:\"capitalize\"}} key={col}>{gridcolumns[col]('th')}</th>)}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.keys(props.docs).length === 0 && <tr><td colSpan=\"6\">No records uploaded yet.</td></tr>}\r\n                    {paginate(sortedSet).map(key=>\r\n                        <tr key={key} onDoubleClick={()=>loadForm(key)} className={!!highlighted[key] ? highlighted[key] : 'wire-tr'}\r\n                            style={{color:!!homeselected[key]?\"black\":\"#6c757d\"}}>\r\n                            <td style={{width:\"220px\"}}>\r\n                                {exportdelete.exp && <input type=\"checkbox\" id={key} name={key} checked={!!homeselected[key]} className=\"mr-1\"\r\n                                    onChange={e=>setHomeSelected({...homeselected, [key]:e.target.checked})} /> \r\n                                }\r\n                                {exportdelete.del && <input type=\"checkbox\" id={key} name={key} checked={!!delselected[key]} className=\"mr-1\"\r\n                                    onChange={e=>setDelselected({...delselected, [key]:!!homeselected[key] ? false : e.target.checked})} /> \r\n                                }\r\n                                <label htmlFor={key}>{dt(key)}</label>\r\n                            </td>\r\n                            {Object.keys(gridcolumns).map(col=> <td key={key+col}>{gridcolumns[col](docs[key][col])}</td>)}\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            {props.savePostId && <div className=\"input-group mr-3 mb-0 col-4\">\r\n                <div className=\"input-group-prepend\"><span className=\"input-group-text\">Post Id</span></div>\r\n                <input type=\"text\" className=\"form-control\" value={postid} onChange={e=>setPostId(e.target.value)}   />\r\n                <button className=\"btn btn-sm btn-info\" onClick={e=>props.savePostId(postid)}>Update post-id</button>\r\n            </div>}\r\n        </div>\r\n        \r\n    )\r\n }\r\n export default WireFrame;\r\n\r\n\r\n","import React, {useState, useEffect}  from 'react';\r\nimport {nativeImg} from './Electron';\r\nimport WireFrame from './WireFrame';\r\nfunction FileEntries(props)\r\n{\r\n    \r\n    const [highlighted, setHighlighted] = useState({});\r\n    const [files, setFiles] = useState({});\r\n\r\n    const filterPredicate = (key, filter)=>{\r\n        if(filter.length === 0) return true;\r\n        let entry = files[key];\r\n        return (entry.name.indexOf(filter) > -1 || entry.token.indexOf(filter) > -1)\r\n    }\r\n    const setEvent = (selection)=>{}\r\n    const refreshList= callback=>{\r\n        nativeImg.ListUploadFiles().then(allfiles=>setFiles(allfiles))\r\n        callback();\r\n    }\r\n    useEffect(()=>refreshList(()=>{}), []);\r\n\r\n    const gn = (thName, val)=>{ \r\n        if(val !== 'th' && thName==='File Name')\r\n            return <a href={val} target=\"_blank\">{val.substring(val.lastIndexOf('/') + 1)}</a>\r\n        return val==='th'? thName: val\r\n    };\r\n    return (\r\n        <WireFrame entries={files} filterPredicate={filterPredicate} setFormobj={setEvent} \r\n        highlighted={highlighted} customclass=\"files-grid\"\r\n        gridcolumns={{link:val=>gn('File Name', val), size:val=>gn('File Size', val), createTime:val=>gn('File Created', val), token:val=>gn('Token', val)}}\r\n        \r\n        />          \r\n    );\r\n}\r\n\r\n\r\n\r\nexport default FileEntries;","import React, {useState, useEffect} from 'react';\r\nimport {electronStore} from './Electron';\r\n\r\nfunction HomeEntries(props){\r\n    const [homepageentries, setHomepageentries] = useState({});\r\n    \r\n    const gn = (thName, val)=>{ \r\n        if(val !== 'th' && thName==='Show Times')\r\n            return <div>{val.slice(0,2).join('')}</div>\r\n        if(val !== 'th' && thName==='Thumb')\r\n            return <a href={val} target=\"_blank\">poster</a>\r\n        return val==='th'? thName: val\r\n    };\r\n    const tabldef = {\r\n        'home-page-coupouns':{customclass:\"event-grid\", gridcolumns:{heading:val=>gn('Vendor Name', val), liner:val=>gn('Coupon Desc', val)}},\r\n        'home-page-events': {customclass:\"event-grid\", gridcolumns:{heading:val=>gn('Heading', val), liner:val=>gn('Event Desc', val)}},\r\n        'home-page-movies': {customclass:\"files-grid\", gridcolumns:{heading:val=>gn('Movie Name', val), thumb:val=>gn('Thumb', val), theater:val=>gn('Theater', val), showtimes1:val=>gn('Show Times', val)}},\r\n        'home-page-articles': {customclass:'', gridcolumns:{heading:val=>gn('Article', val)}},\r\n        'home-page-social' : {customclass:'', gridcolumns:{heading:val=>gn('Group Name', val), liner:val=>gn('Group Desc', val)}} \r\n    }\r\n    const dt = (key)=>{\r\n        let d = new Date(key*1);\r\n        return d.toLocaleDateString() + \" \" + d.toLocaleTimeString();\r\n    }\r\n    useEffect(()=>{\r\n        electronStore.homePageEntries().then(entries=>{\r\n            setHomepageentries(entries);\r\n        });\r\n    }, [])\r\n    return (\r\n        <>\r\n        {true && <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n            <div className=\"box-content\">\r\n                <div style={{width:\"99%\"}}>\r\n                    <fieldset style={{border: \"1px solid #ccc\",padding: \"10px\", marginBottom:\"0px\"}}>\r\n                        \r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                {Object.keys(homepageentries).filter(prop=>!!homepageentries[prop].length && homepageentries[prop].length > 0).map(pagekey=>{\r\n                                    let gridcolumns = tabldef[pagekey].gridcolumns;\r\n                                    let customclass = tabldef[pagekey].customclass;\r\n                                    return(\r\n                                        <div className=\"mt-4\" key={pagekey}>\r\n                                            <h4 style={{textTransform:\"capitalize\"}}>{pagekey}</h4>\r\n                                            <table className={'table table-sm table-striped ' + customclass}>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>Created</th>{Object.keys(gridcolumns).map(col=> <th style={{textTransform:\"capitalize\"}} key={col}>{gridcolumns[col]('th')}</th>)}\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {homepageentries[pagekey].map(entryRow=>{\r\n                                                        \r\n                                                        const {key, entry} = entryRow;\r\n                                                        return (\r\n                                                            <tr key={key} className=\"wire-tr\">\r\n                                                                <td style={{width:\"220px\"}}>{dt(key)}</td>\r\n                                                                {Object.keys(gridcolumns).map(col=> <td key={key+col}>{gridcolumns[col](entry[col])}</td>)}\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n        </>\r\n    );\r\n}\r\nexport default HomeEntries;","import React, {useState, useEffect} from 'react';\r\nimport {electronStore} from './Electron';\r\nimport WireFrame from './WireFrame';\r\n\r\nconst defaultaccom = {desc:'', trigger:false, user:'', id:'100', postedon:''};\r\n\r\nfunction Accommodation(props){\r\n    const [highlighted, setHighlighted] = useState({});\r\n    const [selections, setSelections] = useState({\"100\":defaultaccom});\r\n    const [accommodations, setAccommodations] = useState({});\r\n    \r\n    const clearSelectionHighlights = ()=>{\r\n        setHighlighted({});\r\n        setSelections({\"100\":defaultaccom});\r\n    }\r\n    const setaccom = (selection)=>{\r\n            setSelections({...selections, [selection.id]:selection})\r\n            setHighlighted({...highlighted, [selection.id]:'table-info'});\r\n    }\r\n    const filterPredicate = (key, filter)=>{\r\n        if(filter.length === 0) return true;\r\n        let entry = accommodations[key];\r\n        return (entry.user.indexOf(filter) > -1 ||   entry.desc.indexOf(filter) > -1)\r\n    }\r\n\r\n    const refreshList= callback=>{\r\n        electronStore.accommodations().then(entries=>{\r\n            setAccommodations(entries);\r\n        });\r\n        callback();\r\n    }\r\n    useEffect(()=>refreshList(()=>{}), []);\r\n\r\n    const saveAccom= (key, accom, callback)=>{\r\n        const {desc, user, postedon} = accom;\r\n        if(user.length > 0)\r\n        {\r\n            const newobj = {[key]:{desc, user, postedon}};\r\n            electronStore.saveAccommodation({...accommodations, ...newobj}, Object.keys(accommodations).length === 0).then(_=>refreshList(()=>{\r\n                setSelections({...selections, [key]:{...accom, id:key}});\r\n                setHighlighted({...highlighted, [key]:'table-info'});\r\n                callback();\r\n            }));\r\n        }\r\n    }\r\n    const gn = (thName, val)=> val==='th'? thName: val;\r\n    return (\r\n        <WireFrame entries={accommodations} filterPredicate={filterPredicate} setFormobj={setaccom} highlighted={highlighted} \r\n            deleteEntries={{fn:electronStore.saveAccommodation, rf:()=>refreshList(clearSelectionHighlights)}}\r\n            gridcolumns={{user:val=>gn(\"Owner Name\", val),desc:val=>gn(\"Accommodation Desc\", val)}}\r\n            editcontrol={\r\n                <div className=\"row mt-4\">\r\n                    <button className=\"btn btn-danger\" style={{position:\"absolute\", right:\"10px\", top:\"0px\"}} \r\n                    onClick={clearSelectionHighlights}>Clear All</button>\r\n                    \r\n                    {Object.keys(selections).map(key=> \r\n                        <Unit key={key} key1={key} selected={selections[key]} saveAccom={saveAccom} />\r\n                    )}\r\n                </div>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nfunction Unit(props){\r\n    const [form, setForm] = useState({...props.selected, trigger:false});\r\n    const {saveAccom} = props;\r\n    const saveUnit = ()=>{\r\n        setSpinner(true);\r\n        saveAccom(form.id === \"100\" ? +new Date() : form.id, form, ()=>{\r\n            setSpinner(false);\r\n            if(form.id===\"100\")\r\n                setForm(defaultaccom);\r\n        });\r\n    }\r\n    const[spinner, setSpinner] = useState(false);\r\n    const dt = ()=>{\r\n        let d = new Date(form.id*1);\r\n        return d.toLocaleDateString() + \" \" + d.toLocaleTimeString();\r\n    }\r\n    return (\r\n        <div className=\"mb-2 col-3\">\r\n            <div className=\"card \">\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\" style={{\"padding\":\"5px\"}}>\r\n                        <textarea rows=\"6\" style={{\"width\":\"100%\"}} value={form.desc} onChange={e=>setForm({...form, desc:e.target.value})} ></textarea>\r\n                        <div className=\"input-group mb-1\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"user name\" value={form.user} onChange={e=>setForm({...form, user:e.target.value})} />\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"date posted\" value={form.postedon} onChange={e=>setForm({...form, postedon:e.target.value})} />\r\n\r\n                            <div className=\"input-group-append\">\r\n                                <button className={`btn ${form.id !== \"100\" ? \"btn-success\" : \"btn-info\"} btn-sm`} onClick={saveUnit}>\r\n                                {spinner && <span className=\"spinner-border spinner-border-sm\"></span>}Save</button>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"text-secondary\">{form.id !== \"100\" ? dt() :\"add new entry\"}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n export default Accommodation;","import React from 'react';\r\nfunction SpinnerBar(){\r\n    return (\r\n        <>\r\n            <div style={{width:\"16px\", height:\"16px\"}} className=\"spinner-grow text-primary\" role=\"status\"></div>\r\n            <div style={{width:\"16px\", height:\"16px\"}} className=\"spinner-grow text-secondary\" role=\"status\"></div>\r\n            <div style={{width:\"16px\", height:\"16px\"}} className=\"spinner-grow text-success\" role=\"status\"></div>\r\n            <div style={{width:\"16px\", height:\"16px\"}} className=\"spinner-grow text-danger\" role=\"status\"></div>\r\n            <div style={{width:\"16px\", height:\"16px\"}} className=\"spinner-grow text-warning\" role=\"status\"></div>\r\n            <div style={{width:\"16px\", height:\"16px\"}} className=\"spinner-grow text-info\" role=\"status\"></div>\r\n            <div style={{width:\"16px\", height:\"16px\"}} className=\"spinner-grow text-light\" role=\"status\"></div>\r\n            <div style={{width:\"16px\", height:\"16px\"}} className=\"spinner-grow text-dark\" role=\"status\"></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SpinnerBar;","import React, {useState} from 'react';\r\nimport {nativeImg} from './Electron';\r\nimport SpinnerBar from './SpinnerBar'\r\n\r\nfunction ImageResizer(props)\r\n{\r\n    const [minmode, setMinMode] = useState(true);\r\n    const def = {url:'', type:'', size:0, filename:'', trigger:false, err:null, res:'', basename:''}\r\n    const deff = {normalize:false, ArticleImg:false, slide:false, thumb:false, quality:100, galleryThumb:false};\r\n    const adjdef = {size:0, filename:'', res:'',  basename:''};\r\n    const [optmizer, setOptimizer] = useState(deff);\r\n    \r\n    const [cloudLiners, setCloudLines] = useState([]);\r\n    const [handle, setHandle] = useState('')\r\n\r\n    const [imginter,setImginter] = useState(def);\r\n    const [adjimg, setAdjImg] = useState(adjdef);\r\n\r\n    const [spinner, setSpinner] = useState(false);\r\n    const reset = ()=>{\r\n        setImginter(def);\r\n        setSpinner(false);\r\n    }\r\n    const validInd = ()=> {\r\n        if(imginter.filename.length > 0) return 'is-valid';\r\n        if(imginter.trigger && imginter.url.length === 0) return 'is-invalid';\r\n        return '';\r\n    }\r\n    const uploadFile = (filepath)=>{\r\n        setSpinner(true);\r\n        nativeImg.UploadFile(filepath, handle, {token:!!props.token ? props.token : 'default'}).then(url=>{\r\n            cloudLiners.push({url, filepath})\r\n            setCloudLines(cloudLiners);\r\n        }).finally(()=>setSpinner(false));\r\n    }\r\n\r\n    const adjustImg = ()=>{\r\n        if(imginter.filename.length === 0)\r\n            return;\r\n\r\n        const options = {}\r\n        let quality = optmizer.quality;\r\n        if(optmizer.normalize){\r\n            options['width'] = 600;\r\n            options['quality']='better';\r\n            quality = 85;\r\n        }\r\n        if(optmizer.ArticleImg){\r\n            delete options['width'];\r\n            options['height'] = 600;\r\n        }\r\n        if(optmizer.slide){\r\n            options['width'] = 525;//800\r\n            options['height'] = 350;//600\r\n        }\r\n        if(optmizer.thumb){\r\n            options['width'] = 160;\r\n            options['height'] = 160;\r\n        }\r\n        if(optmizer.galleryThumb){\r\n            delete options['width'];\r\n            delete options['height'];\r\n            options['width'] = 255;\r\n            options['height'] = 180;\r\n        }\r\n        nativeImg.adjustImg(imginter.filename, options, quality).then(res=>{\r\n            if(res.err)\r\n                setAdjImg({...adjimg, filename:res.err, size:0, res:'na', basename:''});\r\n            else\r\n                setAdjImg({...adjimg, filename:res.filename, size:res.size, res:res.res, basename:res.basename});\r\n        }).catch(err=>{\r\n            setAdjImg({...adjimg, filename:err});\r\n         }).finally(()=>setSpinner(false));\r\n    }\r\n    \r\n    const captureImg = (type, skipvalidation=false)=>{\r\n        setImginter({...imginter, trigger:true});\r\n        if(imginter.url.length > 0 || skipvalidation){\r\n            setSpinner(true);\r\n            nativeImg.makeImg(imginter.url, type).then(res=>{\r\n                setImginter({...imginter, filename:res.filename, size:res.size, res:res.res, basename:res.basename})\r\n            })\r\n            .catch(err=>{\r\n                setImginter({...imginter, err:err})\r\n            }).finally(()=>setSpinner(false));\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"shadow p-3 mb-3 bg-white rounded\">\r\n            <legend className=\"legend mb-2\" style={{marginBottom:\"-10px\"}}>\r\n                <input type=\"checkbox\" checked={minmode} id=\"chkminmode\" name=\"chkminmode\" onChange={e=>setMinMode(e.target.checked)}></input> \r\n                <label htmlFor=\"chkminmode\" className=\"ml-1\">image interface</label>\r\n            </legend>\r\n            {minmode && <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"input-group mb-2\">\r\n                        <div className=\"input-group-prepend\">\r\n                            {imginter.filename.length === 0 && <span className=\"input-group-text\">Image link</span>}\r\n                            {imginter.filename.length > 0 && <span className=\"input-group-text\"><a target=\"_blank\" href={imginter.filename}>Image link</a></span>}\r\n                        </div>\r\n                        {imginter.filename.length === 0 && <input type=\"text\" className={'form-control ' + validInd()} placeholder=\"image link\" value={imginter.url} \r\n                            onChange={e=>setImginter({...imginter, url:e.target.value})} />}\r\n                        \r\n                        {imginter.filename.length > 0 && <input type=\"text\" className=\"form-control is-valid\" defaultValue={imginter.filename} readOnly={true} />}\r\n                        <div className=\"text-muted valid-feedback\">file size: {imginter.size}, res: {imginter.res}</div>\r\n                        <div className=\"text-muted invalid-feedback\">input value missing</div>\r\n                    </div>\r\n                    <div>\r\n                        {imginter.filename.length === 0 && false && \r\n                        <div className=\"btn-group mr-2\">\r\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={()=>captureImg('path')}>local</button>\r\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={()=>captureImg('url')}>link</button>\r\n                            \r\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={()=>captureImg('base64')}>base64</button>\r\n                        </div>}\r\n                        {imginter.filename.length === 0 && <div className=\"btn-group mr-2\">\r\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={()=>captureImg('clip', true)}>clip</button>\r\n                        </div>}\r\n                        <div className=\"btn-group mr-2\">\r\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={()=>reset()}>clear</button>\r\n                            {spinner && <div><SpinnerBar /></div>}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"col-md-6\">\r\n                    <table className=\"table table-sm table-bordered\">\r\n                        {imginter.filename.length > 0 && \r\n                        <caption>\r\n                            <span>\r\n                                <div className=\"btn-group mt-2\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary btn-sm mr-2\" onClick={()=>adjustImg()}>Adjust</button>\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">upload handle</span></div>\r\n                                        <input type=\"text\" className=\"form-control\" value={handle} onChange={e=>setHandle(e.target.value)}/>\r\n                                    </div>\r\n\r\n                                    <button type=\"button\" className=\"btn btn-info btn-sm ml-1\" onClick={()=>uploadFile(imginter.filename)}>raw</button>\r\n                                    <button type=\"button\" className=\"btn btn-info btn-sm ml-1\" onClick={()=>uploadFile(adjimg.filename)}>resized</button>\r\n                                    <button type=\"button\" className=\"btn btn-info btn-sm ml-1\" onClick={()=>uploadFile(handle)}>external</button>\r\n                                </div>\r\n                            </span>\r\n                            <p>\r\n                                {adjimg.filename.length > 0 && <span><a href={adjimg.filename} target=\"_blank\">{adjimg.basename}</a>&nbsp;</span>} \r\n                                {adjimg.filename.length > 0 && <span className=\"text-muted\">file size: {adjimg.size}, res: {adjimg.res}</span>}\r\n                            </p>\r\n                        </caption>}\r\n                        <thead><tr className=\"table-success\"><th colSpan=\"3\">image options</th></tr></thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"form-check\" style={{marginTop:\"10px\"}}>\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"normalize\" checked={optmizer.normalize} \r\n                                        onChange={e=>setOptimizer({...optmizer, normalize:e.target.checked})}/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"normalize\">Normalize</label>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check\" style={{marginTop:\"10px\"}}>\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"slideimage\" checked={optmizer.ArticleImg} \r\n                                        onChange={e=>setOptimizer({...optmizer, ArticleImg:e.target.checked})}/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"slideimage\">Article Image</label>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check\" style={{marginTop:\"10px\"}}>\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"homeslide\" checked={optmizer.slide} \r\n                                        onChange={e=>setOptimizer({...optmizer, slide:e.target.checked})}/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"homeslide\">Homepage slide</label>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"form-check\" style={{marginTop:\"10px\"}}>\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"thumb\" checked={optmizer.thumb} \r\n                                        onChange={e=>setOptimizer({...optmizer, thumb:e.target.checked})}/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"thumb\">Thumb</label>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"form-check\" style={{marginTop:\"10px\"}}>\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"gthumb\" checked={optmizer.galleryThumb} \r\n                                        onChange={e=>setOptimizer({...optmizer, galleryThumb:e.target.checked})}/>\r\n                                        <label className=\"form-check-label\" htmlFor=\"gthumb\">Gallery Thumb</label>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <select className=\"form-control\" value={optmizer.quality} style={{width:\"200px\"}}\r\n                                        onChange={e=>setOptimizer({...optmizer, quality:e.target.value})} >\r\n                                        <option value=\"100\">100% Quality</option>\r\n                                        <option value=\"90\">90% Quality</option>\r\n                                        <option value=\"80\">80% Quality</option>\r\n                                        <option value=\"60\">60% Quality</option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>}\r\n            {cloudLiners.map((line,index)=>\r\n                <div key={index}>\r\n                    <div className=\"btn-group\">\r\n                        <div className=\"text-muted\">{line.url} &nbsp; </div>\r\n                        <div><a href={line.url} target=\"_blank\">link</a></div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {imginter.err != null && <div className=\"alert-danger alert\">{imginter.err}</div>}\r\n        </div>\r\n    );\r\n}\r\nexport default ImageResizer;","import React, {useState} from 'react';\r\nimport {nativeImg} from './Electron';\r\nimport SpinnerBar from './SpinnerBar'\r\nfunction OgMatrix(props){\r\n    const def = {eventlink:'', title:'', oneliner:'', trigger:false, imagelink:'', postlink:''}\r\n    const [minmode, setMinMode] = useState(true);\r\n    const [spinner, setSpinner] = useState(false);\r\n    const [eventinter,setEventinter] = useState(def);\r\n    const reset = ()=>setEventinter(def);\r\n    const getOgTags = ()=>{\r\n        setEventinter({...eventinter, trigger:true});\r\n        if(eventinter.eventlink.length > 0)\r\n        {\r\n            setSpinner(true);\r\n            nativeImg.OgMarkers(eventinter.eventlink).then(ogref=>{\r\n                debugger;\r\n                if(ogref.success)\r\n                    setEventinter({...eventinter, title:ogref.data.ogTitle, oneliner:ogref.data.ogDescription, postlink:ogref.data.ogUrl,\r\n                    imagelink:ogref.data.ogImage.url}) \r\n            })\r\n            .catch(err=>setEventinter({...eventinter, title:err}))\r\n            .finally(()=>setSpinner(false));\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"shadow p-3 mb-3 bg-white rounded\">\r\n            <legend className=\"legend mb-2\" style={{marginBottom:\"-10px\"}}>\r\n                <input type=\"checkbox\" checked={minmode} id=\"chkminmode1\" name=\"chkminmode1\" onChange={e=>setMinMode(e.target.checked)}></input> \r\n                <label htmlFor=\"chkminmode1\" className=\"ml-1\">Og Tags</label>\r\n            </legend>\r\n            {minmode && <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"input-group mb-2\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">Event link</span></div>\r\n                        <input type=\"text\" className={\"form-control\" + (eventinter.trigger && eventinter.eventlink.length === 0 ? \" is-invalid\": \"\")} placeholder=\"event link\" value={eventinter.eventlink}\r\n                         onChange={e=>setEventinter({...eventinter, eventlink:e.target.value})} />\r\n                        <div className=\"text-muted valid-feedback\"></div>\r\n                        <div className=\"text-muted invalid-feedback\">event link missing</div>\r\n                    </div>\r\n                    <div className=\"input-group mb-2\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">Title</span></div>\r\n                        <input type=\"text\" className=\"form-control\" value={eventinter.title} \r\n                        onChange={e=>setEventinter({...eventinter, title:e.target.value})}/>\r\n                    </div>\r\n                    <div className=\"input-group mb-2\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">One liner</span></div>\r\n                        <input type=\"text\" className=\"form-control\" value={eventinter.oneliner} \r\n                        onChange={e=>setEventinter({...eventinter, oneliner:e.target.value})}/>\r\n                    </div>\r\n                    <div className=\"input-group mb-2\">\r\n                        <div className=\"input-group-prepend\">\r\n                            {eventinter.imagelink.length === 0 && <span className=\"input-group-text\">Image link</span>}\r\n                            {eventinter.imagelink.length > 0 && <span className=\"input-group-text\"><a href={eventinter.imagelink} target=\"_blank\">Image link</a></span>}\r\n                        </div>\r\n                        <input type=\"text\" className=\"form-control\" value={eventinter.imagelink} \r\n                        onChange={e=>setEventinter({...eventinter, imagelink:e.target.value})}/>\r\n                    </div>\r\n                    <div className=\"input-group mb-2\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">Post link</span></div>\r\n                        <input type=\"text\" className=\"form-control\" value={eventinter.postlink} \r\n                        onChange={e=>setEventinter({...eventinter, postlink:e.target.value})}/>\r\n                    </div>\r\n                    <div className=\"btn-group\">\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm mr-2\" onClick={()=>getOgTags()}>Og Tags</button>\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={()=>reset()}>clear</button>\r\n                    </div>\r\n                    {spinner && <div><SpinnerBar /></div>}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OgMatrix;","import React, {useState} from 'react';\r\nimport {nativeImg} from './Electron';\r\nimport SpinnerBar from './SpinnerBar'\r\nfunction OCRForm(props){\r\n    const def = {trigger:false, imagelink:'', ocrLines:[]}\r\n    const [minmode, setMinMode] = useState(true);\r\n    const [spinner, setSpinner] = useState(false);\r\n    const [eventinter,setEventinter] = useState(def);\r\n    const reset = ()=>setEventinter(def);\r\n    \r\n    const getOCR = ()=>{\r\n        setEventinter({...eventinter, trigger:true});\r\n        if(eventinter.imagelink.length > 0)\r\n        {\r\n            setSpinner(true);\r\n            nativeImg.OCRText(eventinter.imagelink).then(lines=>setEventinter({...eventinter, ocrLines: lines}))\r\n            .catch(err=>setEventinter({...eventinter, ocrLines: [err]}))\r\n            .finally(()=>setSpinner(false));\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"shadow p-3 mb-3 bg-white rounded\">\r\n            <legend className=\"legend mb-2\" style={{marginBottom:\"-10px\"}}>\r\n                <input type=\"checkbox\" checked={minmode} id=\"chkminmode1\" name=\"chkminmode1\" onChange={e=>setMinMode(e.target.checked)}></input> \r\n                <label htmlFor=\"chkminmode1\" className=\"ml-1\">OCR Text</label>\r\n            </legend>\r\n            {minmode && <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"input-group mb-2\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">Image link</span></div>\r\n                        <input type=\"text\" className={\"form-control\" + (eventinter.trigger && eventinter.imagelink.length === 0 ? \" is-invalid\": \"\")} placeholder=\"image link\"\r\n                         value={eventinter.imagelink}\r\n                         onChange={e=>setEventinter({...eventinter, imagelink:e.target.value.trim()})} />\r\n                        <div className=\"text-muted valid-feedback\"></div>\r\n                        <div className=\"text-muted invalid-feedback\">image link missing</div>\r\n                    </div>\r\n                    <div className=\"btn-group\">\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm mr-2\" onClick={()=>getOCR()}>Extract Text</button>\r\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={()=>reset()}>clear</button>\r\n                    </div>\r\n                    {spinner && <div><SpinnerBar /></div>}\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {eventinter.ocrLines.map((line,index)=><div key={index} className=\"text-muted\">{line}</div>)}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default OCRForm;","import React, {useState, useEffect} from 'react';\r\nimport ImageResizer from './ImageResizer';\r\nimport OgMatrix from './OgMatrix';\r\nimport {electronStore} from './Electron';\r\nimport WireFrame from './WireFrame';\r\nimport OCRForm from './ocr';\r\n\r\nconst defaultEvent = {heading:'', liner:'', thumb:'', readmore:'', tags:'', trigger:false, id:'100', eventid:''};\r\n\r\nfunction Events(props){\r\n    \r\n    const [highlighted, setHighlighted] = useState({});\r\n    const [selections, setSelections] = useState({\"100\":defaultEvent});\r\n    const clearSelectionHighlights = ()=>{\r\n        setHighlighted({});\r\n        setSelections({\"100\":defaultEvent});\r\n    }\r\n    const [events, setEvents] = useState({});\r\n    const filterPredicate = (key, filter)=>{\r\n        if(key==='post-id') return false;\r\n        if(filter.length === 0) return true;\r\n        let entry = events[key];\r\n        return (entry.heading.indexOf(filter) > -1 || entry.liner.indexOf(filter) > -1)\r\n    }\r\n    const setEvent = (selection)=>{\r\n        setSelections({...selections, [selection.id]:selection})\r\n        setHighlighted({...highlighted, [selection.id]:'table-info'});\r\n    }\r\n\r\n    const refreshList= callback=>{\r\n        electronStore.events(props.filename).then(entries=>{\r\n            setEvents(entries);\r\n        });\r\n        callback();\r\n    }\r\n    useEffect(()=>refreshList(()=>{}), []);\r\n    const savePostId = postid=>{\r\n        electronStore.saveEvent(props.filename, props.savefilename, {...events, 'post-id' : postid}, false).then(_=>refreshList(()=>{}));\r\n    }\r\n    const saveEvent= (key, event, callback)=>{\r\n        const {heading, liner, thumb, readmore, tags, eventid} = event;\r\n        if(heading.length > 0 && readmore.length > 0)\r\n        {\r\n            const newobj = {[key]:{heading, liner, thumb, readmore, tags, eventid}};\r\n            electronStore.saveEvent(props.filename, props.savefilename, {...events, ...newobj}, \r\n                Object.keys(events).length === 0).then(_=>refreshList(()=>{\r\n                setSelections({...selections, [key]:{...event, id:key}});\r\n                setHighlighted({...highlighted, [key]:'table-info'});\r\n                callback();\r\n            }));\r\n        }\r\n    }\r\n    const gn = (thName, val)=> val==='th'? thName: val;\r\n    const gridcolumns = !!props.gridcolumns ? props.gridcolumns : {heading:val=>gn('Heading', val), liner:val=>gn('Event Desc', val)};\r\n    return(\r\n        <>\r\n            <WireFrame entries={events} filterPredicate={filterPredicate} setFormobj={setEvent} headerControl={<HeaderControl token={props.token}/>} \r\n            highlighted={highlighted} homepageTitle={!!props.homepageTitle ? props.homepageTitle : 'home-page-events'} gridcolumns={gridcolumns} customclass=\"event-grid\"\r\n            deleteEntries={{fn:(obj, isEmpty)=>electronStore.saveEvent(props.filename, props.savefilename,obj,isEmpty), rf:()=>refreshList(clearSelectionHighlights)}}\r\n            editcontrol={\r\n                <div className=\"row mt-4\">\r\n                    \r\n                    <button className=\"btn btn-danger\" style={{position:\"absolute\", right:\"10px\", top:\"0px\"}} \r\n                        onClick={clearSelectionHighlights}>Clear All</button>\r\n\r\n                    {Object.keys(selections).map(key=> \r\n                        <EventInputForm key={key} key1={key} selected={selections[key]} \r\n                        saveEvent={saveEvent} helperText={props.helperText || {}} />\r\n                    )}\r\n                </div>\r\n            }\r\n            />  \r\n            <div style={{marginLeft:\"10px\"}}>\r\n                •\tLocation is tag that starts with @\r\n                •\tCost is tag that starts with $\r\n                •\tDates start with # \r\n                •\tSpecial text start with * \r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\nfunction HeaderControl(props){\r\n    const[addons, setAddOns] = useState({resizer:false, og:false, ocr:false});\r\n    return(\r\n        <>\r\n            <div className=\"mb-3\">\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" checked={addons.resizer} onChange={e=>setAddOns({...addons, resizer:e.target.checked})} />\r\n                        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">Image Resizer</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" checked={addons.og} onChange={e=>setAddOns({...addons, og:e.target.checked})} />\r\n                        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox2\">Og Matrix</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" checked={addons.ocr} onChange={e=>setAddOns({...addons, ocr:e.target.checked})}  />\r\n                        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox3\">OCR Text</label>\r\n                    </div>\r\n                </div>\r\n                {addons.resizer && <ImageResizer token={!!props.token ? props.token : 'events'} />}\r\n                {addons.og && <OgMatrix />}\r\n                {addons.ocr && <OCRForm />}\r\n        </>\r\n    );\r\n}\r\nfunction EventInputForm(props){\r\n    const [form, setForm] = useState({...props.selected, trigger:false});\r\n    \r\n    const saveEvent = ()=>{\r\n        setForm({...form, trigger:true});\r\n        if(form.heading.length > 0 && form.readmore.length > 0){\r\n            setSpinner(true);\r\n            props.saveEvent(form.id === \"100\" ? +new Date() : form.id, form, ()=>{\r\n                setSpinner(false);\r\n                if(form.id===\"100\")\r\n                    setForm(defaultEvent);\r\n            });\r\n        }\r\n    }\r\n    const[spinner, setSpinner] = useState(false);\r\n    return (\r\n        <div className=\"col-md-4\">\r\n            <div className=\"shadow p-3 mb-3 bg-white rounded\">\r\n                <div className=\"input-group mb-2 mt-2\">\r\n                    <div className=\"input-group-prepend\"><span className=\"input-group-text\">Id</span></div>\r\n                    <input type=\"text\" value={form.eventid ? form.eventid : ''} onChange={e=>setForm({...form, eventid:e.target.value})} />\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-small btn-info\" onClick={e=>setForm({...form, eventid:Number(new Date())})}>Stamp</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-group mb-2 mt-2\">\r\n                    <div className=\"input-group-prepend\"><span className=\"input-group-text\">Heading</span></div>\r\n                    <input type=\"text\" className={\"form-control \" + (form.heading.length === 0 && form.trigger ? \" is-invalid\" : \"\")}  \r\n                    value={form.heading} onChange={e=>setForm({...form, heading:e.target.value})} />\r\n                    {form.trigger && <div className=\"invalid-feedback\">heading name is required</div>}\r\n                    {props.helperText['heading'] && <p><small className=\"form-text text-muted\">{props.helperText['heading']}</small></p>}\r\n                </div>\r\n\r\n                <div className=\"input-group mb-2\">\r\n                    <div className=\"input-group-prepend\"><span className=\"input-group-text\">Liner</span></div>\r\n                    <input type=\"text\" className=\"form-control\" value={form.liner} onChange={e=>setForm({...form, liner:e.target.value})}  />\r\n                    {props.helperText['liner'] && <small className=\"form-text text-muted\">{props.helperText['liner']}</small>}\r\n                </div>\r\n                <div className=\"input-group mb-2\">\r\n                    <div className=\"input-group-prepend\"><span className=\"input-group-text\">Thumb</span></div>\r\n                    <input type=\"text\" className=\"form-control\" value={form.thumb} onChange={e=>setForm({...form, thumb:e.target.value})}  />\r\n                    {props.helperText['thumb'] && <small className=\"form-text text-muted\">{props.helperText['thumb']}</small>}\r\n                </div>\r\n\r\n                <div className=\"input-group mb-2\">\r\n                    <div className=\"input-group-prepend\"><span className=\"input-group-text\">Read More</span></div>\r\n                    <input type=\"text\" className={\"form-control \" + (form.readmore.length === 0 && form.trigger ? \" is-invalid\" : \"\")}  \r\n                    value={form.readmore} onChange={e=>setForm({...form, readmore:e.target.value})}  />\r\n                    {form.trigger && <div className=\"invalid-feedback\">read more link is required</div>}\r\n                    {props.helperText['readmore'] && <small className=\"form-text text-muted\">{props.helperText['readmore']}</small>}\r\n                </div>\r\n                <div className=\"input-group mb-2\">\r\n                    <div className=\"input-group-prepend\"><span className=\"input-group-text\">Tags</span></div>\r\n                    <input type=\"text\" className=\"form-control\" value={!form.tags ? '' : form.tags + ''} onChange={e=>setForm({...form, tags:e.target.value})}  />\r\n                    {props.helperText['tags'] && <small className=\"form-text text-muted\">{props.helperText['tags']}</small>}\r\n                </div>\r\n                \r\n                <div>\r\n                    <button className={`btn ${form.id !== \"100\" ? \"btn-success\" : \"btn-info\"} btn-sm`} onClick={saveEvent}>\r\n                    {spinner && <span className=\"spinner-border spinner-border-sm\"></span>}Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Events;","import React, {useState, useEffect} from 'react';\r\nimport WireFrame from './WireFrame';\r\nimport ImageResizer from './ImageResizer';\r\nimport {electronStore} from './Electron';\r\n\r\nconst defaultform = {images:[], trigger:false, id:'', name:'', desc:''};\r\n\r\nfunction Gallery(props){\r\n    const [highlighted, setHighlighted] = useState({});\r\n    const [galleries, setGalleries] = useState({});\r\n    \r\n    const clearSelectionHighlights = ()=>{\r\n        setHighlighted({});\r\n        setSelectedGallery(defaultform);\r\n    }\r\n\r\n    const [selectedGallery, setSelectedGallery] = useState(defaultform);\r\n    const setGallery = (selection)=>{\r\n        setSelectedGallery(selection);\r\n        setHighlighted({[selection.id]:'table-info'});\r\n    }\r\n    const clearHighlighted = ()=>{\r\n        setHighlighted({});\r\n        setSelectedGallery(defaultform);\r\n    }\r\n    const filterPredicate = (key, filter)=>{\r\n        if(filter.length === 0) return true;\r\n        let entry = galleries[key];\r\n        return (entry.name.indexOf(filter) > -1 ||   entry.desc.indexOf(filter) > -1)\r\n    }\r\n    const saveGallery= (key, gallery, callback)=>{\r\n        const {name, desc, images} = gallery\r\n        const newobj = {[key]:{name, desc, images}};\r\n            electronStore.saveGallary({...galleries, ...newobj}, \r\n                Object.keys(galleries).length === 0).then(_=>refreshList(()=>{\r\n                setHighlighted({[key]:'table-info'});\r\n                setSelectedGallery({...gallery, id:key})\r\n                callback();\r\n            }));\r\n    }\r\n    const refreshList= callback=>{\r\n        electronStore.gallaries().then(gallaries=>{\r\n            setGalleries(gallaries);\r\n        });\r\n        callback();\r\n    }\r\n    useEffect(()=>refreshList(()=>{}), []);\r\n    const gn = (thName, val)=> val==='th'? thName: val;\r\n    return(\r\n        <WireFrame entries={galleries} filterPredicate={filterPredicate} setFormobj={setGallery} \r\n        highlighted={highlighted} headerControl={<HeaderControl />}\r\n        gridcolumns={{name:val=>gn('Gallery Name', val), desc:val=>gn('Gallery Desc', val), images:val=>val==='th' ? 'Image Count' : val.length}}\r\n        deleteEntries={{fn:electronStore.saveGallary, rf:()=>refreshList(clearSelectionHighlights)}}\r\n        customclassName=\"home-grid\"\r\n        editcontrol={<GalleryInputForm selected={selectedGallery} saveGallery={saveGallery} clearHighlighted={clearHighlighted} />}\r\n        />  \r\n    );\r\n}\r\nfunction HeaderControl(props){\r\n    const[addons, setAddOns] = useState({resizer:false, og:false, ocr:false});\r\n    return(\r\n        <>\r\n            <div className=\"mb-3\">\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" checked={addons.resizer} \r\n                        onChange={e=>setAddOns({...addons, resizer:e.target.checked})} />\r\n                        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">Image Resizer</label>\r\n                    </div>\r\n            </div>\r\n            {addons.resizer && <ImageResizer token='gallery-images' />}\r\n        </>\r\n    );\r\n}\r\nfunction GalleryInputForm(props)\r\n{\r\n    const {selected, saveGallery, clearHighlighted} = props;\r\n    const [form, setForm] = useState(selected);\r\n    const [imageform, setImageForm] = useState({thumb:'', link:'', trigger:false});\r\n    const[spinner, setSpinner] = useState(false);\r\n    const[spinnerImage, setSpinnerImage] = useState(false);\r\n    const [delImages,setdelImages] = useState({});\r\n    \r\n    const cleanup = (savetype)=>{\r\n        if(savetype === 'gallery')\r\n        {\r\n            setSpinner(false);\r\n            setForm(defaultform);\r\n            clearHighlighted();\r\n        }\r\n        else\r\n        {\r\n            setSpinnerImage(false);\r\n            setImageForm({thumb:'', link:'', trigger:false});\r\n        }\r\n        \r\n    };\r\n    const SaveEntry= (savetype)=>{\r\n        if(savetype === 'gallery')\r\n        {\r\n            setForm({...form, trigger:true});\r\n            if(form.name.length > 0 && form.desc.length > 0){\r\n                setSpinner(true);\r\n                let keyid = (form.id === '' ? +new Date() : form.id) + '';\r\n                saveGallery(keyid, form, ()=>{\r\n                    setSpinner(false);\r\n                    setForm({...form, id:keyid});\r\n                })\r\n            }\r\n        }\r\n        else\r\n        {\r\n            let delIndexes = Object.keys(delImages).filter(key=>delImages[key]).map(x=>parseInt(x,10)).sort((a,b)=> b-a);\r\n            setImageForm({...imageform, trigger:true});\r\n            if((imageform.link.length > 0 && imageform.thumb.length > 0) || delIndexes.length > 0)\r\n            {\r\n                setSpinnerImage(true);\r\n                let newImages = form.images.map(img=>({link:img.link, thumb:img.thumb}))\r\n                if(delIndexes.length === 0)\r\n                    newImages.push({link:imageform.link, thumb:imageform.thumb});\r\n                else\r\n                    for(let i = 0; i < delIndexes.length; i++)\r\n                        newImages.splice(delIndexes[i], 1)\r\n                \r\n\r\n                const newObj = {...form, images:newImages}\r\n                saveGallery(form.id, newObj, ()=>{\r\n                    setSpinnerImage(false);\r\n                    setImageForm({thumb:'', link:'', trigger:false});\r\n                    setdelImages({});\r\n                    setForm(newObj);\r\n                }) \r\n            }\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-lg-6\">\r\n                    \r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">Gallery Name</span></div>\r\n                        <input type=\"text\" className={\"form-control \" + (form.name.length === 0 && form.trigger ? \" is-invalid\" : \"\")} \r\n                        value={form.name} onChange={e=>setForm({...form, name:e.target.value})} />\r\n                        {form.trigger && <div className=\"invalid-feedback\">gallery name is required</div>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"DescText\">Gallery Desc</label>\r\n                        <textarea className={\"form-control \" + (form.name.length === 0 && form.trigger ? \" is-invalid\" : \"\")} \r\n                        rows=\"3\"value={form.desc} onChange={e=>setForm({...form, desc:e.target.value})}></textarea>\r\n                        {form.trigger && <div className=\"invalid-feedback\">description is required</div>}\r\n                    </div>\r\n                    <div className=\"btn-group-lg\">\r\n                        <button className=\"btn-sm btn-outline-primary\" onClick={()=>SaveEntry('gallery')}>\r\n                                {spinner && <span className=\"spinner-border spinner-border-sm\"></span>} \r\n                                {form.id.length === 0  ? \"Add Gallery Entry\" : \"Update Gallery Entry\"}\r\n                        </button>\r\n                        <button className=\"btn-sm btn-outline-success ml-2\" onClick={()=>cleanup('gallery')}>Clear</button>\r\n                    </div>\r\n                </div>\r\n                {form.id.length > 0 && <div className=\"col-lg-6\">\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">Image Link</span></div>\r\n                        <input type=\"text\" className={\"form-control \" + (imageform.link.length === 0 && imageform.trigger ? \" is-invalid\" : \"\")} \r\n                            value={imageform.link} onChange={e=>setImageForm({...imageform, link:e.target.value})} />\r\n                            {imageform.trigger && <div className=\"invalid-feedback\">image link is required</div>}\r\n                    </div>\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">Thumb Link</span></div>\r\n                        <input type=\"text\" className={\"form-control \" + (imageform.thumb.length === 0 && imageform.trigger ? \" is-invalid\" : \"\")} \r\n                        value={imageform.thumb} onChange={e=>setImageForm({...imageform, thumb:e.target.value})} />\r\n                        {imageform.trigger && <div className=\"invalid-feedback\">image thumb is required</div>}\r\n                    </div>\r\n                    <button className=\"btn-sm btn-outline-primary\" onClick={()=>SaveEntry('image')}>\r\n                            {spinnerImage && <span className=\"spinner-border spinner-border-sm\"></span>} Add Image \r\n                    </button>\r\n                    <button className=\"btn-sm btn-outline-success ml-2\" onClick={()=>cleanup('image')}>Clear</button>\r\n                </div>}\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"btn-group-lg mt-3\">\r\n                        {form.images.map((img, index)=>\r\n                            <img className=\"ml-2 mb-2\" src={img.thumb} alt={img.thumb} key={img.thumb} style={{opacity:!!delImages[index + ''] ? '.5' :'1'}}\r\n                                onDoubleClick={()=>setdelImages({...delImages, [index + ''] : !!delImages[index + ''] ? !delImages[index + ''] : true})} />\r\n                        )}\r\n                    </div>\r\n            </div>\r\n        </>    \r\n    )\r\n\r\n}\r\n\r\nexport default Gallery","import React, {useState, useEffect}  from 'react';\r\nimport Events from './Events';\r\n\r\nfunction AllMovies(props){\r\n    const gn = (thName, val)=> val==='th'? thName: val;\r\n    return (<Events filename='movies-entries' savefilename='save-movies-entries' homepageTitle='home-page-movies'\r\n    helperText={{'heading':'enter movie name', 'thumb':'enter thumb image', 'liner':'enter theater', 'readmore':'enter address here', 'tags':'enter timings seperated by ;'}}\r\n    gridcolumns={{heading:val=>gn('Movie Name', val), liner:val=>gn('Theater Name', val)}}></Events>);\r\n\r\n}\r\n\r\nexport default AllMovies;","import React, {useState, useEffect} from 'react';\r\nimport { Editor} from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, convertFromRaw} from 'draft-js';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport {electronStore} from './Electron';\r\nimport ImageResizer from './ImageResizer';\r\nimport WireFrame from './WireFrame';\r\n\r\nconst defaultArticle = {heading:'', article:'', id:'', liner:'', postid:''}\r\n\r\nfunction Articles(props){\r\n    const [highlighted, setHighlighted] = useState({});\r\n    const [selectedArticle, setSelectedArticle] = useState(defaultArticle);\r\n    const [articles, setArticles] = useState({});\r\n    const setArticle = (selection)=>{\r\n        setSelectedArticle(selection);\r\n        setHighlighted({[selection.id]:'table-info'});\r\n    }\r\n    const clearHighlighted = ()=>{\r\n        setHighlighted({});\r\n        setSelectedArticle(defaultArticle);\r\n    }\r\n    const filterPredicate = (key, filter)=>{\r\n        if(filter.length === 0) return true;\r\n        let entry = articles[key];\r\n        return (entry.heading.indexOf(filter) > -1)\r\n    }\r\n    const refreshList= callback=>{\r\n        electronStore.articles().then(articles=>{\r\n            debugger;\r\n            setArticles(articles)\r\n        \r\n        });\r\n        callback();\r\n    }\r\n    useEffect(()=>refreshList(()=>{}), []);\r\n    const gn = (thName, val)=> val==='th'? thName: val;\r\n    \r\n    const saveArticle= (key, articleform, callback)=>{\r\n        const {heading, article, liner, postid} = articleform\r\n        const newobj = {[key]:{heading, article, liner, postid}};\r\n            electronStore.saveArticles({...articles, ...newobj}, \r\n                Object.keys(articles).length === 0).then(_=>refreshList(()=>{\r\n                setHighlighted({[key]:'table-info'});\r\n                setSelectedArticle({...articleform, id:key})\r\n                callback();\r\n            }));\r\n    }\r\n    return(\r\n        <WireFrame entries={articles} filterPredicate={filterPredicate} setFormobj={setArticle} \r\n        homepageTitle='home-page-articles' homepageMap = {x=>({heading:x.heading, liner:x.liner, postid:x.postid})}\r\n        highlighted={highlighted} headerControl={<HeaderControl />}\r\n        gridcolumns={{heading:val=>gn('Article', val)}}\r\n        editcontrol={<ActicleInputForm selected={selectedArticle} saveArticle={saveArticle} clearHighlighted={clearHighlighted} />}\r\n        />  \r\n    );\r\n\r\n}\r\nfunction HeaderControl(props){\r\n    const[addons, setAddOns] = useState({resizer:false, og:false, ocr:false});\r\n    return(\r\n        <>\r\n            <div className=\"mb-3\">\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" checked={addons.resizer} \r\n                        onChange={e=>setAddOns({...addons, resizer:e.target.checked})} />\r\n                        <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">Image Resizer</label>\r\n                    </div>\r\n            </div>\r\n            {addons.resizer && <ImageResizer />}\r\n        </>\r\n    );\r\n}\r\nfunction ActicleInputForm(props){\r\n    const {selected, saveArticle, clearHighlighted} = props;\r\n    const[spinner, setSpinner] = useState(false);\r\n    const[readonly, setReadOnly] = useState(false)\r\n    const [form, setForm] = useState({...selected, trigger:false});//\r\n    const [wygState, setwygState] = useState(form.article.length === 0 ? EditorState.createEmpty() :  EditorState.createWithContent(convertFromRaw(JSON.parse(form.article))));\r\n    const getFileBase64 = (file, callback) => {\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        // Since FileReader is asynchronous,\r\n        // we need to pass data back.\r\n        reader.onload = () => callback(reader.result);\r\n        // TODO: catch an error\r\n        reader.onerror = error => {};\r\n    };\r\n      \r\n    const imageUploadCallback = file => new Promise(\r\n        (resolve, reject) => getFileBase64(file, data => resolve({ data: { link: data } }))\r\n    );\r\n\r\n    const editorStateChg = newstate=>{\r\n        setwygState(newstate);\r\n        //setForm({...form, article:JSON.stringify(convertToRaw(wygState.getCurrentContent()))});\r\n    }\r\n    const cleanup= ()=>{\r\n        setSpinner(false);\r\n        setForm(defaultArticle);\r\n        clearHighlighted();\r\n        setwygState(EditorState.createEmpty())\r\n    };\r\n    const saveArticleForm = ()=>{\r\n        let articleText = JSON.stringify(convertToRaw(wygState.getCurrentContent()));\r\n        setForm({...form, trigger:true, article:articleText});\r\n        if(form.heading.length > 0 && form.liner && form.liner.length > 0 && form.postid && form.postid.length > 0)\r\n        {\r\n            setSpinner(true);\r\n            let keyid = form.id === '' ? +new Date() : form.id;\r\n            saveArticle(keyid, {...form, article:articleText}, ()=>{\r\n                setSpinner(false);\r\n                setForm({...form, id:keyid});\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"row mt-3\">\r\n            <div className=\"col-lg-4\">\r\n                <div className=\"shadow p-3 mb-3 bg-white rounded\">\r\n                    <div className=\"input-group mb-2 mt-2\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">Heading</span></div>\r\n                        <input type=\"text\" className={\"form-control \" + (form.heading.length === 0 && form.trigger ? \" is-invalid\" : \"\")}  \r\n                        value={form.heading} onChange={e=>setForm({...form, heading:e.target.value})} />\r\n                        {form.trigger && <div className=\"invalid-feedback\">heading is required</div>}\r\n                    </div>\r\n                    <div className=\"input-group mb-2 mt-2\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">Liner</span></div>\r\n                        <input type=\"text\" className={\"form-control \" + ((!form.liner || form.liner.length === 0) && form.trigger ? \" is-invalid\" : \"\")}  \r\n                        value={!!form.liner ? form.liner : \"\"} onChange={e=>setForm({...form, liner:e.target.value})} />\r\n                        {form.trigger && <div className=\"invalid-feedback\">liner is required</div>}\r\n                    </div>\r\n                    <div className=\"input-group mb-2 mt-2\">\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">postid</span></div>\r\n                        <input type=\"text\" className={\"form-control \" + ((!form.postid || form.postid.length === 0) && form.trigger ? \" is-invalid\" : \"\")}  \r\n                        value={!!form.postid ? form.postid : \"\"} onChange={e=>setForm({...form, postid:e.target.value})} />\r\n                        {form.trigger && <div className=\"invalid-feedback\">postid is required</div>}\r\n                    </div>\r\n                    <div className=\"btn-group-lg\">\r\n                        <button className=\"btn-sm btn-outline-primary\" onClick={saveArticleForm}>\r\n                                {spinner && <span className=\"spinner-border spinner-border-sm\"></span>} \r\n                                {form.id.length === 0  ? \"Add Article\" : \"Update Article\"}\r\n                        </button>\r\n                        <button className=\"btn-sm btn-outline-success ml-2\" onClick={cleanup}>Clear</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-11\">\r\n                <div className=\"input-group mb-1\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Readonly</span>\r\n                        <div className=\"input-group-text\"><input type=\"checkbox\" checked={readonly} onChange={e=>setReadOnly(e.target.checked)} /></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Editor editorState={wygState} wrapperClassName=\"card\" editorClassName=\"card-body wysiwyg editor-images\" readOnly={readonly} toolbarHidden={readonly}\r\n                onEditorStateChange={editorStateChg} toolbar={{image: {uploadCallback: imageUploadCallback,previewImage: true}}}  />\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Articles;","import React, {useState} from 'react';\r\nimport Events from './Events';\r\nimport ImageResizer from './ImageResizer';\r\n\r\nfunction SocialGrps()\r\n{\r\n    const gn = (thName, val)=> val==='th'? thName: val;\r\n    return (<Events filename='social-group-entries' savefilename='save-social-group-entries' homepageTitle='home-page-social'\r\n    \r\n    gridcolumns={{heading:val=>gn('Group Name', val), liner:val=>gn('Group Desc', val)}}></Events>);\r\n}\r\n\r\nexport default SocialGrps;\r\n\r\n","import React, {useState} from 'react';\r\nimport Events from './Events';\r\n//this is for about places.\r\nfunction AboutPlaces()\r\n{\r\n    const gn = (thName, val)=> val==='th'? thName: val;\r\n    return (<Events filename='aboutplaces-entries' savefilename='save-aboutplaces-entries' token='about-places'\r\n    gridcolumns={{heading:val=>gn('Site Name', val), liner:val=>gn('Site Desc', val)}} />);\r\n    \r\n}\r\nexport default AboutPlaces; ","import React from 'react';\r\nimport Events from './Events';\r\nfunction Coupons()\r\n{\r\n    const gn = (thName, val)=> val==='th'? thName: val;\r\n    return (<Events filename='coupons-entries' savefilename='save-coupons-entries' homepageTitle='home-page-coupouns'\r\n    gridcolumns={{heading:val=>gn('Vendor Name', val), liner:val=>gn('Coupon Desc', val)}}></Events>);\r\n}\r\n\r\nexport default Coupons;","import React, {useState, useEffect} from 'react';\r\nimport {electronStore} from './Electron';\r\nimport WireFrame from './WireFrame';\r\n\r\nconst defaultComment = {text:'', trigger:false, by:'', id:'100', when:'', postid:''};\r\nfunction Comments(props){\r\n    const [highlighted, setHighlighted] = useState({});\r\n    const [selections, setSelections] = useState({}); //\"100\":defaultComment\r\n    const [comments, setComments] = useState({});\r\n\r\n    const clearSelectionHighlights = ()=>{\r\n        setHighlighted({});\r\n        setSelections({}); //\"100\":defaultComment\r\n    }\r\n    const setComment = (selection)=>{\r\n        setSelections({...selections, [selection.id]:selection})\r\n        setHighlighted({...highlighted, [selection.id]:'table-info'});\r\n    }\r\n    const filterPredicate = (key, filter)=>{\r\n        if(filter.length === 0) return true;\r\n        let entry = comments[key];\r\n        return (entry.text.indexOf(filter) > -1 ||   entry.by.indexOf(filter) > -1 || key.indexOf(filter) > -1);\r\n    }\r\n    const refreshList= callback=>{\r\n        electronStore.comments().then(entries=>{\r\n            setComments(entries);\r\n        });\r\n        callback();\r\n    }\r\n    useEffect(()=>refreshList(()=>{}), []);\r\n    const saveComm= (key, comment, callback)=>{\r\n        const {text, by, when} = comment;\r\n        if(by.length > 0)\r\n        {\r\n            const newobj = {[key]:{text, by, when}};\r\n            electronStore.saveComment({...comments, ...newobj}, Object.keys(comments).length === 0).then(_=>refreshList(()=>{\r\n                setSelections({...selections, [key]:{...comment, id:key}});\r\n                setHighlighted({...highlighted, [key]:'table-info'});\r\n                callback();\r\n            }));\r\n        }\r\n    }\r\n    const gn = (thName, val)=> val==='th'? thName: val;\r\n    const keymap = cmt => cmt.split('-').slice(2).join('-');\r\n    return (\r\n        <WireFrame entries={comments} filterPredicate={filterPredicate} setFormobj={setComment} highlighted={highlighted} keymap={keymap}\r\n            deleteEntries={{fn:electronStore.saveComment, rf:()=>refreshList(clearSelectionHighlights)}} customclass=\"comment-grid\"\r\n            gridcolumns={{by:val=>gn(\"User Name\", val),text:val=>gn(\"Comment Desc\", val)}}\r\n            editcontrol={\r\n                <div className=\"row mt-4\">\r\n                    <button className=\"btn btn-danger\" style={{position:\"absolute\", right:\"10px\", top:\"0px\"}} \r\n                    onClick={clearSelectionHighlights}>Clear All</button>\r\n                    \r\n                    {Object.keys(selections).map(key=> \r\n                        <Unit key={key} key1={key} selected={selections[key]} saveComm={saveComm} />\r\n                    )}\r\n                </div>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nfunction Unit(props){\r\n    const [form, setForm] = useState({...props.selected, postid:props.key1 === \"100\" ? \"\" : props.key1, trigger:false});\r\n    const {saveComm} = props;\r\n    const saveUnit = ()=>{\r\n        setSpinner(true);\r\n        setForm({...form, trigger:true});\r\n        if(form.postid.length > 0)\r\n        {\r\n            let commentid = `comment-${Number(new Date())}-${form.postid}`;\r\n            saveComm(form.id === \"100\" ? commentid : form.id, form, ()=>{\r\n                setSpinner(false);\r\n                if(form.id===\"100\")\r\n                    setForm(defaultComment);\r\n            });\r\n        }\r\n    }\r\n    const[spinner, setSpinner] = useState(false);\r\n    return (\r\n        <div className=\"mb-2 col-3\">\r\n            <div className=\"card \">\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\" style={{\"padding\":\"5px\"}}>\r\n                        <div className=\"input-group mb-1\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">Id</span></div>\r\n                            <input type=\"text\" className={\"form-control \" + (form.postid.length === 0 && form.trigger ? \" is-invalid\" : \"\")} \r\n                            value={form.postid} onChange={e=>setForm({...form, postid:e.target.value})} />\r\n                            {form.trigger && <div className=\"invalid-feedback\">post id required.</div>}\r\n                        </div>\r\n                        <textarea rows=\"6\" style={{\"width\":\"100%\"}} value={form.text} onChange={e=>setForm({...form, text:e.target.value})} ></textarea>\r\n                        <div className=\"input-group mb-1\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"user name\" value={form.by} onChange={e=>setForm({...form, by:e.target.value})} />\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"date posted\" value={form.when} onChange={e=>setForm({...form, when:e.target.value})} />\r\n\r\n                            <div className=\"input-group-append\">\r\n                                <button className={`btn ${form.id !== \"100\" ? \"btn-success\" : \"btn-info\"} btn-sm`} onClick={saveUnit}>\r\n                                {spinner && <span className=\"spinner-border spinner-border-sm\"></span>}Save</button>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"text-secondary\">{form.id !== \"100\" ? form.id :\"add new entry\"}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Comments;","import React, {useState, useEffect} from 'react';\r\nimport {electronStore} from './Electron';\r\nimport WireFrame from './WireFrame';\r\nconst defaultPost = {showinlist:true, visits:0,ip:'',showallfiles:false, premium:false, header:'', postid:'',stamp:0, trigger:false, files:{}};\r\nconst axios = require('axios').default;\r\n\r\nfunction Posts(props){\r\n    const [highlighted, setHighlighted] = useState({});\r\n    const [selections, setSelections] = useState({}); //\"100\":defaultPost\r\n    const [posts, setPosts] = useState({});\r\n    const clearSelectionHighlights = ()=>{\r\n        setHighlighted({});\r\n        setSelections({}); //\"100\":defaultComment\r\n    }\r\n    const setPost = (selection)=>{\r\n        \r\n        setSelections({[selection.id]:selection})\r\n        setHighlighted({[selection.id]:'table-info'});\r\n    }\r\n\r\n    const filterPredicate = (key, filter)=>{\r\n        if(filter.length === 0) return true;\r\n        let entry = posts[key];\r\n        return (entry.header.indexOf(filter) > -1 || entry.owner.indexOf(filter) > -1);\r\n    }\r\n    const refreshList= callback=>{\r\n        electronStore.posts().then(entries=>{\r\n            setPosts(entries);\r\n        });\r\n        callback();\r\n    }\r\n    useEffect(()=>refreshList(()=>{}), []);\r\n    const savePost= (key, post, callback)=>{\r\n        const {showinlist, visits, showallfiles, premium, files, ip, owner} = post;\r\n        debugger;\r\n        if(!isNaN(visits))\r\n        {\r\n            const updtobj = {[`${key}.files`]:files, [`${key}.ip`]:ip, [`${key}.owner`]:owner, [`${key}.showinlist`]:showinlist,[`${key}.visits`]:visits,[`${key}.showallfiles`]:showallfiles, [`${key}.premium`]:premium};\r\n            electronStore.savePosts(updtobj, Object.keys(posts).length === 0).then(_=>refreshList(()=>{\r\n                setSelections({...selections, [key]:{...post, id:key}});\r\n                setHighlighted({...highlighted, [key]:'table-info'});\r\n                callback();\r\n            }));\r\n        }\r\n    }\r\n    const gn = (thName, val)=> val==='th'? thName: val;\r\n    return (\r\n        <WireFrame entries={posts} filterPredicate={filterPredicate} setFormobj={setPost} highlighted={highlighted} \r\n            deleteEntries={{fn:electronStore.savePosts, rf:()=>refreshList(clearSelectionHighlights)}} customclass=\"comment-grid\"\r\n            gridcolumns={{header:val=>gn(\"Post Header\", val),visits:val=>gn(\"Visits\", val), owner:val=>gn(\"Secret\", val)}}\r\n            headerControl={<HeaderControl />}\r\n            editcontrol={\r\n                <div className=\"row mt-4\">\r\n                    <button className=\"btn btn-danger\" style={{position:\"absolute\", right:\"10px\", top:\"0px\"}} \r\n                    onClick={clearSelectionHighlights}>Clear All</button>\r\n                    \r\n                    {Object.keys(selections).map(key=> \r\n                        <Unit key={key} key1={key} selected={selections[key]} savePost={savePost} />\r\n                    )}\r\n                </div>\r\n            }\r\n        />\r\n    );\r\n}\r\nfunction Unit(props){\r\n    const [form, setForm] = useState({...props.selected, trigger:false});\r\n    const {savePost} = props;\r\n    const[spinner, setSpinner] = useState(false);\r\n    const[uspinner, setUspinner] = useState(false);\r\n    \r\n    const cloneFilesList = (linklist)=>{\r\n        let keys = Object.keys(form.files);\r\n        let linkKeys = Object.keys(linklist);\r\n        let cloneObj = {};\r\n        for(let i = 0; i < keys.length; i++){\r\n            if(form.files[keys[i]].status === 'New' && !form.files[keys[i]].active)\r\n                continue;\r\n            if(form.files[keys[i]].status === 'New' && form.files[keys[i]].active){\r\n                let matchlink = linkKeys.find(x=>x.indexOf(keys[i]) > -1);    \r\n\r\n                cloneObj[keys[i]] = {...form.files[keys[i]], status:'Upload', link:linklist[matchlink]};\r\n                delete cloneObj[keys[i]].blob;\r\n            }\r\n            else\r\n                cloneObj[keys[i]] = {...form.files[keys[i]]};\r\n        }\r\n        return cloneObj;\r\n    }\r\n    const UploadAllFiles = ()=> {\r\n        const formData = new FormData();\r\n        let noempty = false;\r\n        let aryKeys = Object.keys(form.files);\r\n        for(let i = 0; i < aryKeys.length; i++){\r\n            if(form.files[aryKeys[i]].active && form.files[aryKeys[i]].status === 'New'){\r\n                formData.append(form.files[aryKeys[i]].name, form.files[aryKeys[i]].blob);\r\n                noempty = true;\r\n            }\r\n        }\r\n        if(noempty)\r\n        {\r\n            setUspinner(true);\r\n            fetch('https://us-central1-burghindian.cloudfunctions.net/upLoadFiles', {body:formData, method:'POST'})\r\n            .then(response=>response.json())\r\n            .then(data=>{\r\n                \r\n                let newObj = cloneFilesList(data.uploadfiles);\r\n                setForm({...form, files: newObj});\r\n                \r\n            }).catch(err=>{\r\n                debugger;\r\n            }).finally(_=>{\r\n                setUspinner(false);\r\n            });\r\n        }\r\n    }\r\n    const UplodFileChange = (key, props) =>{\r\n        let fileobj = form.files[key];\r\n        setForm({...form, files: {...form.files, [key]:{...fileobj, ...props}}});\r\n    }\r\n    const SelecUploadFiles = list =>{\r\n        let obj = {};\r\n        for(let i = 0; i < list.length; i++)\r\n            obj[list[i].name] = {name:list[i].name, link:'', blob:list[i], size:list[i].size, active:true, status:'New', stamp:Number(new Date())};\r\n        setForm({...form, files: {...form.files, ...obj}});\r\n    };\r\n    const saveUnit = ()=>{\r\n        if(!isNaN(form.visits))\r\n        {\r\n            setSpinner(true);\r\n            savePost(form.id, form, ()=>{\r\n                setSpinner(false);\r\n            });\r\n        }\r\n    }\r\n    const dt = (key)=>{\r\n        let d = new Date(key*1);\r\n        return d.toLocaleDateString() + \" \" + d.toLocaleTimeString();\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"mb-2 col-4\">\r\n                <div className=\"card\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\">\r\n                            <div className=\"input-group mb-1\">\r\n                                <div className=\"input-group-prepend\"><span className=\"input-group-text\">Header</span></div>\r\n                                <textarea className=\"form-control\" value={form.header} readOnly></textarea>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <div className=\"input-group mb-1\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\">Show in List</span>\r\n                                    <div className=\"input-group-text\"><input type=\"checkbox\" checked={!!form.showinlist} onChange={e=>setForm({...form, showinlist:e.target.checked})} /></div>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <div className=\"input-group mb-1\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\">Show All files</span>\r\n                                    <div className=\"input-group-text\"><input type=\"checkbox\" checked={!!form.showallfiles} onChange={e=>setForm({...form, showallfiles:e.target.checked})} /></div>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <div className=\"input-group mb-1\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\">Premium</span>\r\n                                    <div className=\"input-group-text\"><input type=\"checkbox\" checked={!!form.premium} onChange={e=>setForm({...form, premium:e.target.checked})} /></div>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <div className=\"input-group mb-1\">\r\n                                <div className=\"input-group-prepend\"><span className=\"input-group-text\">visits</span></div>\r\n                                <input type=\"text\" value={form.visits} onChange={e=>setForm({...form, visits:e.target.value})} style={{'textAlign':'center', 'width':'40px'}}  />\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <div className=\"input-group mb-1\">\r\n                                <div className=\"input-group-prepend\"><span className=\"input-group-text\">ip</span></div>\r\n                                <input type=\"text\" value={!form.ip ? '' : form.ip} onChange={e=>setForm({...form, ip:e.target.value})} style={{'textAlign':'center', 'width':'140px'}}  />\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <div className=\"input-group mb-1\">\r\n                                <div className=\"input-group-prepend\"><span className=\"input-group-text\">Secret</span></div>\r\n                                <input type=\"text\" value={!form.owner ? '' : form.owner} onChange={e=>setForm({...form, owner:e.target.value})} style={{'textAlign':'center', 'width':'240px'}}  />\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item\"><b>{dt(form.stamp)}</b></li>\r\n                        <li className=\"list-group-item\">\r\n                            <button className=\"btn-info btn-sm\" onClick={saveUnit}>{spinner && <span className=\"spinner-border spinner-border-sm\"></span>}Save</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mb-2 col-6\">\r\n                <div className=\"card\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li  className=\"list-group-item\">\r\n                            <div className=\"input-group mb-1\">\r\n                                <div className=\"input-group-prepend\"><span className=\"input-group-text\">upload files</span></div>\r\n                                <input type=\"file\" id=\"fileupload\" onChange={e=>SelecUploadFiles(e.target.files)} multiple=\"multiple\" />\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <table className=\"table table-sm table-striped\">\r\n                                <thead>\r\n                                    <tr><th></th><th>status</th><th>Name</th></tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {form.files && Object.keys(form.files).map(key=><tr key={key} style={{'opacity': form.files[key].active ? '1' :'.5' }}>\r\n                                        <td><input type=\"checkbox\" checked={form.files[key].active} onChange={e=>UplodFileChange(key, {active:e.target.checked})} ></input></td>\r\n                                        <td>{form.files[key].status}</td>\r\n                                        <td>\r\n                                            {form.files[key].link && <a href={form.files[key].link} target=\"_blank\">{form.files[key].name}</a>}\r\n                                            {!form.files[key].link && <span>{form.files[key].name}</span>}\r\n                                        </td>\r\n                                    </tr>)}\r\n                                    <tr>\r\n                                        <td colSpan=\"3\">\r\n                                            <button className=\"btn btn-sm btn-info\" onClick={e=>UploadAllFiles()}>\r\n                                                {uspinner && <span className=\"spinner-border spinner-border-sm\"></span>} Upload Files\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction HeaderControl(props){\r\n    let def={header:'', trigger:false, postid:'', overrideid:''};\r\n    const[spinner, setSpinner] = useState(false);\r\n    const[form,setForm] = useState(def);\r\n    const clearpost=()=>{\r\n        setForm(def);\r\n    }\r\n    const savepost=()=>{\r\n        setForm({...form, trigger:true});\r\n        if(form.header.length > 0){\r\n            setSpinner(true);\r\n            let data = {header:form.header,owner:'ADMIN SDK', overrideid:form.overrideid, post:'alias post'};\r\n            axios.post('https://us-central1-burghindian.cloudfunctions.net/createPost', data)\r\n            .then(postjson=>{\r\n                debugger;\r\n                setForm({...form, trigger:false, postid:postjson.data.postid});\r\n                setSpinner(false);\r\n            }).catch(reason=>{\r\n                console.log(reason);\r\n                setSpinner(false);\r\n            });\r\n               \r\n        }\r\n    }\r\n    const[addons, setAddOns] = useState({formcreate:false});\r\n    return(\r\n        <div className=\"col-6\">\r\n\r\n            <div className=\"mb-3\">\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" checked={addons.resizer} \r\n                    onChange={e=>setAddOns({...addons, formcreate:e.target.checked})} />\r\n                    <label className=\"form-check-label\" htmlFor=\"inlineCheckbox1\">Create Post</label>\r\n                </div>\r\n            </div>\r\n            {addons.formcreate && <div className=\"mb-3\">\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                        <div className=\"input-group mb-1\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">Post Id</span></div>\r\n                            <input type=\"text\" className=\"form-control\" value={form.overrideid} \r\n                             onChange={e=>setForm({...form, overrideid:e.target.value})}></input>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <div className=\"input-group mb-1\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">Header</span></div>\r\n                            <input type=\"text\"  className={\"form-control \" + (form.header.length === 0 && form.trigger ? \" is-invalid\" : \"\")}\r\n                            value={form.header} onChange={e=>setForm({...form, header:e.target.value})}></input>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <button  onClick={e=>savepost()} className=\"btn-info btn-sm\">{spinner && <span className=\"spinner-border spinner-border-sm\"></span>}Create</button>\r\n                        <button  onClick={e=>clearpost()} className=\"btn-danger btn-sm ml-1\">Clear</button>\r\n                    </li>\r\n                    \r\n                    {form.postid.length > 0 && <li className=\"list-group-item\">\r\n                        <div className=\"alert alert-secondary\">{form.postid}</div>\r\n                    </li>}\r\n                </ul>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\nexport default Posts;","\r\nexport const firebase = require('firebase');\r\nconst firebaseui= require('firebaseui')\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXj2F1t-hYp4FQtQoCOL0C5a3XVPmDlgc\",\r\n    authDomain: \"burghindian.firebaseapp.com\",\r\n    databaseURL: \"https://burghindian.firebaseio.com\",\r\n    projectId: \"burghindian\",\r\n    storageBucket: \"burghindian.appspot.com\",\r\n    messagingSenderId: \"1096043058572\",\r\n    appId: \"1:1096043058572:web:6330f1f796b29e033332a9\"\r\n    \r\n  };\r\n  if(firebase.apps.length === 0)\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport const ui = new firebaseui.auth.AuthUI(firebase.auth())\r\n\r\n","import React, {useState} from 'react';\r\nimport Tree from './Tree';\r\n\r\nimport { Route, Switch } from 'react-router';\r\nimport FileEntries from './Application/FileEntries';\r\nimport HomeEntries from './Application/HomeEntries';\r\nimport Accommodation from './Application/Accommodation';\r\nimport Events from './Application/Events';\r\nimport Gallery from './Application/Gallery';\r\nimport AllMovies from './Application/AllMovies';\r\nimport Articles from './Application/Articles'\r\nimport SocialGrps from './Application/Socialgrps';\r\nimport AboutPlaces from './Application/AboutPlaces';\r\nimport Coupons from './Application/Coupons';\r\nimport Comments from './Application/Comments';\r\nimport Posts from './Application/Posts';\r\nimport Home from './Home';\r\nimport LoginUI from './LoginUI';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Layout(props){\r\n    const [leaf, setLeaf] = useState(props.history ? props.history.path : '/');    \r\n    props.history.listen((location, action) => {\r\n        setLeaf(location.pathname);\r\n    });\r\n    \r\n    return (\r\n        <div className=\"row\" style={{position:\"relative\", padding:\"0px\", margin:\"0px\", height:\"40%\"}} >\r\n            <div className=\"col-lg-2 col-md-2 tree-cover\" id=\"leftmenu\" style={{marginLeft:\"-10px\"}}>\r\n                <div>\r\n                   {<Tree items={['About Places', 'Accommodation', 'Articles',  'All Movies', 'Comments', 'Coupons', 'Events', 'File Entries', 'Gallery', 'Posts', 'Social Groups']} leaf={leaf}/>}\r\n                   {false && <LoginUI />}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-10 col-md-10\" style={{padding:\"5px\"}} id=\"body\">\r\n                <Switch>\r\n                    <Route exact path='/' component={HomeEntries}></Route>\r\n                    <Route exact path='/File Entries' component={FileEntries}></Route>\r\n                    <Route exact path=\"/Accommodation\" component={Accommodation}></Route>\r\n                    <Route exact path=\"/Comments\" component={Comments}></Route>\r\n                    <Route exact path=\"/Events\" component={Events}></Route>\r\n                    <Route exact path=\"/Coupons\" component={Coupons}></Route>\r\n                    <Route exact path=\"/Gallery\" component={Gallery}></Route>\r\n                    <Route exact path=\"/All Movies\" component={AllMovies}></Route>\r\n                    <Route exact path=\"/Articles\" component={Articles}></Route>\r\n                    <Route exact path=\"/About Places\" component={AboutPlaces}></Route>\r\n                    <Route exact path=\"/Social Groups\" component={SocialGrps}></Route>\r\n                    <Route exact path=\"/Posts\" component={Posts}></Route>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(Layout);","import React from 'react';\r\nimport './App.css';\r\nimport Layout from './Layout';\r\nimport {Link} from 'react-router-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nfunction App(props) {\r\n    \r\n\r\n    return (\r\n    <Router>\r\n        <div className=\"navbar\" style={{marginBottom:\"0px\", padding:\"0px\"}}>\r\n            <div className=\"navbar-inner\" style={{width:\"100%\", padding:\"10px\"}}>\r\n                <div style={{float:\"left\"}}>\r\n                    <Link to=\"/\"><img alt=\"burgh indian admin\" src=\"../assets/img/header_logo.png\" /></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Layout />\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"footer-wrapper\">\r\n                    <div className=\"row\">\r\n                        <div className=\"span12 footer-block\">\r\n                            <div className=\"footer-content\" style={{textAlign:\"center\"}}>\r\n                                <b>Burgh Indian | burghindianit@gmail.com | ©2019 All Rights Reserved.</b>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}